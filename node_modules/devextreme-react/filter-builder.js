/*!
 * devextreme-react
 * Version: 18.2.13
 * Build date: Wed May 27 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var filter_builder_1 = require("devextreme/ui/filter_builder");
var prop_types_1 = require("prop-types");
var component_1 = require("./core/component");
var nested_option_1 = require("./core/nested-option");
var FilterBuilder = /** @class */ (function (_super) {
    __extends(FilterBuilder, _super);
    function FilterBuilder() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._WidgetClass = filter_builder_1.default;
        _this._defaults = {
            defaultValue: "value"
        };
        _this._expectedChildren = {
            customOperation: { optionName: "customOperations", isCollectionItem: true },
            field: { optionName: "fields", isCollectionItem: true },
            filterOperationDescriptions: { optionName: "filterOperationDescriptions", isCollectionItem: false },
            groupOperationDescriptions: { optionName: "groupOperationDescriptions", isCollectionItem: false }
        };
        return _this;
    }
    Object.defineProperty(FilterBuilder.prototype, "instance", {
        get: function () {
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    return FilterBuilder;
}(component_1.Component));
exports.FilterBuilder = FilterBuilder;
FilterBuilder.propTypes = {
    accessKey: prop_types_1.PropTypes.string,
    activeStateEnabled: prop_types_1.PropTypes.bool,
    allowHierarchicalFields: prop_types_1.PropTypes.bool,
    customOperations: prop_types_1.PropTypes.array,
    disabled: prop_types_1.PropTypes.bool,
    elementAttr: prop_types_1.PropTypes.object,
    fields: prop_types_1.PropTypes.array,
    filterOperationDescriptions: prop_types_1.PropTypes.object,
    focusStateEnabled: prop_types_1.PropTypes.bool,
    groupOperationDescriptions: prop_types_1.PropTypes.object,
    groupOperations: prop_types_1.PropTypes.array,
    height: prop_types_1.PropTypes.oneOfType([
        prop_types_1.PropTypes.func,
        prop_types_1.PropTypes.number,
        prop_types_1.PropTypes.string
    ]),
    hint: prop_types_1.PropTypes.string,
    hoverStateEnabled: prop_types_1.PropTypes.bool,
    maxGroupLevel: prop_types_1.PropTypes.number,
    onContentReady: prop_types_1.PropTypes.func,
    onDisposing: prop_types_1.PropTypes.func,
    onEditorPrepared: prop_types_1.PropTypes.func,
    onEditorPreparing: prop_types_1.PropTypes.func,
    onInitialized: prop_types_1.PropTypes.func,
    onOptionChanged: prop_types_1.PropTypes.func,
    onValueChanged: prop_types_1.PropTypes.func,
    rtlEnabled: prop_types_1.PropTypes.bool,
    tabIndex: prop_types_1.PropTypes.number,
    value: prop_types_1.PropTypes.oneOfType([
        prop_types_1.PropTypes.array,
        prop_types_1.PropTypes.func,
        prop_types_1.PropTypes.string
    ]),
    visible: prop_types_1.PropTypes.bool,
    width: prop_types_1.PropTypes.oneOfType([
        prop_types_1.PropTypes.func,
        prop_types_1.PropTypes.number,
        prop_types_1.PropTypes.string
    ])
};
// tslint:disable:max-classes-per-file
// owners:
// FilterBuilder
var CustomOperation = /** @class */ (function (_super) {
    __extends(CustomOperation, _super);
    function CustomOperation() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    CustomOperation.OptionName = "customOperations";
    CustomOperation.IsCollectionItem = true;
    CustomOperation.TemplateProps = [{
            tmplOption: "editorTemplate",
            render: "editorRender",
            component: "editorComponent",
            keyFn: "editorKeyFn"
        }];
    return CustomOperation;
}(nested_option_1.default));
exports.CustomOperation = CustomOperation;
// owners:
// FilterBuilder
var Field = /** @class */ (function (_super) {
    __extends(Field, _super);
    function Field() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Field.OptionName = "fields";
    Field.IsCollectionItem = true;
    Field.ExpectedChildren = {
        format: { optionName: "format", isCollectionItem: false },
        lookup: { optionName: "lookup", isCollectionItem: false }
    };
    Field.TemplateProps = [{
            tmplOption: "editorTemplate",
            render: "editorRender",
            component: "editorComponent",
            keyFn: "editorKeyFn"
        }];
    return Field;
}(nested_option_1.default));
exports.Field = Field;
// owners:
// FilterBuilder
var FilterOperationDescriptions = /** @class */ (function (_super) {
    __extends(FilterOperationDescriptions, _super);
    function FilterOperationDescriptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FilterOperationDescriptions.OptionName = "filterOperationDescriptions";
    return FilterOperationDescriptions;
}(nested_option_1.default));
exports.FilterOperationDescriptions = FilterOperationDescriptions;
// owners:
// Field
var Format = /** @class */ (function (_super) {
    __extends(Format, _super);
    function Format() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Format.OptionName = "format";
    return Format;
}(nested_option_1.default));
exports.Format = Format;
// owners:
// FilterBuilder
var GroupOperationDescriptions = /** @class */ (function (_super) {
    __extends(GroupOperationDescriptions, _super);
    function GroupOperationDescriptions() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GroupOperationDescriptions.OptionName = "groupOperationDescriptions";
    return GroupOperationDescriptions;
}(nested_option_1.default));
exports.GroupOperationDescriptions = GroupOperationDescriptions;
// owners:
// Field
var Lookup = /** @class */ (function (_super) {
    __extends(Lookup, _super);
    function Lookup() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Lookup.OptionName = "lookup";
    return Lookup;
}(nested_option_1.default));
exports.Lookup = Lookup;
exports.default = FilterBuilder;
