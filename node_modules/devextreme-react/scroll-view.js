/*!
 * devextreme-react
 * Version: 18.2.13
 * Build date: Wed May 27 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var scroll_view_1 = require("devextreme/ui/scroll_view");
var prop_types_1 = require("prop-types");
var component_1 = require("./core/component");
var ScrollView = /** @class */ (function (_super) {
    __extends(ScrollView, _super);
    function ScrollView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._WidgetClass = scroll_view_1.default;
        return _this;
    }
    Object.defineProperty(ScrollView.prototype, "instance", {
        get: function () {
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    return ScrollView;
}(component_1.Component));
exports.ScrollView = ScrollView;
ScrollView.propTypes = {
    bounceEnabled: prop_types_1.PropTypes.bool,
    direction: prop_types_1.PropTypes.oneOf([
        "both",
        "horizontal",
        "vertical"
    ]),
    disabled: prop_types_1.PropTypes.bool,
    elementAttr: prop_types_1.PropTypes.object,
    height: prop_types_1.PropTypes.oneOfType([
        prop_types_1.PropTypes.func,
        prop_types_1.PropTypes.number,
        prop_types_1.PropTypes.string
    ]),
    onDisposing: prop_types_1.PropTypes.func,
    onInitialized: prop_types_1.PropTypes.func,
    onOptionChanged: prop_types_1.PropTypes.func,
    onPullDown: prop_types_1.PropTypes.func,
    onReachBottom: prop_types_1.PropTypes.func,
    onScroll: prop_types_1.PropTypes.func,
    onUpdated: prop_types_1.PropTypes.func,
    pulledDownText: prop_types_1.PropTypes.string,
    pullingDownText: prop_types_1.PropTypes.string,
    reachBottomText: prop_types_1.PropTypes.string,
    refreshingText: prop_types_1.PropTypes.string,
    rtlEnabled: prop_types_1.PropTypes.bool,
    scrollByContent: prop_types_1.PropTypes.bool,
    scrollByThumb: prop_types_1.PropTypes.bool,
    showScrollbar: prop_types_1.PropTypes.oneOf([
        "onScroll",
        "onHover",
        "always",
        "never"
    ]),
    useNative: prop_types_1.PropTypes.bool,
    width: prop_types_1.PropTypes.oneOfType([
        prop_types_1.PropTypes.func,
        prop_types_1.PropTypes.number,
        prop_types_1.PropTypes.string
    ])
};
exports.default = ScrollView;
