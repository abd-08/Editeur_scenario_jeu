/*!
 * devextreme-react
 * Version: 18.2.13
 * Build date: Wed May 27 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var events = require("devextreme/events");
var React = require("react");
var common_1 = require("devextreme/core/utils/common");
var options_manager_1 = require("./options-manager");
var template_1 = require("./template");
var templates_manager_1 = require("./templates-manager");
var templates_store_1 = require("./templates-store");
var widget_config_1 = require("./widget-config");
var DX_REMOVE_EVENT = "dxremove";
exports.DX_REMOVE_EVENT = DX_REMOVE_EVENT;
var ComponentBase = /** @class */ (function (_super) {
    __extends(ComponentBase, _super);
    function ComponentBase(props) {
        var _this = _super.call(this, props) || this;
        _this._templateProps = [];
        _this._updateScheduled = false;
        _this._prepareProps = _this._prepareProps.bind(_this);
        _this._scheduleUpdate = _this._scheduleUpdate.bind(_this);
        _this._templatesStore = new templates_store_1.TemplatesStore(_this._scheduleUpdate);
        _this._templatesManager = new templates_manager_1.default(_this._templatesStore);
        _this._optionsManager = new options_manager_1.default(function (name) { return _this.props[name]; }, _this._templatesManager);
        return _this;
    }
    ComponentBase.prototype.render = function () {
        return React.createElement.apply(React, ["div",
            this._getElementProps()].concat(this._prepareChildren(), this._templatesStore.renderWrappers()));
    };
    ComponentBase.prototype.componentDidMount = function () {
        this._updateCssClasses(null, this.props);
    };
    ComponentBase.prototype.componentDidUpdate = function (prevProps) {
        this._updateCssClasses(prevProps, this.props);
        var preparedProps = this._prepareProps(this.props);
        this._optionsManager.updateOptions(preparedProps.options, prevProps);
    };
    ComponentBase.prototype.componentWillUnmount = function () {
        if (this._instance) {
            events.triggerHandler(this._element, DX_REMOVE_EVENT);
            this._instance.dispose();
        }
        this._optionsManager.dispose();
    };
    ComponentBase.prototype._prepareChildren = function (args) {
        var _this = this;
        if (args === void 0) { args = []; }
        this._optionsManager.resetNestedElements();
        React.Children.forEach(this.props.children, function (child) {
            if (child) {
                args.push(_this._preprocessChild(child) || child);
            }
        });
        return args;
    };
    ComponentBase.prototype._preprocessChild = function (component) {
        var nestedTemplate = template_1.findProps(component);
        if (nestedTemplate) {
            this._templatesManager.addNested(nestedTemplate);
        }
        return this._optionsManager.registerNestedOption(component, this._expectedChildren) || component;
    };
    ComponentBase.prototype._createWidget = function (element) {
        element = element || this._element;
        var nestedProps = this._optionsManager.getNestedOptionsObjects();
        var props = __assign({}, this.props, nestedProps);
        var preparedProps = this._prepareProps(props);
        var options = __assign({ templatesRenderAsynchronously: true }, preparedProps.defaults, preparedProps.options, this._templatesManager.options);
        this._optionsManager.wrapEventHandlers(options);
        this._instance = new this._WidgetClass(element, options);
        this._optionsManager.setInstance(this._instance);
        this._instance.on("optionChanged", this._optionsManager.handleOptionChange);
    };
    ComponentBase.prototype._scheduleUpdate = function () {
        var _this = this;
        if (this._updateScheduled) {
            return;
        }
        this._updateScheduled = true;
        common_1.deferUpdate(function () {
            _this.forceUpdate();
            _this._updateScheduled = false;
        });
    };
    ComponentBase.prototype._getElementProps = function () {
        var _this = this;
        var elementProps = {
            ref: function (element) { return _this._element = element; }
        };
        widget_config_1.elementPropNames.forEach(function (name) {
            if (name in _this.props) {
                elementProps[name] = _this.props[name];
            }
        });
        return elementProps;
    };
    ComponentBase.prototype._updateCssClasses = function (prevProps, newProps) {
        var _a, _b;
        var prevClassName = prevProps ? widget_config_1.getClassName(prevProps) : undefined;
        var newClassName = widget_config_1.getClassName(newProps);
        if (prevClassName === newClassName) {
            return;
        }
        if (prevClassName) {
            var classNames = prevClassName.split(" ").filter(function (c) { return c; });
            if (classNames.length) {
                (_a = this._element.classList).remove.apply(_a, classNames);
            }
        }
        if (newClassName) {
            var classNames = newClassName.split(" ").filter(function (c) { return c; });
            if (classNames.length) {
                (_b = this._element.classList).add.apply(_b, classNames);
            }
        }
    };
    ComponentBase.prototype._prepareProps = function (rawProps) {
        var _this = this;
        var separatedProps = widget_config_1.separateProps(rawProps, this._defaults, this._templateProps);
        var templatesOptions = this._templatesManager.add({
            useChildren: function () { return false; },
            ownerName: "",
            templateProps: this._templateProps,
            props: separatedProps.templates,
            propsGetter: function (prop) { return _this.props[prop]; }
        });
        return {
            options: __assign({}, separatedProps.options, templatesOptions),
            defaults: separatedProps.defaults
        };
    };
    return ComponentBase;
}(React.PureComponent));
exports.ComponentBase = ComponentBase;
