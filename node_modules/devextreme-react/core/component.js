/*!
 * devextreme-react
 * Version: 18.2.13
 * Build date: Wed May 27 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var component_base_1 = require("./component-base");
var extension_component_1 = require("./extension-component");
var Component = /** @class */ (function (_super) {
    __extends(Component, _super);
    function Component() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._extensions = [];
        return _this;
    }
    Component.prototype.componentDidMount = function () {
        var _this = this;
        _super.prototype.componentDidMount.call(this);
        this._createWidget();
        this._extensions.forEach(function (extension) { return extension.call(_this, _this._element); });
    };
    Component.prototype._prepareChildren = function () {
        var args = [];
        if (isSingleTextNode(this.props.children)) {
            args.push(React.Fragment);
        }
        return _super.prototype._prepareChildren.call(this, args);
    };
    Component.prototype._preprocessChild = function (component) {
        return this._registerExtension(component) || _super.prototype._preprocessChild.call(this, component);
    };
    Component.prototype._registerExtension = function (component) {
        var _this = this;
        if (!extension_component_1.ExtensionComponent.isPrototypeOf(component.type)) {
            return null;
        }
        return React.cloneElement(component, {
            onMounted: function (callback) {
                _this._extensions.push(callback);
            }
        });
    };
    return Component;
}(component_base_1.ComponentBase));
exports.Component = Component;
function isSingleTextNode(input) {
    var children = React.Children.toArray(input);
    return children.length === 1 && typeof children[0] === "string";
}
