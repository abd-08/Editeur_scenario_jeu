/*!
 * devextreme-react
 * Version: 18.2.13
 * Build date: Wed May 27 2020
 *
 * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED
 *
 * This software may be modified and distributed under the terms
 * of the MIT license. See the LICENSE file in the root of the project for details.
 *
 * https://github.com/DevExpress/devextreme-react
 */

"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var NestedOption = /** @class */ (function (_super) {
    __extends(NestedOption, _super);
    function NestedOption(props) {
        var _this = _super.call(this, props) || this;
        _this._meta = props.meta;
        _this._markOptionAsDirty();
        return _this;
    }
    NestedOption.prototype.render = function () {
        if (!this.props.children || !this._meta) {
            return null;
        }
        var registerNestedOption = this._meta.registerNestedOption;
        var children = [];
        React.Children.forEach(this.props.children, function (c) {
            var processedChild = registerNestedOption(c);
            if (processedChild) {
                children.push(processedChild);
            }
        });
        return children.length === 0
            ? null
            : React.createElement.apply(React, [React.Fragment, {}].concat(children));
    };
    NestedOption.prototype.componentDidUpdate = function (prevProps) {
        if (this._meta) {
            this._meta.updateFunc(getCleanProps(this.props), prevProps);
        }
    };
    NestedOption.prototype.componentWillUnmount = function () {
        this._markOptionAsDirty();
    };
    NestedOption.prototype._markOptionAsDirty = function () {
        if (this._meta) {
            this._meta.makeDirty();
        }
    };
    return NestedOption;
}(React.PureComponent));
function getCleanProps(props) {
    var meta = props.meta, cleanProps = __rest(props, ["meta"]);
    return cleanProps;
}
function createOptionComponent(rawElement, meta) {
    var props = { meta: meta };
    return React.cloneElement(rawElement, props);
}
exports.createOptionComponent = createOptionComponent;
exports.default = NestedOption;
