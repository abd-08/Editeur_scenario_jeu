{"ast":null,"code":"import { activites, quetes, scenarios, taches } from \"../../data/data\";\n/*\r\n    Prend l'id de l'activité en paramètre.\r\n    Retourne son indice dans la liste des activités.\r\n */\n\nexport function accesActiviteIndice(id) {\n  return activites.findIndex(v => v.id === id);\n}\n/*\r\n    Remplace l'activité par une autre\r\n */\n\nexport function modificationActivite(activite, id) {\n  let i = accesActiviteIndice(id);\n  activites[i] = activite;\n}\n/*\r\nexport function supprimerActivite(id){\r\n    activites = activites.filter(a=>a.id!==id);\r\n\r\n    let scenes = scenarios.filter(s=>s.idPere===id);\r\n\r\n    let quest = [];\r\n    for (let i=0;i<scenes.length;i++){\r\n        quest = quetes.filter(q=>q.idPere===scenes[i].id);\r\n        for (let j=0;j<quest.length;j++){\r\n            taches=taches.filter(t=>t.idPere!==quest[j].id);\r\n        }\r\n        quetes=quetes.filter(q=>q.idPere!==scenes[i].id)\r\n    }\r\n    scenarios=scenarios.filter(s=>s.idPere!==id);\r\n    return null;\r\n}\r\n*/\n\nexport function ajouterActivite(activite) {\n  activites.push(activite);\n  return null;\n}","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\fonctions\\helper\\ActiviteHelper.js"],"names":["activites","quetes","scenarios","taches","accesActiviteIndice","id","findIndex","v","modificationActivite","activite","i","ajouterActivite","push"],"mappings":"AAAA,SAAQA,SAAR,EAAkBC,MAAlB,EAAyBC,SAAzB,EAAmCC,MAAnC,QAAgD,iBAAhD;AAEA;;;;;AAIA,OAAO,SAASC,mBAAT,CAA6BC,EAA7B,EAAgC;AACnC,SAAOL,SAAS,CAACM,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACF,EAAF,KAASA,EAAlC,CAAP;AACH;AAED;;;;AAGA,OAAO,SAASG,oBAAT,CAA8BC,QAA9B,EAAuCJ,EAAvC,EAA0C;AAC7C,MAAIK,CAAC,GAAGN,mBAAmB,CAACC,EAAD,CAA3B;AACAL,EAAAA,SAAS,CAACU,CAAD,CAAT,GAAaD,QAAb;AACH;AAGD;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,SAASE,eAAT,CAAyBF,QAAzB,EAAmC;AACtCT,EAAAA,SAAS,CAACY,IAAV,CAAeH,QAAf;AAEA,SAAO,IAAP;AACH","sourcesContent":["import {activites,quetes,scenarios,taches} from \"../../data/data\";\r\n\r\n/*\r\n    Prend l'id de l'activité en paramètre.\r\n    Retourne son indice dans la liste des activités.\r\n */\r\nexport function accesActiviteIndice(id){\r\n    return activites.findIndex(v => v.id === id);\r\n}\r\n\r\n/*\r\n    Remplace l'activité par une autre\r\n */\r\nexport function modificationActivite(activite,id){\r\n    let i = accesActiviteIndice(id);\r\n    activites[i]=activite;\r\n}\r\n\r\n\r\n/*\r\nexport function supprimerActivite(id){\r\n    activites = activites.filter(a=>a.id!==id);\r\n\r\n    let scenes = scenarios.filter(s=>s.idPere===id);\r\n\r\n    let quest = [];\r\n    for (let i=0;i<scenes.length;i++){\r\n        quest = quetes.filter(q=>q.idPere===scenes[i].id);\r\n        for (let j=0;j<quest.length;j++){\r\n            taches=taches.filter(t=>t.idPere!==quest[j].id);\r\n        }\r\n        quetes=quetes.filter(q=>q.idPere!==scenes[i].id)\r\n    }\r\n    scenarios=scenarios.filter(s=>s.idPere!==id);\r\n    return null;\r\n}\r\n*/\r\nexport function ajouterActivite(activite) {\r\n    activites.push(activite);\r\n\r\n    return null;\r\n}"]},"metadata":{},"sourceType":"module"}