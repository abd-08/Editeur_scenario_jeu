{"ast":null,"code":"import { activites, scenarios, quetes, taches } from \"../../data/data\";\nimport { accesScenarioIndice, listeScenario } from \"./ScenarioHelper\";\nimport { accesQueteIndice, listeQuete } from \"./QueteHelper\";\nimport { accesTacheIndice } from \"./TacheHelper\";\nimport { accesActiviteIndice } from \"./ActiviteHelper\";\nimport { compositions } from \"../../types/TypeComposition\";\nexport function mise_a_jour_na() {\n  let activity = [];\n  let scenario = [];\n  let quest = [];\n  let S;\n  let Q = [];\n\n  for (let i = 0; i < activites.length; i++) {\n    // on parcours la liste des activites\n    S = listeScenario(activites[i].id); //on sélectionne les scénario dont le père est A */\n\n    for (let j = 0; j < S.length; j++) {\n      // on parcours les scenarios d'une activite A\n\n      /* Liste des quêtes d'un scénario donné */\n      Q = listeQuete(S[j].id);\n\n      for (let k = 0; k < Q.length; k++) {\n        //on parcours les quêtes du scenario i\n        quest.push({\n          id: '' + i + '_' + j + '_' + k,\n          text: Q[k].nom\n        });\n      }\n\n      scenario.push({\n        id: i + '_' + j,\n        expanded: true,\n        text: S[j].nom,\n        items: quest\n      });\n      quest = [];\n    }\n\n    activity.push({\n      id: i + '',\n      text: activites[i].nom,\n      expanded: true,\n      items: scenario\n    });\n    scenario = [];\n  }\n\n  return activity;\n}\nexport function type_element(id) {\n  let i;\n\n  if (activites[0].id === id) {\n    //l'élement est une activite\n    return compositions.ACTIVITE;\n  }\n\n  i = scenarios.findIndex(x => x.id === id);\n\n  if (i > -1) {\n    //l'élement est un scenario\n    return compositions.SCENARIO;\n  }\n\n  i = quetes.findIndex(x => x.id === id);\n\n  if (i > -1) {\n    //l'élement est une quete\n    return compositions.QUETE;\n  }\n\n  i = taches.findIndex(x => x.id === id);\n\n  if (i > -1) {\n    //l'élement est une tache\n    return compositions.TACHE;\n  }\n\n  return null;\n}\nexport function rechercheNav(id) {\n  let res = type_element(id);\n  let i;\n\n  switch (res) {\n    case compositions.QUETE:\n      i = accesQueteIndice(id);\n      return {\n        nodes: quetes[i].nodes,\n        links: quetes[i].links\n      };\n\n    case compositions.TACHE:\n      i = accesTacheIndice(id);\n      return {\n        nodes: taches[i].nodes,\n        links: taches[i].links\n      };\n\n    case compositions.SCENARIO:\n      i = accesScenarioIndice(id);\n      return {\n        nodes: scenarios[i].nodes,\n        links: scenarios[i].links\n      };\n\n    case compositions.ACTIVITE:\n      i = accesActiviteIndice(id);\n      return {\n        nodes: activites[i].nodes,\n        links: activites[i].links\n      };\n\n    default:\n      return null;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\fonctions\\helper\\NavigationHelper.js"],"names":["activites","scenarios","quetes","taches","accesScenarioIndice","listeScenario","accesQueteIndice","listeQuete","accesTacheIndice","accesActiviteIndice","compositions","mise_a_jour_na","activity","scenario","quest","S","Q","i","length","id","j","k","push","text","nom","expanded","items","type_element","ACTIVITE","findIndex","x","SCENARIO","QUETE","TACHE","rechercheNav","res","nodes","links"],"mappings":"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","sourcesContent":["import {activites, scenarios , quetes , taches} from \"../../data/data\";\r\nimport {accesScenarioIndice, listeScenario} from \"./ScenarioHelper\";\r\nimport {accesQueteIndice, listeQuete} from \"./QueteHelper\";\r\nimport {accesTacheIndice} from \"./TacheHelper\";\r\nimport {accesActiviteIndice} from \"./ActiviteHelper\";\r\nimport {compositions} from \"../../types/TypeComposition\";\r\n\r\nexport function mise_a_jour_na(){\r\n    let activity=[];\r\n    let scenario =[];\r\n    let quest=[];\r\n    let S;\r\n    let Q=[ ];\r\n\r\n    for (let i=0 ; i<activites.length;i++) {// on parcours la liste des activites\r\n\r\n        S = listeScenario(activites[i].id);//on sélectionne les scénario dont le père est A */\r\n        for (let j = 0; j < S.length; j++) {// on parcours les scenarios d'une activite A\r\n\r\n            /* Liste des quêtes d'un scénario donné */\r\n            Q = listeQuete(S[j].id);\r\n            for (let k = 0; k < Q.length; k++) { //on parcours les quêtes du scenario i\r\n\r\n                quest.push({id: '' + i + '_' + j + '_' + k, text: Q[k].nom});\r\n            }\r\n\r\n            scenario.push({id: i + '_' + j, expanded: true, text: S[j].nom, items: quest});\r\n            quest = [];\r\n        }\r\n\r\n        activity.push({id: i + '', text: activites[i].nom, expanded: true, items: scenario});\r\n        scenario=[];\r\n    }\r\n    return activity;\r\n}\r\n\r\nexport function type_element(id){\r\n\r\n    let i;\r\n\r\n    if (activites[0].id === id){ //l'élement est une activite\r\n        return compositions.ACTIVITE;\r\n    }\r\n\r\n    i=scenarios.findIndex(x=>x.id===id);\r\n\r\n    if (i>-1){ //l'élement est un scenario\r\n        return compositions.SCENARIO;\r\n\r\n    }\r\n\r\n    i=quetes.findIndex(x=>x.id===id);\r\n\r\n    if (i>-1){ //l'élement est une quete\r\n        return compositions.QUETE;\r\n\r\n    }\r\n\r\n    i=taches.findIndex(x=>x.id===id);\r\n\r\n    if (i>-1){ //l'élement est une tache\r\n        return compositions.TACHE;\r\n    }\r\n\r\n    return null;\r\n}\r\n\r\n\r\nexport function rechercheNav(id){\r\n    let res = type_element(id);\r\n    let i;\r\n    switch (res) {\r\n        case compositions.QUETE:\r\n            i=accesQueteIndice(id);\r\n            return {nodes:quetes[i].nodes,links: quetes[i].links};\r\n\r\n        case compositions.TACHE:\r\n            i=accesTacheIndice(id);\r\n            return {nodes:taches[i].nodes,links: taches[i].links};\r\n\r\n        case compositions.SCENARIO:\r\n            i=accesScenarioIndice(id);\r\n            return {nodes:scenarios[i].nodes,links: scenarios[i].links};\r\n\r\n        case compositions.ACTIVITE:\r\n            i=accesActiviteIndice(id);\r\n            return {nodes:activites[i].nodes,links: activites[i].links};\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}