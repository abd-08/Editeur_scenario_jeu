{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdel\\\\PhpstormProjects\\\\update\\\\src\\\\navigation\\\\Navigation.js\";\nimport React, { Component } from \"react\";\nimport TreeView from \"devextreme-react/tree-view\";\nimport * as Constants from \"../configuration_app/Constants\";\nimport { selection } from \"../data/data\";\nimport { update } from \"../App\";\nimport { liste_entite, mise_a_jour_na, rechercheNav } from \"../fonctions/helper/NavigationHelper\";\nimport { compositions } from \"../types/TypeComposition\"; //fonction qui met a jour la navigation\n\nexport function update_navigation() {\n  let nav = mise_a_jour_na();\n  this.setState({\n    p: nav\n  });\n}\n\nclass Navigation extends Component {\n  constructor(props) {\n    super(props);\n\n    this.recherche = id => {\n      // renvoie la liste des nodes et des links\n      return rechercheNav(id);\n    };\n\n    this.state = {\n      value: \"contains\",\n      p: []\n    };\n    this.itemClicked = this.itemClicked.bind(this);\n    this.update_navigation = update_navigation.bind(this);\n  }\n\n  itemClicked(e) {\n    let search = this.recherche(e.itemData.id);\n    let tab = search.tab;\n    let i = search.i;\n    selection.nodes = tab[i].nodes;\n    selection.links = tab[i].links;\n    selection.node = null;\n    selection.link = null;\n    selection.nom = tab[i].nom;\n    selection.idPere = tab[i].idPere;\n    selection.description = tab[i].description;\n    selection.type = tab[i].type;\n\n    if (tab[i].type === compositions.ACTIVITE) {\n      selection.idPere = null;\n      selection.listeEntites = tab[i].listeEntites;\n    } else liste_entite(tab[i]);\n\n    update();\n  }\n\n  componentWillMount() {\n    this.update_navigation();\n    console.log(\"test component monter\");\n  }\n\n  render() {\n    return React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, React.createElement(TreeView, {\n      id: \"treeview\",\n      items: this.state.p,\n      height: Constants.NAV_DEFAULT_HEIGHT,\n      width: Constants.NAV_DEFAULT_WIDTH,\n      searchMode: Constants.NAV_DEFAULT_SEARCH_MODE,\n      searchEnabled: Constants.NAV_DEFAULT_SEARCH_ENABLE,\n      selectionMode: 'single',\n      selectByClick: true,\n      onItemClick: this.itemClicked,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 70\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Navigation;","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\navigation\\Navigation.js"],"names":["React","Component","TreeView","Constants","selection","update","liste_entite","mise_a_jour_na","rechercheNav","compositions","update_navigation","nav","setState","p","Navigation","constructor","props","recherche","id","state","value","itemClicked","bind","e","search","itemData","tab","i","nodes","links","node","link","nom","idPere","description","type","ACTIVITE","listeEntites","componentWillMount","console","log","render","NAV_DEFAULT_HEIGHT","NAV_DEFAULT_WIDTH","NAV_DEFAULT_SEARCH_MODE","NAV_DEFAULT_SEARCH_ENABLE"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport TreeView from \"devextreme-react/tree-view\";\r\n\r\nimport * as Constants from \"../configuration_app/Constants\";\r\n\r\nimport {selection} from \"../data/data\";\r\nimport {update} from \"../App\";\r\nimport {liste_entite, mise_a_jour_na, rechercheNav} from \"../fonctions/helper/NavigationHelper\";\r\nimport {compositions} from \"../types/TypeComposition\";\r\n\r\n//fonction qui met a jour la navigation\r\nexport function update_navigation (){\r\n    let nav = mise_a_jour_na();\r\n    this.setState({p:nav});\r\n}\r\n\r\nclass Navigation extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            value: \"contains\",\r\n            p:[],\r\n        };\r\n\r\n        this.itemClicked = this.itemClicked.bind(this);\r\n        this.update_navigation = update_navigation.bind(this);\r\n    }\r\n\r\n    recherche=(id)=>{\r\n        // renvoie la liste des nodes et des links\r\n        return  rechercheNav(id);\r\n    };\r\n\r\n\r\n    itemClicked(e) {\r\n        let search =this.recherche(e.itemData.id);\r\n        let tab = search.tab;\r\n        let i = search.i;\r\n\r\n        selection.nodes=tab[i].nodes;\r\n        selection.links=tab[i].links;\r\n        selection.node=null;\r\n        selection.link=null;\r\n        selection.nom=tab[i].nom;\r\n        selection.idPere=tab[i].idPere;\r\n        selection.description=tab[i].description;\r\n        selection.type = tab[i].type;\r\n\r\n        if (tab[i].type === compositions.ACTIVITE){\r\n            selection.idPere=null;\r\n            selection.listeEntites=tab[i].listeEntites;\r\n        }\r\n        else liste_entite(tab[i]);\r\n\r\n        update();\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.update_navigation();\r\n        console.log(\"test component monter\");\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <TreeView\r\n                    id={ \"treeview\" }\r\n                    items={ this.state.p }\r\n                    height={ Constants.NAV_DEFAULT_HEIGHT }\r\n                    width={ Constants.NAV_DEFAULT_WIDTH }\r\n                    searchMode= { Constants.NAV_DEFAULT_SEARCH_MODE }\r\n                    searchEnabled={ Constants.NAV_DEFAULT_SEARCH_ENABLE }\r\n                    selectionMode={'single'}\r\n                    selectByClick={true}\r\n                    onItemClick={ this.itemClicked }\r\n                />\r\n\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navigation;"]},"metadata":{},"sourceType":"module"}