{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/extend.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar isPlainObject = require(\"./type\").isPlainObject;\n\nvar extendFromObject = function (target, source, overrideExistingValues) {\n  target = target || {};\n\n  for (var prop in source) {\n    if (source.hasOwnProperty(prop)) {\n      var value = source[prop];\n\n      if (!(prop in target) || overrideExistingValues) {\n        target[prop] = value;\n      }\n    }\n  }\n\n  return target;\n};\n\nvar extend = function extend(target) {\n  target = target || {};\n  var i = 1,\n      deep = false;\n\n  if (\"boolean\" === typeof target) {\n    deep = target;\n    target = arguments[1] || {};\n    i++;\n  }\n\n  for (; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    if (null == source) {\n      continue;\n    }\n\n    for (var key in source) {\n      var clone,\n          targetValue = target[key],\n          sourceValue = source[key],\n          sourceValueIsArray = false;\n\n      if (\"__proto__\" === key || target === sourceValue) {\n        continue;\n      }\n\n      if (deep && sourceValue && (isPlainObject(sourceValue) || (sourceValueIsArray = Array.isArray(sourceValue)))) {\n        if (sourceValueIsArray) {\n          clone = targetValue && Array.isArray(targetValue) ? targetValue : [];\n        } else {\n          clone = targetValue && isPlainObject(targetValue) ? targetValue : {};\n        }\n\n        target[key] = extend(deep, clone, sourceValue);\n      } else {\n        if (void 0 !== sourceValue) {\n          target[key] = sourceValue;\n        }\n      }\n    }\n  }\n\n  return target;\n};\n\nexports.extend = extend;\nexports.extendFromObject = extendFromObject;","map":{"version":3,"sources":["C:/Users/abdel/PhpstormProjects/editeur_scenario_jeu/node_modules/devextreme/core/utils/extend.js"],"names":["isPlainObject","require","extendFromObject","target","source","overrideExistingValues","prop","hasOwnProperty","value","extend","i","deep","arguments","length","key","clone","targetValue","sourceValue","sourceValueIsArray","Array","isArray","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,aAAa,GAAGC,OAAO,CAAC,QAAD,CAAP,CAAkBD,aAAtC;;AACA,IAAIE,gBAAgB,GAAG,UAASC,MAAT,EAAiBC,MAAjB,EAAyBC,sBAAzB,EAAiD;AACpEF,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;;AACA,OAAK,IAAIG,IAAT,IAAiBF,MAAjB,EAAyB;AACrB,QAAIA,MAAM,CAACG,cAAP,CAAsBD,IAAtB,CAAJ,EAAiC;AAC7B,UAAIE,KAAK,GAAGJ,MAAM,CAACE,IAAD,CAAlB;;AACA,UAAI,EAAEA,IAAI,IAAIH,MAAV,KAAqBE,sBAAzB,EAAiD;AAC7CF,QAAAA,MAAM,CAACG,IAAD,CAAN,GAAeE,KAAf;AACH;AACJ;AACJ;;AACD,SAAOL,MAAP;AACH,CAXD;;AAYA,IAAIM,MAAM,GAAG,SAASA,MAAT,CAAgBN,MAAhB,EAAwB;AACjCA,EAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACA,MAAIO,CAAC,GAAG,CAAR;AAAA,MACIC,IAAI,GAAG,KADX;;AAEA,MAAI,cAAc,OAAOR,MAAzB,EAAiC;AAC7BQ,IAAAA,IAAI,GAAGR,MAAP;AACAA,IAAAA,MAAM,GAAGS,SAAS,CAAC,CAAD,CAAT,IAAgB,EAAzB;AACAF,IAAAA,CAAC;AACJ;;AACD,SAAOA,CAAC,GAAGE,SAAS,CAACC,MAArB,EAA6BH,CAAC,EAA9B,EAAkC;AAC9B,QAAIN,MAAM,GAAGQ,SAAS,CAACF,CAAD,CAAtB;;AACA,QAAI,QAAQN,MAAZ,EAAoB;AAChB;AACH;;AACD,SAAK,IAAIU,GAAT,IAAgBV,MAAhB,EAAwB;AACpB,UAAIW,KAAJ;AAAA,UAAWC,WAAW,GAAGb,MAAM,CAACW,GAAD,CAA/B;AAAA,UACIG,WAAW,GAAGb,MAAM,CAACU,GAAD,CADxB;AAAA,UAEII,kBAAkB,GAAG,KAFzB;;AAGA,UAAI,gBAAgBJ,GAAhB,IAAuBX,MAAM,KAAKc,WAAtC,EAAmD;AAC/C;AACH;;AACD,UAAIN,IAAI,IAAIM,WAAR,KAAwBjB,aAAa,CAACiB,WAAD,CAAb,KAA+BC,kBAAkB,GAAGC,KAAK,CAACC,OAAN,CAAcH,WAAd,CAApD,CAAxB,CAAJ,EAA8G;AAC1G,YAAIC,kBAAJ,EAAwB;AACpBH,UAAAA,KAAK,GAAGC,WAAW,IAAIG,KAAK,CAACC,OAAN,CAAcJ,WAAd,CAAf,GAA4CA,WAA5C,GAA0D,EAAlE;AACH,SAFD,MAEO;AACHD,UAAAA,KAAK,GAAGC,WAAW,IAAIhB,aAAa,CAACgB,WAAD,CAA5B,GAA4CA,WAA5C,GAA0D,EAAlE;AACH;;AACDb,QAAAA,MAAM,CAACW,GAAD,CAAN,GAAcL,MAAM,CAACE,IAAD,EAAOI,KAAP,EAAcE,WAAd,CAApB;AACH,OAPD,MAOO;AACH,YAAI,KAAK,CAAL,KAAWA,WAAf,EAA4B;AACxBd,UAAAA,MAAM,CAACW,GAAD,CAAN,GAAcG,WAAd;AACH;AACJ;AACJ;AACJ;;AACD,SAAOd,MAAP;AACH,CApCD;;AAqCAkB,OAAO,CAACZ,MAAR,GAAiBA,MAAjB;AACAY,OAAO,CAACnB,gBAAR,GAA2BA,gBAA3B","sourcesContent":["/**\r\n * DevExtreme (core/utils/extend.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar isPlainObject = require(\"./type\").isPlainObject;\r\nvar extendFromObject = function(target, source, overrideExistingValues) {\r\n    target = target || {};\r\n    for (var prop in source) {\r\n        if (source.hasOwnProperty(prop)) {\r\n            var value = source[prop];\r\n            if (!(prop in target) || overrideExistingValues) {\r\n                target[prop] = value\r\n            }\r\n        }\r\n    }\r\n    return target\r\n};\r\nvar extend = function extend(target) {\r\n    target = target || {};\r\n    var i = 1,\r\n        deep = false;\r\n    if (\"boolean\" === typeof target) {\r\n        deep = target;\r\n        target = arguments[1] || {};\r\n        i++\r\n    }\r\n    for (; i < arguments.length; i++) {\r\n        var source = arguments[i];\r\n        if (null == source) {\r\n            continue\r\n        }\r\n        for (var key in source) {\r\n            var clone, targetValue = target[key],\r\n                sourceValue = source[key],\r\n                sourceValueIsArray = false;\r\n            if (\"__proto__\" === key || target === sourceValue) {\r\n                continue\r\n            }\r\n            if (deep && sourceValue && (isPlainObject(sourceValue) || (sourceValueIsArray = Array.isArray(sourceValue)))) {\r\n                if (sourceValueIsArray) {\r\n                    clone = targetValue && Array.isArray(targetValue) ? targetValue : []\r\n                } else {\r\n                    clone = targetValue && isPlainObject(targetValue) ? targetValue : {}\r\n                }\r\n                target[key] = extend(deep, clone, sourceValue)\r\n            } else {\r\n                if (void 0 !== sourceValue) {\r\n                    target[key] = sourceValue\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return target\r\n};\r\nexports.extend = extend;\r\nexports.extendFromObject = extendFromObject;\r\n"]},"metadata":{},"sourceType":"script"}