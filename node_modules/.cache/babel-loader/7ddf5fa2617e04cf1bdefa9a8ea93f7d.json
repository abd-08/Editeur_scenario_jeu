{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 18.2.13\n * Build date: Wed May 27 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = require(\"react\");\n\nvar helpers_1 = require(\"./helpers\");\n\nvar nested_option_1 = require(\"./nested-option\");\n\nvar widget_config_1 = require(\"./widget-config\");\n\nfunction isEventHanlder(optionName, optionValue) {\n  return optionName.substr(0, 2) === \"on\" && typeof optionValue === \"function\";\n}\n\nvar OptionsManager =\n/** @class */\nfunction () {\n  function OptionsManager(optionValueGetter, templateHost) {\n    this._guards = {};\n    this._nestedOptions = {};\n    this._dirtyOptions = {};\n    this._optionValueGetter = optionValueGetter;\n    this._templatesManager = templateHost;\n    this._setOption = this._setOption.bind(this);\n    this._syncOptions = this._syncOptions.bind(this);\n    this._registerNestedOption = this._registerNestedOption.bind(this);\n    this.registerNestedOption = this.registerNestedOption.bind(this);\n    this.handleOptionChange = this.handleOptionChange.bind(this);\n    this.updateOptions = this.updateOptions.bind(this);\n  }\n\n  OptionsManager.prototype.resetNestedElements = function () {\n    var _this = this;\n\n    Object.keys(this._nestedOptions).forEach(function (optionName) {\n      _this._nestedOptions[optionName].elementEntries.length = 0;\n    });\n  };\n\n  OptionsManager.prototype.setInstance = function (instance) {\n    this._instance = instance;\n  };\n\n  OptionsManager.prototype.wrapEventHandlers = function (options) {\n    var _this = this;\n\n    Object.keys(options).forEach(function (name) {\n      var value = options[name];\n\n      if (isEventHanlder(name, value)) {\n        options[name] = _this._wrapEventHandler(value);\n      }\n    });\n  };\n\n  OptionsManager.prototype.handleOptionChange = function (e) {\n    var _this = this;\n\n    if (this._updatingProps) {\n      return;\n    }\n\n    var optionValue;\n    var optionName;\n    var nestedOption = this._nestedOptions[e.name];\n\n    if (nestedOption && nestedOption.elementEntries.length > 0) {\n      optionName = e.fullName;\n      var nestedOptionObj = widget_config_1.separateProps(nestedOption.elementEntries[0].element.props, nestedOption.defaults, []).options;\n\n      if (e.name === e.fullName) {\n        Object.keys(nestedOptionObj).forEach(function (key) {\n          return _this.handleOptionChange({\n            name: e.name,\n            fullName: e.fullName + \".\" + key,\n            value: e.value[key]\n          });\n        });\n        return;\n      }\n\n      if (nestedOption.isCollectionItem) {\n        return;\n      }\n\n      optionValue = helpers_1.getNestedValue(nestedOptionObj, e.fullName.split(\".\").slice(1));\n    } else {\n      var fullNameParts = e.fullName.split(\".\");\n\n      if (fullNameParts.length > 1) {\n        optionName = e.fullName;\n        optionValue = helpers_1.getNestedValue(this._optionValueGetter(e.name), fullNameParts.slice(1));\n      } else {\n        optionName = e.name;\n        optionValue = this._optionValueGetter(e.name);\n      }\n    }\n\n    if (optionValue === undefined || optionValue === null) {\n      return;\n    }\n\n    this._setGuard(optionName, optionValue);\n  };\n\n  OptionsManager.prototype.updateOptions = function (newProps, prevProps) {\n    var _this = this;\n\n    var nestedOptions = {};\n    Object.keys(this._dirtyOptions).forEach(function (optionName) {\n      var optionDescr = _this._dirtyOptions[optionName];\n\n      var optionValue = _this._getNestedOptionObj(optionDescr, true);\n\n      nestedOptions[optionName] = optionValue;\n    });\n\n    var newOptions = __assign({}, this._templatesManager.options, nestedOptions, newProps);\n\n    this._syncOptions(newOptions, prevProps);\n\n    this._dirtyOptions = {};\n  };\n\n  OptionsManager.prototype.getNestedOptionsObjects = function () {\n    return this._getNestedOptionsObjects(this._nestedOptions, true);\n  };\n\n  OptionsManager.prototype.registerNestedOption = function (component, expectedChildren) {\n    return this._registerNestedOption(component, expectedChildren, this._nestedOptions);\n  };\n\n  OptionsManager.prototype.dispose = function () {\n    for (var _i = 0, _a = Object.keys(this._guards); _i < _a.length; _i++) {\n      var optionName = _a[_i];\n      window.clearTimeout(this._guards[optionName]);\n      delete this._guards[optionName];\n    }\n  };\n\n  OptionsManager.prototype._syncOptions = function (newOptions, prevOptions) {\n    this._updatingProps = false;\n\n    for (var _i = 0, _a = Object.keys(newOptions); _i < _a.length; _i++) {\n      var optionName = _a[_i];\n\n      if (newOptions[optionName] === prevOptions[optionName]) {\n        continue;\n      }\n\n      if (this._guards[optionName]) {\n        window.clearTimeout(this._guards[optionName]);\n        delete this._guards[optionName];\n      }\n\n      if (!this._updatingProps) {\n        this._instance.beginUpdate();\n\n        this._updatingProps = true;\n      }\n\n      this._setOption(optionName, newOptions[optionName]);\n    }\n\n    if (this._updatingProps) {\n      this._updatingProps = false;\n\n      this._instance.endUpdate();\n    }\n  };\n\n  OptionsManager.prototype._setOption = function (name, value) {\n    var actualValue = value;\n\n    if (isEventHanlder(name, value)) {\n      actualValue = this._wrapEventHandler(value);\n    }\n\n    this._instance.option(name, actualValue);\n  };\n\n  OptionsManager.prototype._wrapEventHandler = function (handler) {\n    var _this = this;\n\n    return function () {\n      var args = [];\n\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n\n      if (!_this._updatingProps) {\n        handler.apply(void 0, args);\n      }\n    };\n  };\n\n  OptionsManager.prototype._getNestedOptionsObjects = function (optionsCollection, templateRegistrationRequired) {\n    var _this = this;\n\n    var configComponents = {};\n    Object.keys(optionsCollection).forEach(function (key) {\n      var configComponent = optionsCollection[key];\n      configComponents[configComponent.optionName] = _this._getNestedOptionObj(configComponent, templateRegistrationRequired);\n    });\n    return configComponents;\n  };\n\n  OptionsManager.prototype._getNestedOptionObj = function (configComponent, templateRegistrationRequired) {\n    var _this = this;\n\n    var options = configComponent.elementEntries.map(function (e, index) {\n      var props = widget_config_1.separateProps(e.element.props, configComponent.defaults, configComponent.templates);\n\n      var nestedObjects = _this._getNestedOptionsObjects(e.children, templateRegistrationRequired);\n\n      var nestedObjectsCount = Object.keys(nestedObjects).reduce(function (acc, item) {\n        var obj = nestedObjects[item];\n        return acc + (Array.isArray(obj) ? obj.length : 1);\n      }, 0);\n      var hasChildrenForTemplate = react_1.Children.count(e.element.props.children) > nestedObjectsCount;\n      var templatesOptions = {};\n\n      if (templateRegistrationRequired) {\n        templatesOptions = _this._templatesManager.add({\n          useChildren: function (optionName) {\n            return optionName === \"template\" && hasChildrenForTemplate;\n          },\n          props: props.templates,\n          templateProps: configComponent.templates,\n          ownerName: _this.buildOptionItemName(configComponent, configComponent.isCollectionItem ? index : undefined),\n          propsGetter: function (prop) {\n            var nestedElement = configComponent.elementEntries[index];\n\n            if (!nestedElement) {\n              return;\n            }\n\n            return nestedElement.element.props[prop];\n          }\n        });\n      }\n\n      return __assign({}, e.predefinedProps, props.defaults, props.options, nestedObjects, templatesOptions);\n    });\n    return configComponent.isCollectionItem ? options : options[options.length - 1];\n  };\n\n  OptionsManager.prototype._registerNestedOption = function (element, expectedChildren, owningCollection, ownerFullName) {\n    var _this = this;\n\n    var nestedOptionClass = element;\n\n    if (!(nestedOptionClass && nestedOptionClass.type && nestedOptionClass.type.OptionName)) {\n      return null;\n    }\n\n    var nestedOptionsCollection = {};\n    var resolvedNested = resolveNestedOption(nestedOptionClass.type.OptionName, nestedOptionClass.type.IsCollectionItem, expectedChildren);\n    var optionName = resolvedNested.optionName;\n    var isCollectionItem = resolvedNested.isCollectionItem;\n    var optionFullName = optionName;\n\n    if (ownerFullName) {\n      optionFullName = ownerFullName + \".\" + optionFullName;\n    }\n\n    var option = ensureNestedOption(optionName, optionFullName, owningCollection, nestedOptionClass.type.DefaultsProps, nestedOptionClass.type.TemplateProps, isCollectionItem);\n    var optionItemName = this.buildOptionItemName(option, isCollectionItem ? option.elementEntries.length : undefined);\n    var nestedOptionMeta = {\n      optionName: optionName,\n      registerNestedOption: function (c) {\n        return _this._registerNestedOption(c, nestedOptionClass.type.ExpectedChildren, nestedOptionsCollection, optionItemName);\n      },\n      updateFunc: function (newProps, prevProps) {\n        var newOptions = widget_config_1.separateProps(newProps, nestedOptionClass.type.DefaultsProps, nestedOptionClass.type.TemplateProps).options;\n\n        _this._syncOptions(helpers_1.addPrefixToKeys(newOptions, optionItemName + \".\"), helpers_1.addPrefixToKeys(prevProps, optionItemName + \".\"));\n      },\n      makeDirty: function () {\n        if (_this._instance && option.isCollectionItem) {\n          _this._dirtyOptions[option.optionName] = option;\n        }\n      }\n    };\n    var optionComponent = nested_option_1.createOptionComponent(element, nestedOptionMeta);\n    option.elementEntries.push({\n      element: element,\n      children: nestedOptionsCollection,\n      predefinedProps: nestedOptionClass.type.PredefinedProps\n    });\n    return optionComponent;\n  };\n\n  OptionsManager.prototype.buildOptionItemName = function (descr, index) {\n    var optionItemName = descr.optionFullName;\n\n    if (index !== undefined) {\n      optionItemName += \"[\" + index + \"]\";\n    }\n\n    return optionItemName;\n  };\n\n  OptionsManager.prototype._setGuard = function (optionName, optionValue) {\n    var _this = this;\n\n    if (this._guards[optionName] !== undefined) {\n      return;\n    }\n\n    var guardId = window.setTimeout(function () {\n      _this._setOption(optionName, optionValue);\n\n      window.clearTimeout(guardId);\n      delete _this._guards[optionName];\n    });\n    this._guards[optionName] = guardId;\n  };\n\n  return OptionsManager;\n}();\n\nfunction ensureNestedOption(optionName, optionFullName, optionsCollection, defaults, templates, isCollectionItem) {\n  if (optionsCollection[optionName] === null || optionsCollection[optionName] === undefined) {\n    optionsCollection[optionName] = {\n      optionName: optionName,\n      optionFullName: optionFullName,\n      defaults: defaults,\n      templates: templates,\n      elementEntries: [],\n      isCollectionItem: isCollectionItem\n    };\n  }\n\n  return optionsCollection[optionName];\n}\n\nfunction resolveNestedOption(componentName, canBeCollectionItem, expectations) {\n  var optionName = componentName;\n  var isCollectionItem = canBeCollectionItem;\n  var expectation = expectations && expectations[componentName];\n\n  if (expectation) {\n    isCollectionItem = expectation.isCollectionItem;\n\n    if (expectation.optionName) {\n      optionName = expectation.optionName;\n    }\n  }\n\n  return {\n    optionName: optionName,\n    isCollectionItem: isCollectionItem\n  };\n}\n\nexports.resolveNestedOption = resolveNestedOption;\nexports.default = OptionsManager;","map":{"version":3,"sources":["C:/Users/abdel/PhpstormProjects/editeur_scenario_jeu/node_modules/devextreme-react/core/options-manager.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","defineProperty","exports","value","react_1","require","helpers_1","nested_option_1","widget_config_1","isEventHanlder","optionName","optionValue","substr","OptionsManager","optionValueGetter","templateHost","_guards","_nestedOptions","_dirtyOptions","_optionValueGetter","_templatesManager","_setOption","bind","_syncOptions","_registerNestedOption","registerNestedOption","handleOptionChange","updateOptions","resetNestedElements","_this","keys","forEach","elementEntries","setInstance","instance","_instance","wrapEventHandlers","options","name","_wrapEventHandler","e","_updatingProps","nestedOption","fullName","nestedOptionObj","separateProps","element","props","defaults","key","isCollectionItem","getNestedValue","split","slice","fullNameParts","undefined","_setGuard","newProps","prevProps","nestedOptions","optionDescr","_getNestedOptionObj","newOptions","getNestedOptionsObjects","_getNestedOptionsObjects","component","expectedChildren","dispose","_i","_a","window","clearTimeout","prevOptions","beginUpdate","endUpdate","actualValue","option","handler","args","optionsCollection","templateRegistrationRequired","configComponents","configComponent","map","index","templates","nestedObjects","children","nestedObjectsCount","reduce","acc","item","obj","Array","isArray","hasChildrenForTemplate","Children","count","templatesOptions","add","useChildren","templateProps","ownerName","buildOptionItemName","propsGetter","prop","nestedElement","predefinedProps","owningCollection","ownerFullName","nestedOptionClass","type","OptionName","nestedOptionsCollection","resolvedNested","resolveNestedOption","IsCollectionItem","optionFullName","ensureNestedOption","DefaultsProps","TemplateProps","optionItemName","nestedOptionMeta","c","ExpectedChildren","updateFunc","addPrefixToKeys","makeDirty","optionComponent","createOptionComponent","push","PredefinedProps","descr","guardId","setTimeout","componentName","canBeCollectionItem","expectations","expectation","default"],"mappings":"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","sourcesContent":["/*!\n * devextreme-react\n * Version: 18.2.13\n * Build date: Wed May 27 2020\n *\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\n\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = require(\"react\");\nvar helpers_1 = require(\"./helpers\");\nvar nested_option_1 = require(\"./nested-option\");\nvar widget_config_1 = require(\"./widget-config\");\nfunction isEventHanlder(optionName, optionValue) {\n    return optionName.substr(0, 2) === \"on\" && typeof optionValue === \"function\";\n}\nvar OptionsManager = /** @class */ (function () {\n    function OptionsManager(optionValueGetter, templateHost) {\n        this._guards = {};\n        this._nestedOptions = {};\n        this._dirtyOptions = {};\n        this._optionValueGetter = optionValueGetter;\n        this._templatesManager = templateHost;\n        this._setOption = this._setOption.bind(this);\n        this._syncOptions = this._syncOptions.bind(this);\n        this._registerNestedOption = this._registerNestedOption.bind(this);\n        this.registerNestedOption = this.registerNestedOption.bind(this);\n        this.handleOptionChange = this.handleOptionChange.bind(this);\n        this.updateOptions = this.updateOptions.bind(this);\n    }\n    OptionsManager.prototype.resetNestedElements = function () {\n        var _this = this;\n        Object.keys(this._nestedOptions).forEach(function (optionName) {\n            _this._nestedOptions[optionName].elementEntries.length = 0;\n        });\n    };\n    OptionsManager.prototype.setInstance = function (instance) {\n        this._instance = instance;\n    };\n    OptionsManager.prototype.wrapEventHandlers = function (options) {\n        var _this = this;\n        Object.keys(options).forEach(function (name) {\n            var value = options[name];\n            if (isEventHanlder(name, value)) {\n                options[name] = _this._wrapEventHandler(value);\n            }\n        });\n    };\n    OptionsManager.prototype.handleOptionChange = function (e) {\n        var _this = this;\n        if (this._updatingProps) {\n            return;\n        }\n        var optionValue;\n        var optionName;\n        var nestedOption = this._nestedOptions[e.name];\n        if (nestedOption && nestedOption.elementEntries.length > 0) {\n            optionName = e.fullName;\n            var nestedOptionObj = widget_config_1.separateProps(nestedOption.elementEntries[0].element.props, nestedOption.defaults, []).options;\n            if (e.name === e.fullName) {\n                Object.keys(nestedOptionObj).forEach(function (key) { return _this.handleOptionChange({\n                    name: e.name,\n                    fullName: e.fullName + \".\" + key,\n                    value: e.value[key]\n                }); });\n                return;\n            }\n            if (nestedOption.isCollectionItem) {\n                return;\n            }\n            optionValue = helpers_1.getNestedValue(nestedOptionObj, e.fullName.split(\".\").slice(1));\n        }\n        else {\n            var fullNameParts = e.fullName.split(\".\");\n            if (fullNameParts.length > 1) {\n                optionName = e.fullName;\n                optionValue = helpers_1.getNestedValue(this._optionValueGetter(e.name), fullNameParts.slice(1));\n            }\n            else {\n                optionName = e.name;\n                optionValue = this._optionValueGetter(e.name);\n            }\n        }\n        if (optionValue === undefined || optionValue === null) {\n            return;\n        }\n        this._setGuard(optionName, optionValue);\n    };\n    OptionsManager.prototype.updateOptions = function (newProps, prevProps) {\n        var _this = this;\n        var nestedOptions = {};\n        Object.keys(this._dirtyOptions).forEach(function (optionName) {\n            var optionDescr = _this._dirtyOptions[optionName];\n            var optionValue = _this._getNestedOptionObj(optionDescr, true);\n            nestedOptions[optionName] = optionValue;\n        });\n        var newOptions = __assign({}, this._templatesManager.options, nestedOptions, newProps);\n        this._syncOptions(newOptions, prevProps);\n        this._dirtyOptions = {};\n    };\n    OptionsManager.prototype.getNestedOptionsObjects = function () {\n        return this._getNestedOptionsObjects(this._nestedOptions, true);\n    };\n    OptionsManager.prototype.registerNestedOption = function (component, expectedChildren) {\n        return this._registerNestedOption(component, expectedChildren, this._nestedOptions);\n    };\n    OptionsManager.prototype.dispose = function () {\n        for (var _i = 0, _a = Object.keys(this._guards); _i < _a.length; _i++) {\n            var optionName = _a[_i];\n            window.clearTimeout(this._guards[optionName]);\n            delete this._guards[optionName];\n        }\n    };\n    OptionsManager.prototype._syncOptions = function (newOptions, prevOptions) {\n        this._updatingProps = false;\n        for (var _i = 0, _a = Object.keys(newOptions); _i < _a.length; _i++) {\n            var optionName = _a[_i];\n            if (newOptions[optionName] === prevOptions[optionName]) {\n                continue;\n            }\n            if (this._guards[optionName]) {\n                window.clearTimeout(this._guards[optionName]);\n                delete this._guards[optionName];\n            }\n            if (!this._updatingProps) {\n                this._instance.beginUpdate();\n                this._updatingProps = true;\n            }\n            this._setOption(optionName, newOptions[optionName]);\n        }\n        if (this._updatingProps) {\n            this._updatingProps = false;\n            this._instance.endUpdate();\n        }\n    };\n    OptionsManager.prototype._setOption = function (name, value) {\n        var actualValue = value;\n        if (isEventHanlder(name, value)) {\n            actualValue = this._wrapEventHandler(value);\n        }\n        this._instance.option(name, actualValue);\n    };\n    OptionsManager.prototype._wrapEventHandler = function (handler) {\n        var _this = this;\n        return function () {\n            var args = [];\n            for (var _i = 0; _i < arguments.length; _i++) {\n                args[_i] = arguments[_i];\n            }\n            if (!_this._updatingProps) {\n                handler.apply(void 0, args);\n            }\n        };\n    };\n    OptionsManager.prototype._getNestedOptionsObjects = function (optionsCollection, templateRegistrationRequired) {\n        var _this = this;\n        var configComponents = {};\n        Object.keys(optionsCollection).forEach(function (key) {\n            var configComponent = optionsCollection[key];\n            configComponents[configComponent.optionName] = _this._getNestedOptionObj(configComponent, templateRegistrationRequired);\n        });\n        return configComponents;\n    };\n    OptionsManager.prototype._getNestedOptionObj = function (configComponent, templateRegistrationRequired) {\n        var _this = this;\n        var options = configComponent.elementEntries.map(function (e, index) {\n            var props = widget_config_1.separateProps(e.element.props, configComponent.defaults, configComponent.templates);\n            var nestedObjects = _this._getNestedOptionsObjects(e.children, templateRegistrationRequired);\n            var nestedObjectsCount = Object.keys(nestedObjects).reduce(function (acc, item) {\n                var obj = nestedObjects[item];\n                return acc + (Array.isArray(obj) ? obj.length : 1);\n            }, 0);\n            var hasChildrenForTemplate = react_1.Children.count(e.element.props.children) > nestedObjectsCount;\n            var templatesOptions = {};\n            if (templateRegistrationRequired) {\n                templatesOptions = _this._templatesManager.add({\n                    useChildren: function (optionName) {\n                        return optionName === \"template\" && hasChildrenForTemplate;\n                    },\n                    props: props.templates,\n                    templateProps: configComponent.templates,\n                    ownerName: _this.buildOptionItemName(configComponent, configComponent.isCollectionItem ? index : undefined),\n                    propsGetter: function (prop) {\n                        var nestedElement = configComponent.elementEntries[index];\n                        if (!nestedElement) {\n                            return;\n                        }\n                        return nestedElement.element.props[prop];\n                    }\n                });\n            }\n            return __assign({}, e.predefinedProps, props.defaults, props.options, nestedObjects, templatesOptions);\n        });\n        return configComponent.isCollectionItem\n            ? options\n            : options[options.length - 1];\n    };\n    OptionsManager.prototype._registerNestedOption = function (element, expectedChildren, owningCollection, ownerFullName) {\n        var _this = this;\n        var nestedOptionClass = element;\n        if (!(nestedOptionClass && nestedOptionClass.type && nestedOptionClass.type.OptionName)) {\n            return null;\n        }\n        var nestedOptionsCollection = {};\n        var resolvedNested = resolveNestedOption(nestedOptionClass.type.OptionName, nestedOptionClass.type.IsCollectionItem, expectedChildren);\n        var optionName = resolvedNested.optionName;\n        var isCollectionItem = resolvedNested.isCollectionItem;\n        var optionFullName = optionName;\n        if (ownerFullName) {\n            optionFullName = ownerFullName + \".\" + optionFullName;\n        }\n        var option = ensureNestedOption(optionName, optionFullName, owningCollection, nestedOptionClass.type.DefaultsProps, nestedOptionClass.type.TemplateProps, isCollectionItem);\n        var optionItemName = this.buildOptionItemName(option, isCollectionItem ? option.elementEntries.length : undefined);\n        var nestedOptionMeta = {\n            optionName: optionName,\n            registerNestedOption: function (c) {\n                return _this._registerNestedOption(c, nestedOptionClass.type.ExpectedChildren, nestedOptionsCollection, optionItemName);\n            },\n            updateFunc: function (newProps, prevProps) {\n                var newOptions = widget_config_1.separateProps(newProps, nestedOptionClass.type.DefaultsProps, nestedOptionClass.type.TemplateProps).options;\n                _this._syncOptions(helpers_1.addPrefixToKeys(newOptions, optionItemName + \".\"), helpers_1.addPrefixToKeys(prevProps, optionItemName + \".\"));\n            },\n            makeDirty: function () {\n                if (_this._instance && option.isCollectionItem) {\n                    _this._dirtyOptions[option.optionName] = option;\n                }\n            }\n        };\n        var optionComponent = nested_option_1.createOptionComponent(element, nestedOptionMeta);\n        option.elementEntries.push({\n            element: element,\n            children: nestedOptionsCollection,\n            predefinedProps: nestedOptionClass.type.PredefinedProps\n        });\n        return optionComponent;\n    };\n    OptionsManager.prototype.buildOptionItemName = function (descr, index) {\n        var optionItemName = descr.optionFullName;\n        if (index !== undefined) {\n            optionItemName += \"[\" + index + \"]\";\n        }\n        return optionItemName;\n    };\n    OptionsManager.prototype._setGuard = function (optionName, optionValue) {\n        var _this = this;\n        if (this._guards[optionName] !== undefined) {\n            return;\n        }\n        var guardId = window.setTimeout(function () {\n            _this._setOption(optionName, optionValue);\n            window.clearTimeout(guardId);\n            delete _this._guards[optionName];\n        });\n        this._guards[optionName] = guardId;\n    };\n    return OptionsManager;\n}());\nfunction ensureNestedOption(optionName, optionFullName, optionsCollection, defaults, templates, isCollectionItem) {\n    if (optionsCollection[optionName] === null ||\n        optionsCollection[optionName] === undefined) {\n        optionsCollection[optionName] = {\n            optionName: optionName,\n            optionFullName: optionFullName,\n            defaults: defaults,\n            templates: templates,\n            elementEntries: [],\n            isCollectionItem: isCollectionItem\n        };\n    }\n    return optionsCollection[optionName];\n}\nfunction resolveNestedOption(componentName, canBeCollectionItem, expectations) {\n    var optionName = componentName;\n    var isCollectionItem = canBeCollectionItem;\n    var expectation = expectations && expectations[componentName];\n    if (expectation) {\n        isCollectionItem = expectation.isCollectionItem;\n        if (expectation.optionName) {\n            optionName = expectation.optionName;\n        }\n    }\n    return { optionName: optionName, isCollectionItem: isCollectionItem };\n}\nexports.resolveNestedOption = resolveNestedOption;\nexports.default = OptionsManager;\n"]},"metadata":{},"sourceType":"script"}