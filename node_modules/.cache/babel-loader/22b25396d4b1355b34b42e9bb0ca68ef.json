{"ast":null,"code":"/**\r\n * DevExtreme (ui/selection/selection.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Class = require(\"../../core/class\"),\n    deferredStrategy = require(\"./selection.strategy.deferred\"),\n    standardStrategy = require(\"./selection.strategy.standard\"),\n    extend = require(\"../../core/utils/extend\").extend,\n    noop = require(\"../../core/utils/common\").noop,\n    isDefined = require(\"../../core/utils/type\").isDefined,\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\n\nmodule.exports = Class.inherit({\n  ctor: function (options) {\n    this.options = extend(this._getDefaultOptions(), options, {\n      selectedItemKeys: options.selectedKeys || []\n    });\n    this._selectionStrategy = this.options.deferred ? new deferredStrategy(this.options) : new standardStrategy(this.options);\n    this._focusedItemIndex = -1;\n\n    if (!this.options.equalByReference) {\n      this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys);\n    }\n  },\n  _getDefaultOptions: function () {\n    return {\n      deferred: false,\n      equalByReference: false,\n      mode: \"multiple\",\n      selectedItems: [],\n      selectionFilter: [],\n      maxFilterLengthInRequest: 0,\n      onSelectionChanged: noop,\n      key: noop,\n      keyOf: function (item) {\n        return item;\n      },\n      load: function () {\n        return new Deferred().resolve([]);\n      },\n      totalCount: function () {\n        return -1;\n      },\n      isSelectableItem: function () {\n        return true;\n      },\n      isItemSelected: function () {\n        return false;\n      },\n      getItemData: function (item) {\n        return item;\n      },\n      dataFields: noop,\n      filter: noop\n    };\n  },\n  validate: function () {\n    this._selectionStrategy.validate();\n  },\n  getSelectedItemKeys: function () {\n    return this._selectionStrategy.getSelectedItemKeys();\n  },\n  getSelectedItems: function () {\n    return this._selectionStrategy.getSelectedItems();\n  },\n  selectionFilter: function (value) {\n    if (void 0 === value) {\n      return this.options.selectionFilter;\n    }\n\n    var filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\n    this.options.selectionFilter = value;\n    filterIsChanged && this.onSelectionChanged();\n  },\n  setSelection: function (keys) {\n    return this.selectedItemKeys(keys);\n  },\n  select: function (keys) {\n    return this.selectedItemKeys(keys, true);\n  },\n  deselect: function (keys) {\n    return this.selectedItemKeys(keys, true, true);\n  },\n  selectedItemKeys: function (keys, preserve, isDeselect, isSelectAll) {\n    var that = this;\n    keys = keys || [];\n    keys = Array.isArray(keys) ? keys : [keys];\n    that.validate();\n    return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll);\n  },\n  clearSelection: function () {\n    return this.selectedItemKeys([]);\n  },\n  _addSelectedItem: function (itemData, key) {\n    this._selectionStrategy.addSelectedItem(key, itemData);\n  },\n  _removeSelectedItem: function (key) {\n    this._selectionStrategy.removeSelectedItem(key);\n  },\n  _setSelectedItems: function (keys, items) {\n    this._selectionStrategy.setSelectedItems(keys, items);\n  },\n  onSelectionChanged: function () {\n    this._selectionStrategy.onSelectionChanged();\n  },\n  changeItemSelection: function (itemIndex, keys) {\n    var isSelectedItemsChanged,\n        items = this.options.plainItems(),\n        item = items[itemIndex];\n\n    if (!this.isSelectable() || !this.isDataItem(item)) {\n      return false;\n    }\n\n    var itemData = this.options.getItemData(item),\n        itemKey = this.options.keyOf(itemData);\n    keys = keys || {};\n\n    if (keys.shift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\n      isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items);\n    } else {\n      if (keys.control) {\n        this._resetItemSelectionWhenShiftKeyPressed();\n\n        var isSelected = this._selectionStrategy.isItemDataSelected(itemData);\n\n        if (\"single\" === this.options.mode) {\n          this.clearSelectedItems();\n        }\n\n        if (isSelected) {\n          this._removeSelectedItem(itemKey);\n        } else {\n          this._addSelectedItem(itemData, itemKey);\n        }\n\n        isSelectedItemsChanged = true;\n      } else {\n        this._resetItemSelectionWhenShiftKeyPressed();\n\n        var isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\n\n        if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\n          this._setSelectedItems([itemKey], [itemData]);\n\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n\n    if (isSelectedItemsChanged) {\n      this._focusedItemIndex = itemIndex;\n      this.onSelectionChanged();\n      return true;\n    }\n  },\n  isDataItem: function (item) {\n    return this.options.isSelectableItem(item);\n  },\n  isSelectable: function () {\n    return \"single\" === this.options.mode || \"multiple\" === this.options.mode;\n  },\n  isItemDataSelected: function (data) {\n    return this._selectionStrategy.isItemDataSelected(data);\n  },\n  isItemSelected: function (arg) {\n    return this._selectionStrategy.isItemKeySelected(arg);\n  },\n  _resetItemSelectionWhenShiftKeyPressed: function () {\n    delete this._shiftFocusedItemIndex;\n  },\n  _resetFocusedItemIndex: function () {\n    this._focusedItemIndex = -1;\n  },\n  changeItemSelectionWhenShiftKeyPressed: function (itemIndex, items) {\n    var itemIndexStep,\n        index,\n        isSelectedItemsChanged = false,\n        keyOf = this.options.keyOf,\n        focusedItem = items[this._focusedItemIndex],\n        focusedData = this.options.getItemData(focusedItem),\n        focusedKey = keyOf(focusedData),\n        isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\n\n    if (!isDefined(this._shiftFocusedItemIndex)) {\n      this._shiftFocusedItemIndex = this._focusedItemIndex;\n    }\n\n    var data, itemKey;\n\n    if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\n      itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\n\n      for (index = this._focusedItemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\n        if (this.isDataItem(items[index])) {\n          itemKey = keyOf(this.options.getItemData(items[index]));\n\n          this._removeSelectedItem(itemKey);\n\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n\n    if (itemIndex !== this._shiftFocusedItemIndex) {\n      itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\n\n      for (index = itemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\n        if (this.isDataItem(items[index])) {\n          data = this.options.getItemData(items[index]);\n          itemKey = keyOf(data);\n\n          this._addSelectedItem(data, itemKey);\n\n          isSelectedItemsChanged = true;\n        }\n      }\n    }\n\n    if (this.isDataItem(focusedItem) && !isFocusedItemSelected) {\n      this._addSelectedItem(focusedData, focusedKey);\n\n      isSelectedItemsChanged = true;\n    }\n\n    return isSelectedItemsChanged;\n  },\n  clearSelectedItems: function () {\n    this._setSelectedItems([], []);\n  },\n  selectAll: function (isOnePage) {\n    this._resetFocusedItemIndex();\n\n    if (isOnePage) {\n      return this._onePageSelectAll(false);\n    } else {\n      return this.selectedItemKeys([], true, false, true);\n    }\n  },\n  deselectAll: function (isOnePage) {\n    this._resetFocusedItemIndex();\n\n    if (isOnePage) {\n      return this._onePageSelectAll(true);\n    } else {\n      return this.selectedItemKeys([], true, true, true);\n    }\n  },\n  _onePageSelectAll: function (isDeselect) {\n    var items = this.options.plainItems();\n\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n\n      if (this.isDataItem(item)) {\n        var itemData = this.options.getItemData(item),\n            itemKey = this.options.keyOf(itemData),\n            isSelected = this.isItemSelected(itemKey);\n\n        if (!isSelected && !isDeselect) {\n          this._addSelectedItem(itemData, itemKey);\n        }\n\n        if (isSelected && isDeselect) {\n          this._removeSelectedItem(itemKey);\n        }\n      }\n    }\n\n    this.onSelectionChanged();\n    return new Deferred().resolve();\n  },\n  getSelectAllState: function (visibleOnly) {\n    return this._selectionStrategy.getSelectAllState(visibleOnly);\n  }\n});","map":{"version":3,"sources":["C:/Users/abdel/PhpstormProjects/editeur_scenario_jeu/node_modules/devextreme/ui/selection/selection.js"],"names":["Class","require","deferredStrategy","standardStrategy","extend","noop","isDefined","Deferred","module","exports","inherit","ctor","options","_getDefaultOptions","selectedItemKeys","selectedKeys","_selectionStrategy","deferred","_focusedItemIndex","equalByReference","updateSelectedItemKeyHash","mode","selectedItems","selectionFilter","maxFilterLengthInRequest","onSelectionChanged","key","keyOf","item","load","resolve","totalCount","isSelectableItem","isItemSelected","getItemData","dataFields","filter","validate","getSelectedItemKeys","getSelectedItems","value","filterIsChanged","JSON","stringify","setSelection","keys","select","deselect","preserve","isDeselect","isSelectAll","that","Array","isArray","clearSelection","_addSelectedItem","itemData","addSelectedItem","_removeSelectedItem","removeSelectedItem","_setSelectedItems","items","setSelectedItems","changeItemSelection","itemIndex","isSelectedItemsChanged","plainItems","isSelectable","isDataItem","itemKey","shift","changeItemSelectionWhenShiftKeyPressed","control","_resetItemSelectionWhenShiftKeyPressed","isSelected","isItemDataSelected","clearSelectedItems","isKeysEqual","equalKeys","length","data","arg","isItemKeySelected","_shiftFocusedItemIndex","_resetFocusedItemIndex","itemIndexStep","index","focusedItem","focusedData","focusedKey","isFocusedItemSelected","selectAll","isOnePage","_onePageSelectAll","deselectAll","i","getSelectAllState","visibleOnly"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/selection/selection.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Class = require(\"../../core/class\"),\r\n    deferredStrategy = require(\"./selection.strategy.deferred\"),\r\n    standardStrategy = require(\"./selection.strategy.standard\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    noop = require(\"../../core/utils/common\").noop,\r\n    isDefined = require(\"../../core/utils/type\").isDefined,\r\n    Deferred = require(\"../../core/utils/deferred\").Deferred;\r\nmodule.exports = Class.inherit({\r\n    ctor: function(options) {\r\n        this.options = extend(this._getDefaultOptions(), options, {\r\n            selectedItemKeys: options.selectedKeys || []\r\n        });\r\n        this._selectionStrategy = this.options.deferred ? new deferredStrategy(this.options) : new standardStrategy(this.options);\r\n        this._focusedItemIndex = -1;\r\n        if (!this.options.equalByReference) {\r\n            this._selectionStrategy.updateSelectedItemKeyHash(this.options.selectedItemKeys)\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return {\r\n            deferred: false,\r\n            equalByReference: false,\r\n            mode: \"multiple\",\r\n            selectedItems: [],\r\n            selectionFilter: [],\r\n            maxFilterLengthInRequest: 0,\r\n            onSelectionChanged: noop,\r\n            key: noop,\r\n            keyOf: function(item) {\r\n                return item\r\n            },\r\n            load: function() {\r\n                return (new Deferred).resolve([])\r\n            },\r\n            totalCount: function() {\r\n                return -1\r\n            },\r\n            isSelectableItem: function() {\r\n                return true\r\n            },\r\n            isItemSelected: function() {\r\n                return false\r\n            },\r\n            getItemData: function(item) {\r\n                return item\r\n            },\r\n            dataFields: noop,\r\n            filter: noop\r\n        }\r\n    },\r\n    validate: function() {\r\n        this._selectionStrategy.validate()\r\n    },\r\n    getSelectedItemKeys: function() {\r\n        return this._selectionStrategy.getSelectedItemKeys()\r\n    },\r\n    getSelectedItems: function() {\r\n        return this._selectionStrategy.getSelectedItems()\r\n    },\r\n    selectionFilter: function(value) {\r\n        if (void 0 === value) {\r\n            return this.options.selectionFilter\r\n        }\r\n        var filterIsChanged = this.options.selectionFilter !== value && JSON.stringify(this.options.selectionFilter) !== JSON.stringify(value);\r\n        this.options.selectionFilter = value;\r\n        filterIsChanged && this.onSelectionChanged()\r\n    },\r\n    setSelection: function(keys) {\r\n        return this.selectedItemKeys(keys)\r\n    },\r\n    select: function(keys) {\r\n        return this.selectedItemKeys(keys, true)\r\n    },\r\n    deselect: function(keys) {\r\n        return this.selectedItemKeys(keys, true, true)\r\n    },\r\n    selectedItemKeys: function(keys, preserve, isDeselect, isSelectAll) {\r\n        var that = this;\r\n        keys = keys || [];\r\n        keys = Array.isArray(keys) ? keys : [keys];\r\n        that.validate();\r\n        return this._selectionStrategy.selectedItemKeys(keys, preserve, isDeselect, isSelectAll)\r\n    },\r\n    clearSelection: function() {\r\n        return this.selectedItemKeys([])\r\n    },\r\n    _addSelectedItem: function(itemData, key) {\r\n        this._selectionStrategy.addSelectedItem(key, itemData)\r\n    },\r\n    _removeSelectedItem: function(key) {\r\n        this._selectionStrategy.removeSelectedItem(key)\r\n    },\r\n    _setSelectedItems: function(keys, items) {\r\n        this._selectionStrategy.setSelectedItems(keys, items)\r\n    },\r\n    onSelectionChanged: function() {\r\n        this._selectionStrategy.onSelectionChanged()\r\n    },\r\n    changeItemSelection: function(itemIndex, keys) {\r\n        var isSelectedItemsChanged, items = this.options.plainItems(),\r\n            item = items[itemIndex];\r\n        if (!this.isSelectable() || !this.isDataItem(item)) {\r\n            return false\r\n        }\r\n        var itemData = this.options.getItemData(item),\r\n            itemKey = this.options.keyOf(itemData);\r\n        keys = keys || {};\r\n        if (keys.shift && \"multiple\" === this.options.mode && this._focusedItemIndex >= 0) {\r\n            isSelectedItemsChanged = this.changeItemSelectionWhenShiftKeyPressed(itemIndex, items)\r\n        } else {\r\n            if (keys.control) {\r\n                this._resetItemSelectionWhenShiftKeyPressed();\r\n                var isSelected = this._selectionStrategy.isItemDataSelected(itemData);\r\n                if (\"single\" === this.options.mode) {\r\n                    this.clearSelectedItems()\r\n                }\r\n                if (isSelected) {\r\n                    this._removeSelectedItem(itemKey)\r\n                } else {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n                isSelectedItemsChanged = true\r\n            } else {\r\n                this._resetItemSelectionWhenShiftKeyPressed();\r\n                var isKeysEqual = this._selectionStrategy.equalKeys(this.options.selectedItemKeys[0], itemKey);\r\n                if (1 !== this.options.selectedItemKeys.length || !isKeysEqual) {\r\n                    this._setSelectedItems([itemKey], [itemData]);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (isSelectedItemsChanged) {\r\n            this._focusedItemIndex = itemIndex;\r\n            this.onSelectionChanged();\r\n            return true\r\n        }\r\n    },\r\n    isDataItem: function(item) {\r\n        return this.options.isSelectableItem(item)\r\n    },\r\n    isSelectable: function() {\r\n        return \"single\" === this.options.mode || \"multiple\" === this.options.mode\r\n    },\r\n    isItemDataSelected: function(data) {\r\n        return this._selectionStrategy.isItemDataSelected(data)\r\n    },\r\n    isItemSelected: function(arg) {\r\n        return this._selectionStrategy.isItemKeySelected(arg)\r\n    },\r\n    _resetItemSelectionWhenShiftKeyPressed: function() {\r\n        delete this._shiftFocusedItemIndex\r\n    },\r\n    _resetFocusedItemIndex: function() {\r\n        this._focusedItemIndex = -1\r\n    },\r\n    changeItemSelectionWhenShiftKeyPressed: function(itemIndex, items) {\r\n        var itemIndexStep, index, isSelectedItemsChanged = false,\r\n            keyOf = this.options.keyOf,\r\n            focusedItem = items[this._focusedItemIndex],\r\n            focusedData = this.options.getItemData(focusedItem),\r\n            focusedKey = keyOf(focusedData),\r\n            isFocusedItemSelected = focusedItem && this.isItemDataSelected(focusedData);\r\n        if (!isDefined(this._shiftFocusedItemIndex)) {\r\n            this._shiftFocusedItemIndex = this._focusedItemIndex\r\n        }\r\n        var data, itemKey;\r\n        if (this._shiftFocusedItemIndex !== this._focusedItemIndex) {\r\n            itemIndexStep = this._focusedItemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            for (index = this._focusedItemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\r\n                if (this.isDataItem(items[index])) {\r\n                    itemKey = keyOf(this.options.getItemData(items[index]));\r\n                    this._removeSelectedItem(itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (itemIndex !== this._shiftFocusedItemIndex) {\r\n            itemIndexStep = itemIndex < this._shiftFocusedItemIndex ? 1 : -1;\r\n            for (index = itemIndex; index !== this._shiftFocusedItemIndex; index += itemIndexStep) {\r\n                if (this.isDataItem(items[index])) {\r\n                    data = this.options.getItemData(items[index]);\r\n                    itemKey = keyOf(data);\r\n                    this._addSelectedItem(data, itemKey);\r\n                    isSelectedItemsChanged = true\r\n                }\r\n            }\r\n        }\r\n        if (this.isDataItem(focusedItem) && !isFocusedItemSelected) {\r\n            this._addSelectedItem(focusedData, focusedKey);\r\n            isSelectedItemsChanged = true\r\n        }\r\n        return isSelectedItemsChanged\r\n    },\r\n    clearSelectedItems: function() {\r\n        this._setSelectedItems([], [])\r\n    },\r\n    selectAll: function(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._onePageSelectAll(false)\r\n        } else {\r\n            return this.selectedItemKeys([], true, false, true)\r\n        }\r\n    },\r\n    deselectAll: function(isOnePage) {\r\n        this._resetFocusedItemIndex();\r\n        if (isOnePage) {\r\n            return this._onePageSelectAll(true)\r\n        } else {\r\n            return this.selectedItemKeys([], true, true, true)\r\n        }\r\n    },\r\n    _onePageSelectAll: function(isDeselect) {\r\n        var items = this.options.plainItems();\r\n        for (var i = 0; i < items.length; i++) {\r\n            var item = items[i];\r\n            if (this.isDataItem(item)) {\r\n                var itemData = this.options.getItemData(item),\r\n                    itemKey = this.options.keyOf(itemData),\r\n                    isSelected = this.isItemSelected(itemKey);\r\n                if (!isSelected && !isDeselect) {\r\n                    this._addSelectedItem(itemData, itemKey)\r\n                }\r\n                if (isSelected && isDeselect) {\r\n                    this._removeSelectedItem(itemKey)\r\n                }\r\n            }\r\n        }\r\n        this.onSelectionChanged();\r\n        return (new Deferred).resolve()\r\n    },\r\n    getSelectAllState: function(visibleOnly) {\r\n        return this._selectionStrategy.getSelectAllState(visibleOnly)\r\n    }\r\n});\r\n"]},"metadata":{},"sourceType":"script"}