{"ast":null,"code":"import { quetes, taches } from \"../../data/data\";\nexport function accesQueteIndice(id) {\n  return quetes.findIndex(v => v.nom === id);\n}\nexport function modificationQuetes(quete, id) {\n  let i = accesQueteIndice(id);\n  quetes[i] = quete;\n  return taches.map(q => {\n    if (q.idQuete === id) {\n      q.idQuete = quete.id;\n    }\n  });\n}\nexport function supprimerQuete(id) {\n  quetes = quetes.filter(q => q.id !== id);\n  taches = taches.filter(t => t.idQuete !== id);\n}\nexport function ajouterQuete(quete) {\n  quetes.push(quete);\n}\nexport function listeQuete(idScenario) {\n  return quetes.filter(q => q.nom === idScenario);\n}","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\fonctions\\helper\\QueteHelper.js"],"names":["quetes","taches","accesQueteIndice","id","findIndex","v","nom","modificationQuetes","quete","i","map","q","idQuete","supprimerQuete","filter","t","ajouterQuete","push","listeQuete","idScenario"],"mappings":"AAAA,SAAQA,MAAR,EAAgBC,MAAhB,QAA6B,iBAA7B;AAGA,OAAO,SAASC,gBAAT,CAA0BC,EAA1B,EAA6B;AAChC,SAAOH,MAAM,CAACI,SAAP,CAAiBC,CAAC,IAAIA,CAAC,CAACC,GAAF,KAAUH,EAAhC,CAAP;AACH;AAGD,OAAO,SAASI,kBAAT,CAA4BC,KAA5B,EAAkCL,EAAlC,EAAqC;AACxC,MAAIM,CAAC,GAAGP,gBAAgB,CAACC,EAAD,CAAxB;AACAH,EAAAA,MAAM,CAACS,CAAD,CAAN,GAAUD,KAAV;AACA,SAAOP,MAAM,CAACS,GAAP,CAAWC,CAAC,IAAE;AACjB,QAAIA,CAAC,CAACC,OAAF,KAAYT,EAAhB,EAAmB;AACfQ,MAAAA,CAAC,CAACC,OAAF,GAAUJ,KAAK,CAACL,EAAhB;AACH;AACJ,GAJM,CAAP;AAKH;AAGD,OAAO,SAASU,cAAT,CAAwBV,EAAxB,EAA2B;AAC9BH,EAAAA,MAAM,GAACA,MAAM,CAACc,MAAP,CAAcH,CAAC,IAAEA,CAAC,CAACR,EAAF,KAAOA,EAAxB,CAAP;AACAF,EAAAA,MAAM,GAACA,MAAM,CAACa,MAAP,CAAcC,CAAC,IAAEA,CAAC,CAACH,OAAF,KAAYT,EAA7B,CAAP;AACH;AAED,OAAO,SAASa,YAAT,CAAsBR,KAAtB,EAA6B;AAChCR,EAAAA,MAAM,CAACiB,IAAP,CAAYT,KAAZ;AACH;AAED,OAAO,SAASU,UAAT,CAAoBC,UAApB,EAAgC;AACnC,SAAOnB,MAAM,CAACc,MAAP,CAAcH,CAAC,IAAIA,CAAC,CAACL,GAAF,KAAUa,UAA7B,CAAP;AACH","sourcesContent":["import {quetes, taches} from \"../../data/data\";\r\n\r\n\r\nexport function accesQueteIndice(id){\r\n    return quetes.findIndex(v => v.nom === id);\r\n}\r\n\r\n\r\nexport function modificationQuetes(quete,id){\r\n    let i = accesQueteIndice(id);\r\n    quetes[i]=quete;\r\n    return taches.map(q=>{\r\n        if (q.idQuete===id){\r\n            q.idQuete=quete.id;\r\n        }\r\n    });\r\n}\r\n\r\n\r\nexport function supprimerQuete(id){\r\n    quetes=quetes.filter(q=>q.id!==id);\r\n    taches=taches.filter(t=>t.idQuete!==id);\r\n}\r\n\r\nexport function ajouterQuete(quete) {\r\n    quetes.push(quete);\r\n}\r\n\r\nexport function listeQuete(idScenario) {\r\n    return quetes.filter(q => q.nom === idScenario)\r\n}"]},"metadata":{},"sourceType":"module"}