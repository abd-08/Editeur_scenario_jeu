{"ast":null,"code":"import { activites, scenarios, quetes, taches } from \"../../data/data\";\nimport { accesScenarioIndice, listeScenario } from \"./ScenarioHelper\";\nimport { accesQueteIndice, listeQuete } from \"./QueteHelper\";\nimport { accesTacheIndice } from \"./TacheHelper\";\nimport { accesActiviteIndice } from \"./ActiviteHelper\";\nimport { compositions } from \"../../types/TypeComposition\";\nexport function mise_a_jour_na() {\n  let activity = [];\n  let scenario = [];\n  let quest = [];\n  let S;\n  let Q = [];\n\n  for (let i = 0; i < activites.length; i++) {\n    // on parcours la liste des activites\n    S = listeScenario(activites[i].id); //on sélectionne les scénario dont le père est A */\n\n    for (let j = 0; j < S.length; j++) {\n      // on parcours les scenarios d'une activite A\n\n      /* Liste des quêtes d'un scénario donné */\n      Q = listeQuete(S[j].id);\n\n      for (let k = 0; k < Q.length; k++) {\n        //on parcours les quêtes du scenario i\n        quest.push({\n          id: Q[k].id,\n          text: Q[k].nom\n        });\n      }\n\n      scenario.push({\n        id: S[j].id,\n        expanded: true,\n        text: S[j].nom,\n        items: quest\n      });\n      quest = [];\n    }\n\n    activity.push({\n      id: activites[i].id,\n      text: activites[i].nom,\n      expanded: true,\n      items: scenario\n    });\n    scenario = [];\n  }\n\n  return activity;\n}\nexport function liste_entite(node) {\n  let noeudFils = node;\n\n  while (noeudFils.type !== compositions.ACTIVITE) {\n    noeudFils = rechercheNav(noeudFils.idPere);\n  }\n\n  return node.listeEntites;\n}\nexport function rechercheNav(id) {\n  let res = type_element(id);\n  let i;\n\n  switch (res) {\n    case compositions.QUETE:\n      i = accesQueteIndice(id);\n      return {\n        tab: quetes,\n        i: i\n      };\n\n    case compositions.TACHE:\n      i = accesTacheIndice(id);\n      return {\n        tab: taches,\n        i: i\n      };\n\n    case compositions.SCENARIO:\n      i = accesScenarioIndice(id);\n      return {\n        tab: scenarios,\n        i: i\n      };\n\n    case compositions.ACTIVITE:\n      i = accesActiviteIndice(id);\n      return {\n        tab: activites,\n        i: i\n      };\n\n    default:\n      return null;\n  }\n}\nexport function sousCategorie(id) {\n  let type = type_element(id);\n\n  switch (type.type) {\n    case compositions.QUETE:\n      return {\n        type: compositions.TACHE,\n        tab: taches\n      };\n\n    case compositions.SCENARIO:\n      return {\n        type: compositions.QUETE,\n        tab: quetes\n      };\n\n    case compositions.ACTIVITE:\n      return {\n        type: compositions.SCENARIO,\n        tab: scenarios\n      };\n\n    default:\n      return null;\n  }\n}\nexport function type_element(id) {\n  let i = activites.findIndex(x => x.id === id);\n  if (i > -1) return compositions.ACTIVITE;\n  i = scenarios.findIndex(x => x.id === id);\n  if (i > -1) return compositions.SCENARIO;\n  i = quetes.findIndex(x => x.id === id);\n  if (i > -1) return compositions.QUETE;\n  i = taches.findIndex(x => x.id === id);\n  if (i > -1) return compositions.TACHE;\n  return null;\n}","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\fonctions\\helper\\NavigationHelper.js"],"names":["activites","scenarios","quetes","taches","accesScenarioIndice","listeScenario","accesQueteIndice","listeQuete","accesTacheIndice","accesActiviteIndice","compositions","mise_a_jour_na","activity","scenario","quest","S","Q","i","length","id","j","k","push","text","nom","expanded","items","liste_entite","node","noeudFils","type","ACTIVITE","rechercheNav","idPere","listeEntites","res","type_element","QUETE","tab","TACHE","SCENARIO","sousCategorie","findIndex","x"],"mappings":"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","sourcesContent":["import {activites, scenarios , quetes , taches} from \"../../data/data\";\r\nimport {accesScenarioIndice, listeScenario} from \"./ScenarioHelper\";\r\nimport {accesQueteIndice, listeQuete} from \"./QueteHelper\";\r\nimport {accesTacheIndice} from \"./TacheHelper\";\r\nimport {accesActiviteIndice} from \"./ActiviteHelper\";\r\nimport {compositions} from \"../../types/TypeComposition\";\r\n\r\nexport function mise_a_jour_na(){\r\n    let activity=[];\r\n    let scenario =[];\r\n    let quest=[];\r\n    let S;\r\n    let Q=[ ];\r\n\r\n    for (let i=0 ; i<activites.length;i++) {// on parcours la liste des activites\r\n\r\n        S = listeScenario(activites[i].id);//on sélectionne les scénario dont le père est A */\r\n        for (let j = 0; j < S.length; j++) {// on parcours les scenarios d'une activite A\r\n\r\n            /* Liste des quêtes d'un scénario donné */\r\n            Q = listeQuete(S[j].id);\r\n            for (let k = 0; k < Q.length; k++) { //on parcours les quêtes du scenario i\r\n\r\n                quest.push({id: Q[k].id, text: Q[k].nom});\r\n            }\r\n\r\n            scenario.push({id: S[j].id, expanded: true, text: S[j].nom, items: quest});\r\n            quest = [];\r\n        }\r\n\r\n        activity.push({id: activites[i].id, text: activites[i].nom, expanded: true, items: scenario});\r\n        scenario=[];\r\n    }\r\n    return activity;\r\n}\r\n\r\nexport function liste_entite(node){\r\n    let noeudFils = node;\r\n    while ( noeudFils.type!==compositions.ACTIVITE){\r\n        noeudFils = rechercheNav(noeudFils.idPere)\r\n    }\r\n    return node.listeEntites;\r\n}\r\n\r\n\r\nexport function rechercheNav(id){\r\n    let res = type_element(id);\r\n    let i;\r\n    switch (res) {\r\n        case compositions.QUETE:\r\n            i=accesQueteIndice(id);\r\n            return {tab:quetes,i:i};\r\n\r\n        case compositions.TACHE:\r\n            i=accesTacheIndice(id);\r\n            return {tab:taches,i:i};\r\n\r\n        case compositions.SCENARIO:\r\n            i=accesScenarioIndice(id);\r\n            return {tab:scenarios,i:i};\r\n\r\n        case compositions.ACTIVITE:\r\n            i=accesActiviteIndice(id);\r\n            return {tab:activites,i:i};\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\n\r\nexport function sousCategorie (id) {\r\n    let type = type_element(id);\r\n    switch (type.type) {\r\n        case compositions.QUETE:\r\n            return {type: compositions.TACHE, tab: taches};\r\n\r\n        case compositions.SCENARIO:\r\n            return {type: compositions.QUETE, tab: quetes};\r\n\r\n        case compositions.ACTIVITE:\r\n            return {type: compositions.SCENARIO, tab: scenarios};\r\n\r\n        default:\r\n            return null;\r\n\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\nexport function type_element(id){\r\n\r\n    let i=activites.findIndex(x=>x.id===id);\r\n    if (i>-1) return compositions.ACTIVITE;\r\n    \r\n    i=scenarios.findIndex(x=>x.id===id);\r\n    if (i>-1) return compositions.SCENARIO;\r\n\r\n    i=quetes.findIndex(x=>x.id===id);\r\n    if (i>-1) return compositions.QUETE;\r\n\r\n    i=taches.findIndex(x=>x.id===id);\r\n    if (i>-1) return compositions.TACHE;\r\n\r\n    return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}