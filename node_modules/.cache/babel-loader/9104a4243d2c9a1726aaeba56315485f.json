{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/mouse_and_touch.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"../../core/utils/extend\").extend,\n    BaseStrategy = require(\"./base\"),\n    MouseStrategy = require(\"./mouse\"),\n    TouchStrategy = require(\"./touch\"),\n    eventUtils = require(\"../utils\");\n\nvar eventMap = {\n  dxpointerdown: \"touchstart mousedown\",\n  dxpointermove: \"touchmove mousemove\",\n  dxpointerup: \"touchend mouseup\",\n  dxpointercancel: \"touchcancel\",\n  dxpointerover: \"mouseover\",\n  dxpointerout: \"mouseout\",\n  dxpointerenter: \"mouseenter\",\n  dxpointerleave: \"mouseleave\"\n};\nvar activated = false;\n\nvar activateStrategy = function () {\n  if (activated) {\n    return;\n  }\n\n  MouseStrategy.activate();\n  activated = true;\n};\n\nvar MouseAndTouchStrategy = BaseStrategy.inherit({\n  EVENT_LOCK_TIMEOUT: 100,\n  ctor: function () {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _handler: function (e) {\n    var isMouseEvent = eventUtils.isMouseEvent(e);\n\n    if (!isMouseEvent) {\n      this._skipNextEvents = true;\n    }\n\n    if (isMouseEvent && this._mouseLocked) {\n      return;\n    }\n\n    if (isMouseEvent && this._skipNextEvents) {\n      this._skipNextEvents = false;\n      this._mouseLocked = true;\n      clearTimeout(this._unlockMouseTimer);\n      var that = this;\n      this._unlockMouseTimer = setTimeout(function () {\n        that._mouseLocked = false;\n      }, this.EVENT_LOCK_TIMEOUT);\n      return;\n    }\n\n    return this.callBase(e);\n  },\n  _fireEvent: function (args) {\n    var isMouseEvent = eventUtils.isMouseEvent(args.originalEvent),\n        normalizer = isMouseEvent ? MouseStrategy.normalize : TouchStrategy.normalize;\n    return this.callBase(extend(normalizer(args.originalEvent), args));\n  },\n  dispose: function () {\n    this.callBase();\n    this._skipNextEvents = false;\n    this._mouseLocked = false;\n    clearTimeout(this._unlockMouseTimer);\n  }\n});\nMouseAndTouchStrategy.map = eventMap;\nMouseAndTouchStrategy.resetObserver = MouseStrategy.resetObserver;\nmodule.exports = MouseAndTouchStrategy;","map":{"version":3,"sources":["C:/Users/abdel/PhpstormProjects/editeur_scenario_jeu/node_modules/devextreme/events/pointer/mouse_and_touch.js"],"names":["extend","require","BaseStrategy","MouseStrategy","TouchStrategy","eventUtils","eventMap","dxpointerdown","dxpointermove","dxpointerup","dxpointercancel","dxpointerover","dxpointerout","dxpointerenter","dxpointerleave","activated","activateStrategy","activate","MouseAndTouchStrategy","inherit","EVENT_LOCK_TIMEOUT","ctor","callBase","apply","arguments","_handler","e","isMouseEvent","_skipNextEvents","_mouseLocked","clearTimeout","_unlockMouseTimer","that","setTimeout","_fireEvent","args","originalEvent","normalizer","normalize","dispose","map","resetObserver","module","exports"],"mappings":"AAAA;;;;;;;;AAQA;;AACA,IAAIA,MAAM,GAAGC,OAAO,CAAC,yBAAD,CAAP,CAAmCD,MAAhD;AAAA,IACIE,YAAY,GAAGD,OAAO,CAAC,QAAD,CAD1B;AAAA,IAEIE,aAAa,GAAGF,OAAO,CAAC,SAAD,CAF3B;AAAA,IAGIG,aAAa,GAAGH,OAAO,CAAC,SAAD,CAH3B;AAAA,IAIII,UAAU,GAAGJ,OAAO,CAAC,UAAD,CAJxB;;AAKA,IAAIK,QAAQ,GAAG;AACXC,EAAAA,aAAa,EAAE,sBADJ;AAEXC,EAAAA,aAAa,EAAE,qBAFJ;AAGXC,EAAAA,WAAW,EAAE,kBAHF;AAIXC,EAAAA,eAAe,EAAE,aAJN;AAKXC,EAAAA,aAAa,EAAE,WALJ;AAMXC,EAAAA,YAAY,EAAE,UANH;AAOXC,EAAAA,cAAc,EAAE,YAPL;AAQXC,EAAAA,cAAc,EAAE;AARL,CAAf;AAUA,IAAIC,SAAS,GAAG,KAAhB;;AACA,IAAIC,gBAAgB,GAAG,YAAW;AAC9B,MAAID,SAAJ,EAAe;AACX;AACH;;AACDZ,EAAAA,aAAa,CAACc,QAAd;AACAF,EAAAA,SAAS,GAAG,IAAZ;AACH,CAND;;AAOA,IAAIG,qBAAqB,GAAGhB,YAAY,CAACiB,OAAb,CAAqB;AAC7CC,EAAAA,kBAAkB,EAAE,GADyB;AAE7CC,EAAAA,IAAI,EAAE,YAAW;AACb,SAAKC,QAAL,CAAcC,KAAd,CAAoB,IAApB,EAA0BC,SAA1B;AACAR,IAAAA,gBAAgB;AACnB,GAL4C;AAM7CS,EAAAA,QAAQ,EAAE,UAASC,CAAT,EAAY;AAClB,QAAIC,YAAY,GAAGtB,UAAU,CAACsB,YAAX,CAAwBD,CAAxB,CAAnB;;AACA,QAAI,CAACC,YAAL,EAAmB;AACf,WAAKC,eAAL,GAAuB,IAAvB;AACH;;AACD,QAAID,YAAY,IAAI,KAAKE,YAAzB,EAAuC;AACnC;AACH;;AACD,QAAIF,YAAY,IAAI,KAAKC,eAAzB,EAA0C;AACtC,WAAKA,eAAL,GAAuB,KAAvB;AACA,WAAKC,YAAL,GAAoB,IAApB;AACAC,MAAAA,YAAY,CAAC,KAAKC,iBAAN,CAAZ;AACA,UAAIC,IAAI,GAAG,IAAX;AACA,WAAKD,iBAAL,GAAyBE,UAAU,CAAC,YAAW;AAC3CD,QAAAA,IAAI,CAACH,YAAL,GAAoB,KAApB;AACH,OAFkC,EAEhC,KAAKT,kBAF2B,CAAnC;AAGA;AACH;;AACD,WAAO,KAAKE,QAAL,CAAcI,CAAd,CAAP;AACH,GAzB4C;AA0B7CQ,EAAAA,UAAU,EAAE,UAASC,IAAT,EAAe;AACvB,QAAIR,YAAY,GAAGtB,UAAU,CAACsB,YAAX,CAAwBQ,IAAI,CAACC,aAA7B,CAAnB;AAAA,QACIC,UAAU,GAAGV,YAAY,GAAGxB,aAAa,CAACmC,SAAjB,GAA6BlC,aAAa,CAACkC,SADxE;AAEA,WAAO,KAAKhB,QAAL,CAActB,MAAM,CAACqC,UAAU,CAACF,IAAI,CAACC,aAAN,CAAX,EAAiCD,IAAjC,CAApB,CAAP;AACH,GA9B4C;AA+B7CI,EAAAA,OAAO,EAAE,YAAW;AAChB,SAAKjB,QAAL;AACA,SAAKM,eAAL,GAAuB,KAAvB;AACA,SAAKC,YAAL,GAAoB,KAApB;AACAC,IAAAA,YAAY,CAAC,KAAKC,iBAAN,CAAZ;AACH;AApC4C,CAArB,CAA5B;AAsCAb,qBAAqB,CAACsB,GAAtB,GAA4BlC,QAA5B;AACAY,qBAAqB,CAACuB,aAAtB,GAAsCtC,aAAa,CAACsC,aAApD;AACAC,MAAM,CAACC,OAAP,GAAiBzB,qBAAjB","sourcesContent":["/**\r\n * DevExtreme (events/pointer/mouse_and_touch.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar extend = require(\"../../core/utils/extend\").extend,\r\n    BaseStrategy = require(\"./base\"),\r\n    MouseStrategy = require(\"./mouse\"),\r\n    TouchStrategy = require(\"./touch\"),\r\n    eventUtils = require(\"../utils\");\r\nvar eventMap = {\r\n    dxpointerdown: \"touchstart mousedown\",\r\n    dxpointermove: \"touchmove mousemove\",\r\n    dxpointerup: \"touchend mouseup\",\r\n    dxpointercancel: \"touchcancel\",\r\n    dxpointerover: \"mouseover\",\r\n    dxpointerout: \"mouseout\",\r\n    dxpointerenter: \"mouseenter\",\r\n    dxpointerleave: \"mouseleave\"\r\n};\r\nvar activated = false;\r\nvar activateStrategy = function() {\r\n    if (activated) {\r\n        return\r\n    }\r\n    MouseStrategy.activate();\r\n    activated = true\r\n};\r\nvar MouseAndTouchStrategy = BaseStrategy.inherit({\r\n    EVENT_LOCK_TIMEOUT: 100,\r\n    ctor: function() {\r\n        this.callBase.apply(this, arguments);\r\n        activateStrategy()\r\n    },\r\n    _handler: function(e) {\r\n        var isMouseEvent = eventUtils.isMouseEvent(e);\r\n        if (!isMouseEvent) {\r\n            this._skipNextEvents = true\r\n        }\r\n        if (isMouseEvent && this._mouseLocked) {\r\n            return\r\n        }\r\n        if (isMouseEvent && this._skipNextEvents) {\r\n            this._skipNextEvents = false;\r\n            this._mouseLocked = true;\r\n            clearTimeout(this._unlockMouseTimer);\r\n            var that = this;\r\n            this._unlockMouseTimer = setTimeout(function() {\r\n                that._mouseLocked = false\r\n            }, this.EVENT_LOCK_TIMEOUT);\r\n            return\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _fireEvent: function(args) {\r\n        var isMouseEvent = eventUtils.isMouseEvent(args.originalEvent),\r\n            normalizer = isMouseEvent ? MouseStrategy.normalize : TouchStrategy.normalize;\r\n        return this.callBase(extend(normalizer(args.originalEvent), args))\r\n    },\r\n    dispose: function() {\r\n        this.callBase();\r\n        this._skipNextEvents = false;\r\n        this._mouseLocked = false;\r\n        clearTimeout(this._unlockMouseTimer)\r\n    }\r\n});\r\nMouseAndTouchStrategy.map = eventMap;\r\nMouseAndTouchStrategy.resetObserver = MouseStrategy.resetObserver;\r\nmodule.exports = MouseAndTouchStrategy;\r\n"]},"metadata":{},"sourceType":"script"}