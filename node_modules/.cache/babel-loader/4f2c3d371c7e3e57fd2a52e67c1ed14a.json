{"ast":null,"code":"/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar Class = require(\"../../core/class\"),\n    commonUtils = require(\"../../core/utils/common\"),\n    iteratorUtils = require(\"../../core/utils/iterator\"),\n    each = require(\"../../core/utils/iterator\").each,\n    typeUtils = require(\"../../core/utils/type\"),\n    extend = require(\"../../core/utils/extend\").extend,\n    errors = require(\"../../ui/widget/ui.errors\"),\n    getOperationBySearchMode = require(\"../../ui/widget/ui.search_box_mixin\").getOperationBySearchMode,\n    inArray = require(\"../../core/utils/array\").inArray,\n    query = require(\"../../data/query\"),\n    storeHelper = require(\"../../data/store_helper\"),\n    HierarchicalDataConverter = require(\"./ui.data_converter\");\n\nvar EXPANDED = \"expanded\",\n    SELECTED = \"selected\",\n    DISABLED = \"disabled\";\nvar DataAdapter = Class.inherit({\n  ctor: function (options) {\n    this.options = {};\n    extend(this.options, this._defaultOptions(), options);\n    this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\n    this._selectedNodesKeys = [];\n    this._expandedNodesKeys = [];\n    this._dataStructure = [];\n\n    this._createInternalDataStructure();\n\n    this.getTreeNodes();\n  },\n  setOption: function (name, value) {\n    this.options[name] = value;\n\n    if (\"recursiveSelection\" === name) {\n      this._updateSelection();\n    }\n  },\n  _defaultOptions: function () {\n    return {\n      dataAccessors: void 0,\n      items: [],\n      multipleSelection: true,\n      recursiveSelection: false,\n      recursiveExpansion: false,\n      rootValue: 0,\n      searchValue: \"\",\n      dataType: \"tree\",\n      searchMode: \"contains\",\n      dataConverter: new HierarchicalDataConverter(),\n      onNodeChanged: commonUtils.noop,\n      sort: null\n    };\n  },\n  _createInternalDataStructure: function () {\n    this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\n    this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\n    this.options.dataConverter._dataStructure = this._dataStructure;\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  _updateSelection: function () {\n    if (this.options.recursiveSelection) {\n      this._setChildrenSelection();\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _updateExpansion: function (key) {\n    if (this.options.recursiveExpansion) {\n      key ? this._updateOneBranch(key) : this._setParentExpansion();\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  _updateNodesKeysArray: function (property) {\n    var that = this,\n        array = [];\n    each(that._getDataBySelectionMode(), function (_, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      if (node.internalFields[property]) {\n        if (property === EXPANDED || that.options.multipleSelection) {\n          array.push(node.internalFields.key);\n        } else {\n          array.length && that.toggleSelection(array[0], false, true);\n          array = [node.internalFields.key];\n        }\n      }\n    });\n    return array;\n  },\n  _getDataBySelectionMode: function () {\n    return this.options.multipleSelection ? this.getData() : this.getFullData();\n  },\n  _isNodeVisible: function (node) {\n    return false !== node.internalFields.item.visible;\n  },\n  _getByKey: function (data, key) {\n    return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key);\n  },\n  _setChildrenSelection: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.childrenKeys.length) {\n        return;\n      }\n\n      var isSelected = node.internalFields.selected;\n      true === isSelected && that._toggleChildrenSelection(node, isSelected);\n    });\n  },\n  _setParentSelection: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      var parent = that.options.dataConverter.getParentNode(node);\n\n      if (parent && node.internalFields.parentKey !== that.options.rootValue) {\n        that._iterateParents(node, function (parent) {\n          var newParentState = that._calculateSelectedState(parent);\n\n          that._setFieldState(parent, SELECTED, newParentState);\n        });\n      }\n    });\n  },\n  _setParentExpansion: function () {\n    var that = this;\n    each(this._dataStructure, function (_, node) {\n      if (!node.internalFields.expanded) {\n        return;\n      }\n\n      that._updateOneBranch(node.internalFields.key);\n    });\n  },\n  _updateOneBranch: function (key) {\n    var that = this,\n        node = this.getNodeByKey(key);\n\n    that._iterateParents(node, function (parent) {\n      that._setFieldState(parent, EXPANDED, true);\n    });\n  },\n  _iterateChildren: function (node, recursive, callback) {\n    var that = this;\n    each(node.internalFields.childrenKeys, function (_, key) {\n      var child = that.getNodeByKey(key);\n      typeUtils.isFunction(callback) && callback(child);\n\n      if (child.internalFields.childrenKeys.length && recursive) {\n        that._iterateChildren(child, recursive, callback);\n      }\n    });\n  },\n  _iterateParents: function (node, callback) {\n    if (node.internalFields.parentKey === this.options.rootValue) {\n      return;\n    }\n\n    var parent = this.options.dataConverter.getParentNode(node);\n\n    if (parent) {\n      typeUtils.isFunction(callback) && callback(parent);\n\n      if (parent.internalFields.parentKey !== this.options.rootValue) {\n        this._iterateParents(parent, callback);\n      }\n    }\n  },\n  _calculateSelectedState: function (node) {\n    var itemsCount = node.internalFields.childrenKeys.length,\n        selectedItemsCount = 0,\n        invisibleItemsCount = 0,\n        result = false;\n\n    for (var i = 0; i <= itemsCount - 1; i++) {\n      var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]),\n          isChildInvisible = false === childNode.internalFields.item.visible,\n          childState = childNode.internalFields.selected;\n\n      if (isChildInvisible) {\n        invisibleItemsCount++;\n        continue;\n      }\n\n      if (childState) {\n        selectedItemsCount++;\n      } else {\n        if (void 0 === childState) {\n          selectedItemsCount += .5;\n        }\n      }\n    }\n\n    if (selectedItemsCount) {\n      result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0;\n    }\n\n    return result;\n  },\n  _toggleChildrenSelection: function (node, state) {\n    var that = this;\n\n    this._iterateChildren(node, true, function (child) {\n      if (that._isNodeVisible(child)) {\n        that._setFieldState(child, SELECTED, state);\n      }\n    });\n  },\n  _setFieldState: function (node, field, state) {\n    if (node.internalFields[field] === state) {\n      return;\n    }\n\n    node.internalFields[field] = state;\n\n    if (node.internalFields.publicNode) {\n      node.internalFields.publicNode[field] = state;\n    }\n\n    this.options.dataAccessors.setters[field](node.internalFields.item, state);\n    this.options.onNodeChanged(node);\n  },\n  _markChildren: function (keys) {\n    var that = this;\n    each(keys, function (_, key) {\n      var index = that.getIndexByKey(key),\n          node = that.getNodeByKey(key);\n      that._dataStructure[index] = 0;\n      node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys);\n    });\n  },\n  _removeNode: function (key) {\n    var node = this.getNodeByKey(key);\n    this._dataStructure[this.getIndexByKey(key)] = 0;\n\n    this._markChildren(node.internalFields.childrenKeys);\n\n    var that = this,\n        counter = 0,\n        items = extend([], this._dataStructure);\n    each(items, function (index, item) {\n      if (!item) {\n        that._dataStructure.splice(index - counter, 1);\n\n        counter++;\n      }\n    });\n  },\n  _addNode: function (item) {\n    var dataConverter = this.options.dataConverter,\n        node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\n\n    this._dataStructure = this._dataStructure.concat(node);\n    this._initialDataStructure = this._initialDataStructure.concat(node);\n    dataConverter._dataStructure = dataConverter._dataStructure.concat(node);\n  },\n  _updateFields: function () {\n    this.options.dataConverter.updateChildrenKeys();\n\n    this._updateSelection();\n\n    this._updateExpansion();\n  },\n  getSelectedNodesKeys: function () {\n    return this._selectedNodesKeys;\n  },\n  getExpandedNodesKeys: function () {\n    return this._expandedNodesKeys;\n  },\n  getData: function () {\n    return this._dataStructure;\n  },\n  getFullData: function () {\n    return this._initialDataStructure;\n  },\n  getNodeByItem: function (item) {\n    var result = null;\n    each(this._dataStructure, function (_, node) {\n      if (node.internalFields.item === item) {\n        result = node;\n        return false;\n      }\n    });\n    return result;\n  },\n  getNodesByItems: function (items) {\n    var that = this,\n        nodes = [];\n    each(items, function (_, item) {\n      var node = that.getNodeByItem(item);\n      node && nodes.push(node);\n    });\n    return nodes;\n  },\n  getNodeByKey: function (key, data) {\n    return this._getByKey(data || this._getDataBySelectionMode(), key);\n  },\n  getTreeNodes: function () {\n    return this.options.dataConverter.convertToPublicNodes(this.getRootNodes());\n  },\n  getItemsCount: function () {\n    return this.options.dataConverter.getItemsCount();\n  },\n  getVisibleItemsCount: function () {\n    return this.options.dataConverter.getVisibleItemsCount();\n  },\n  getPublicNode: function (node) {\n    return node.internalFields.publicNode;\n  },\n  getRootNodes: function () {\n    return this.getChildrenNodes(this.options.rootValue);\n  },\n  getChildrenNodes: function (parentKey) {\n    return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray();\n  },\n  getIndexByKey: function (key) {\n    return this.options.dataConverter.getIndexByKey(key);\n  },\n  addItem: function (item) {\n    this._addNode(item);\n\n    this._updateFields();\n  },\n  removeItem: function (key) {\n    this._removeNode(key);\n\n    this._updateFields();\n  },\n  toggleSelection: function (key, state, selectRecursive) {\n    var isSingleModeUnselect = this._isSingleModeUnselect(state),\n        node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\n\n    this._setFieldState(node, SELECTED, state);\n\n    if (this.options.recursiveSelection && !selectRecursive) {\n      state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\n\n      this._setParentSelection();\n    }\n\n    this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED);\n  },\n  _isSingleModeUnselect: function (selectionState) {\n    return !this.options.multipleSelection && !selectionState;\n  },\n  toggleNodeDisabledState: function (key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, DISABLED, state);\n  },\n  toggleSelectAll: function (state) {\n    if (!typeUtils.isDefined(state)) {\n      return;\n    }\n\n    var that = this,\n        lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1],\n        dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\n    each(dataStructure, function (index, node) {\n      if (!that._isNodeVisible(node)) {\n        return;\n      }\n\n      that._setFieldState(node, SELECTED, state);\n    });\n    that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\n\n    if (!state && that.options.selectionRequired) {\n      that.toggleSelection(lastSelectedKey, true);\n    }\n  },\n  isAllSelected: function () {\n    if (this.getSelectedNodesKeys().length) {\n      return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0;\n    } else {\n      return false;\n    }\n  },\n  toggleExpansion: function (key, state) {\n    var node = this.getNodeByKey(key);\n\n    this._setFieldState(node, EXPANDED, state);\n\n    if (state) {\n      this._updateExpansion(key);\n    }\n\n    this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED);\n  },\n  isFiltered: function (item) {\n    return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length;\n  },\n  _createCriteria: function (selector, value, operation) {\n    var searchFilter = [];\n\n    if (!Array.isArray(selector)) {\n      return [selector, operation, value];\n    }\n\n    iteratorUtils.each(selector, function (i, item) {\n      searchFilter.push([item, operation, value], \"or\");\n    });\n    searchFilter.pop();\n    return searchFilter;\n  },\n  _filterDataStructure: function (filterValue, dataStructure) {\n    var selector = this.options.searchExpr || this.options.dataAccessors.getters.display,\n        operation = getOperationBySearchMode(this.options.searchMode),\n        criteria = this._createCriteria(selector, filterValue, operation);\n\n    dataStructure = dataStructure || this._initialDataStructure;\n    return query(dataStructure).filter(criteria).toArray();\n  },\n  search: function (searchValue) {\n    var that = this,\n        matches = this._filterDataStructure(searchValue),\n        dataConverter = this.options.dataConverter;\n\n    function lookForParents(matches, index) {\n      var length = matches.length;\n\n      while (index < length) {\n        var node = matches[index];\n\n        if (node.internalFields.parentKey === that.options.rootValue) {\n          index++;\n          continue;\n        }\n\n        var parent = dataConverter.getParentNode(node);\n\n        if (!parent) {\n          errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\n          index++;\n          continue;\n        }\n\n        if (!parent.internalFields.expanded) {\n          that._setFieldState(parent, EXPANDED, true);\n        }\n\n        if (inArray(parent, matches) > -1) {\n          index++;\n          continue;\n        }\n\n        matches.splice(index, 0, parent);\n        lookForParents(matches, index);\n      }\n    }\n\n    lookForParents(matches, 0);\n\n    if (this.options.sort) {\n      matches = storeHelper.queryByOptions(query(matches), {\n        sort: this.options.sort\n      }).toArray();\n    }\n\n    dataConverter._indexByKey = {};\n    each(matches, function (index, node) {\n      node.internalFields.childrenKeys = [];\n      dataConverter._indexByKey[node.internalFields.key] = index;\n    });\n    dataConverter._dataStructure = matches;\n    dataConverter.setChildrenKeys();\n    return dataConverter._dataStructure;\n  }\n});\nmodule.exports = DataAdapter;","map":{"version":3,"sources":["C:/Users/abdel/PhpstormProjects/editeur_scenario_jeu/node_modules/devextreme/ui/hierarchical_collection/ui.data_adapter.js"],"names":["Class","require","commonUtils","iteratorUtils","each","typeUtils","extend","errors","getOperationBySearchMode","inArray","query","storeHelper","HierarchicalDataConverter","EXPANDED","SELECTED","DISABLED","DataAdapter","inherit","ctor","options","_defaultOptions","dataConverter","setDataAccessors","dataAccessors","_selectedNodesKeys","_expandedNodesKeys","_dataStructure","_createInternalDataStructure","getTreeNodes","setOption","name","value","_updateSelection","items","multipleSelection","recursiveSelection","recursiveExpansion","rootValue","searchValue","dataType","searchMode","onNodeChanged","noop","sort","_initialDataStructure","createPlainStructure","length","search","_updateExpansion","_setChildrenSelection","_setParentSelection","_updateNodesKeysArray","key","_updateOneBranch","_setParentExpansion","property","that","array","_getDataBySelectionMode","_","node","_isNodeVisible","internalFields","push","toggleSelection","getData","getFullData","item","visible","_getByKey","data","getByKey","childrenKeys","isSelected","selected","_toggleChildrenSelection","parent","getParentNode","parentKey","_iterateParents","newParentState","_calculateSelectedState","_setFieldState","expanded","getNodeByKey","_iterateChildren","recursive","callback","child","isFunction","itemsCount","selectedItemsCount","invisibleItemsCount","result","i","childNode","isChildInvisible","childState","state","field","publicNode","setters","_markChildren","keys","index","getIndexByKey","_removeNode","counter","splice","_addNode","_convertItemToNode","getters","concat","_updateFields","updateChildrenKeys","getSelectedNodesKeys","getExpandedNodesKeys","getNodeByItem","getNodesByItems","nodes","convertToPublicNodes","getRootNodes","getItemsCount","getVisibleItemsCount","getPublicNode","getChildrenNodes","filter","toArray","addItem","removeItem","selectRecursive","isSingleModeUnselect","_isSingleModeUnselect","selectionState","toggleNodeDisabledState","toggleSelectAll","isDefined","lastSelectedKey","dataStructure","selectionRequired","isAllSelected","toggleExpansion","isFiltered","_filterDataStructure","_createCriteria","selector","operation","searchFilter","Array","isArray","pop","filterValue","searchExpr","display","criteria","matches","lookForParents","log","queryByOptions","_indexByKey","setChildrenKeys","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/hierarchical_collection/ui.data_adapter.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar Class = require(\"../../core/class\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    iteratorUtils = require(\"../../core/utils/iterator\"),\r\n    each = require(\"../../core/utils/iterator\").each,\r\n    typeUtils = require(\"../../core/utils/type\"),\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    errors = require(\"../../ui/widget/ui.errors\"),\r\n    getOperationBySearchMode = require(\"../../ui/widget/ui.search_box_mixin\").getOperationBySearchMode,\r\n    inArray = require(\"../../core/utils/array\").inArray,\r\n    query = require(\"../../data/query\"),\r\n    storeHelper = require(\"../../data/store_helper\"),\r\n    HierarchicalDataConverter = require(\"./ui.data_converter\");\r\nvar EXPANDED = \"expanded\",\r\n    SELECTED = \"selected\",\r\n    DISABLED = \"disabled\";\r\nvar DataAdapter = Class.inherit({\r\n    ctor: function(options) {\r\n        this.options = {};\r\n        extend(this.options, this._defaultOptions(), options);\r\n        this.options.dataConverter.setDataAccessors(this.options.dataAccessors);\r\n        this._selectedNodesKeys = [];\r\n        this._expandedNodesKeys = [];\r\n        this._dataStructure = [];\r\n        this._createInternalDataStructure();\r\n        this.getTreeNodes()\r\n    },\r\n    setOption: function(name, value) {\r\n        this.options[name] = value;\r\n        if (\"recursiveSelection\" === name) {\r\n            this._updateSelection()\r\n        }\r\n    },\r\n    _defaultOptions: function() {\r\n        return {\r\n            dataAccessors: void 0,\r\n            items: [],\r\n            multipleSelection: true,\r\n            recursiveSelection: false,\r\n            recursiveExpansion: false,\r\n            rootValue: 0,\r\n            searchValue: \"\",\r\n            dataType: \"tree\",\r\n            searchMode: \"contains\",\r\n            dataConverter: new HierarchicalDataConverter,\r\n            onNodeChanged: commonUtils.noop,\r\n            sort: null\r\n        }\r\n    },\r\n    _createInternalDataStructure: function() {\r\n        this._initialDataStructure = this.options.dataConverter.createPlainStructure(this.options.items, this.options.rootValue, this.options.dataType);\r\n        this._dataStructure = this.options.searchValue.length ? this.search(this.options.searchValue) : this._initialDataStructure;\r\n        this.options.dataConverter._dataStructure = this._dataStructure;\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    _updateSelection: function() {\r\n        if (this.options.recursiveSelection) {\r\n            this._setChildrenSelection();\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _updateExpansion: function(key) {\r\n        if (this.options.recursiveExpansion) {\r\n            key ? this._updateOneBranch(key) : this._setParentExpansion()\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    _updateNodesKeysArray: function(property) {\r\n        var that = this,\r\n            array = [];\r\n        each(that._getDataBySelectionMode(), function(_, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            if (node.internalFields[property]) {\r\n                if (property === EXPANDED || that.options.multipleSelection) {\r\n                    array.push(node.internalFields.key)\r\n                } else {\r\n                    array.length && that.toggleSelection(array[0], false, true);\r\n                    array = [node.internalFields.key]\r\n                }\r\n            }\r\n        });\r\n        return array\r\n    },\r\n    _getDataBySelectionMode: function() {\r\n        return this.options.multipleSelection ? this.getData() : this.getFullData()\r\n    },\r\n    _isNodeVisible: function(node) {\r\n        return false !== node.internalFields.item.visible\r\n    },\r\n    _getByKey: function(data, key) {\r\n        return data === this._dataStructure ? this.options.dataConverter._getByKey(key) : this.options.dataConverter.getByKey(data, key)\r\n    },\r\n    _setChildrenSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, function(_, node) {\r\n            if (!node.internalFields.childrenKeys.length) {\r\n                return\r\n            }\r\n            var isSelected = node.internalFields.selected;\r\n            true === isSelected && that._toggleChildrenSelection(node, isSelected)\r\n        })\r\n    },\r\n    _setParentSelection: function() {\r\n        var that = this;\r\n        each(this._dataStructure, function(_, node) {\r\n            var parent = that.options.dataConverter.getParentNode(node);\r\n            if (parent && node.internalFields.parentKey !== that.options.rootValue) {\r\n                that._iterateParents(node, function(parent) {\r\n                    var newParentState = that._calculateSelectedState(parent);\r\n                    that._setFieldState(parent, SELECTED, newParentState)\r\n                })\r\n            }\r\n        })\r\n    },\r\n    _setParentExpansion: function() {\r\n        var that = this;\r\n        each(this._dataStructure, function(_, node) {\r\n            if (!node.internalFields.expanded) {\r\n                return\r\n            }\r\n            that._updateOneBranch(node.internalFields.key)\r\n        })\r\n    },\r\n    _updateOneBranch: function(key) {\r\n        var that = this,\r\n            node = this.getNodeByKey(key);\r\n        that._iterateParents(node, function(parent) {\r\n            that._setFieldState(parent, EXPANDED, true)\r\n        })\r\n    },\r\n    _iterateChildren: function(node, recursive, callback) {\r\n        var that = this;\r\n        each(node.internalFields.childrenKeys, function(_, key) {\r\n            var child = that.getNodeByKey(key);\r\n            typeUtils.isFunction(callback) && callback(child);\r\n            if (child.internalFields.childrenKeys.length && recursive) {\r\n                that._iterateChildren(child, recursive, callback)\r\n            }\r\n        })\r\n    },\r\n    _iterateParents: function(node, callback) {\r\n        if (node.internalFields.parentKey === this.options.rootValue) {\r\n            return\r\n        }\r\n        var parent = this.options.dataConverter.getParentNode(node);\r\n        if (parent) {\r\n            typeUtils.isFunction(callback) && callback(parent);\r\n            if (parent.internalFields.parentKey !== this.options.rootValue) {\r\n                this._iterateParents(parent, callback)\r\n            }\r\n        }\r\n    },\r\n    _calculateSelectedState: function(node) {\r\n        var itemsCount = node.internalFields.childrenKeys.length,\r\n            selectedItemsCount = 0,\r\n            invisibleItemsCount = 0,\r\n            result = false;\r\n        for (var i = 0; i <= itemsCount - 1; i++) {\r\n            var childNode = this.getNodeByKey(node.internalFields.childrenKeys[i]),\r\n                isChildInvisible = false === childNode.internalFields.item.visible,\r\n                childState = childNode.internalFields.selected;\r\n            if (isChildInvisible) {\r\n                invisibleItemsCount++;\r\n                continue\r\n            }\r\n            if (childState) {\r\n                selectedItemsCount++\r\n            } else {\r\n                if (void 0 === childState) {\r\n                    selectedItemsCount += .5\r\n                }\r\n            }\r\n        }\r\n        if (selectedItemsCount) {\r\n            result = selectedItemsCount === itemsCount - invisibleItemsCount ? true : void 0\r\n        }\r\n        return result\r\n    },\r\n    _toggleChildrenSelection: function(node, state) {\r\n        var that = this;\r\n        this._iterateChildren(node, true, function(child) {\r\n            if (that._isNodeVisible(child)) {\r\n                that._setFieldState(child, SELECTED, state)\r\n            }\r\n        })\r\n    },\r\n    _setFieldState: function(node, field, state) {\r\n        if (node.internalFields[field] === state) {\r\n            return\r\n        }\r\n        node.internalFields[field] = state;\r\n        if (node.internalFields.publicNode) {\r\n            node.internalFields.publicNode[field] = state\r\n        }\r\n        this.options.dataAccessors.setters[field](node.internalFields.item, state);\r\n        this.options.onNodeChanged(node)\r\n    },\r\n    _markChildren: function(keys) {\r\n        var that = this;\r\n        each(keys, function(_, key) {\r\n            var index = that.getIndexByKey(key),\r\n                node = that.getNodeByKey(key);\r\n            that._dataStructure[index] = 0;\r\n            node.internalFields.childrenKeys.length && that._markChildren(node.internalFields.childrenKeys)\r\n        })\r\n    },\r\n    _removeNode: function(key) {\r\n        var node = this.getNodeByKey(key);\r\n        this._dataStructure[this.getIndexByKey(key)] = 0;\r\n        this._markChildren(node.internalFields.childrenKeys);\r\n        var that = this,\r\n            counter = 0,\r\n            items = extend([], this._dataStructure);\r\n        each(items, function(index, item) {\r\n            if (!item) {\r\n                that._dataStructure.splice(index - counter, 1);\r\n                counter++\r\n            }\r\n        })\r\n    },\r\n    _addNode: function(item) {\r\n        var dataConverter = this.options.dataConverter,\r\n            node = dataConverter._convertItemToNode(item, this.options.dataAccessors.getters.parentKey(item));\r\n        this._dataStructure = this._dataStructure.concat(node);\r\n        this._initialDataStructure = this._initialDataStructure.concat(node);\r\n        dataConverter._dataStructure = dataConverter._dataStructure.concat(node)\r\n    },\r\n    _updateFields: function() {\r\n        this.options.dataConverter.updateChildrenKeys();\r\n        this._updateSelection();\r\n        this._updateExpansion()\r\n    },\r\n    getSelectedNodesKeys: function() {\r\n        return this._selectedNodesKeys\r\n    },\r\n    getExpandedNodesKeys: function() {\r\n        return this._expandedNodesKeys\r\n    },\r\n    getData: function() {\r\n        return this._dataStructure\r\n    },\r\n    getFullData: function() {\r\n        return this._initialDataStructure\r\n    },\r\n    getNodeByItem: function(item) {\r\n        var result = null;\r\n        each(this._dataStructure, function(_, node) {\r\n            if (node.internalFields.item === item) {\r\n                result = node;\r\n                return false\r\n            }\r\n        });\r\n        return result\r\n    },\r\n    getNodesByItems: function(items) {\r\n        var that = this,\r\n            nodes = [];\r\n        each(items, function(_, item) {\r\n            var node = that.getNodeByItem(item);\r\n            node && nodes.push(node)\r\n        });\r\n        return nodes\r\n    },\r\n    getNodeByKey: function(key, data) {\r\n        return this._getByKey(data || this._getDataBySelectionMode(), key)\r\n    },\r\n    getTreeNodes: function() {\r\n        return this.options.dataConverter.convertToPublicNodes(this.getRootNodes())\r\n    },\r\n    getItemsCount: function() {\r\n        return this.options.dataConverter.getItemsCount()\r\n    },\r\n    getVisibleItemsCount: function() {\r\n        return this.options.dataConverter.getVisibleItemsCount()\r\n    },\r\n    getPublicNode: function(node) {\r\n        return node.internalFields.publicNode\r\n    },\r\n    getRootNodes: function() {\r\n        return this.getChildrenNodes(this.options.rootValue)\r\n    },\r\n    getChildrenNodes: function(parentKey) {\r\n        return query(this._dataStructure).filter([\"internalFields.parentKey\", parentKey]).toArray()\r\n    },\r\n    getIndexByKey: function(key) {\r\n        return this.options.dataConverter.getIndexByKey(key)\r\n    },\r\n    addItem: function(item) {\r\n        this._addNode(item);\r\n        this._updateFields()\r\n    },\r\n    removeItem: function(key) {\r\n        this._removeNode(key);\r\n        this._updateFields()\r\n    },\r\n    toggleSelection: function(key, state, selectRecursive) {\r\n        var isSingleModeUnselect = this._isSingleModeUnselect(state),\r\n            node = this._getByKey(selectRecursive || isSingleModeUnselect ? this._initialDataStructure : this._dataStructure, key);\r\n        this._setFieldState(node, SELECTED, state);\r\n        if (this.options.recursiveSelection && !selectRecursive) {\r\n            state ? this._setChildrenSelection() : this._toggleChildrenSelection(node, state);\r\n            this._setParentSelection()\r\n        }\r\n        this._selectedNodesKeys = this._updateNodesKeysArray(SELECTED)\r\n    },\r\n    _isSingleModeUnselect: function(selectionState) {\r\n        return !this.options.multipleSelection && !selectionState\r\n    },\r\n    toggleNodeDisabledState: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, DISABLED, state)\r\n    },\r\n    toggleSelectAll: function(state) {\r\n        if (!typeUtils.isDefined(state)) {\r\n            return\r\n        }\r\n        var that = this,\r\n            lastSelectedKey = that._selectedNodesKeys[that._selectedNodesKeys.length - 1],\r\n            dataStructure = that._isSingleModeUnselect(state) ? this._initialDataStructure : this._dataStructure;\r\n        each(dataStructure, function(index, node) {\r\n            if (!that._isNodeVisible(node)) {\r\n                return\r\n            }\r\n            that._setFieldState(node, SELECTED, state)\r\n        });\r\n        that._selectedNodesKeys = that._updateNodesKeysArray(SELECTED);\r\n        if (!state && that.options.selectionRequired) {\r\n            that.toggleSelection(lastSelectedKey, true)\r\n        }\r\n    },\r\n    isAllSelected: function() {\r\n        if (this.getSelectedNodesKeys().length) {\r\n            return this.getSelectedNodesKeys().length === this.getVisibleItemsCount() ? true : void 0\r\n        } else {\r\n            return false\r\n        }\r\n    },\r\n    toggleExpansion: function(key, state) {\r\n        var node = this.getNodeByKey(key);\r\n        this._setFieldState(node, EXPANDED, state);\r\n        if (state) {\r\n            this._updateExpansion(key)\r\n        }\r\n        this._expandedNodesKeys = this._updateNodesKeysArray(EXPANDED)\r\n    },\r\n    isFiltered: function(item) {\r\n        return !this.options.searchValue.length || !!this._filterDataStructure(this.options.searchValue, [item]).length\r\n    },\r\n    _createCriteria: function(selector, value, operation) {\r\n        var searchFilter = [];\r\n        if (!Array.isArray(selector)) {\r\n            return [selector, operation, value]\r\n        }\r\n        iteratorUtils.each(selector, function(i, item) {\r\n            searchFilter.push([item, operation, value], \"or\")\r\n        });\r\n        searchFilter.pop();\r\n        return searchFilter\r\n    },\r\n    _filterDataStructure: function(filterValue, dataStructure) {\r\n        var selector = this.options.searchExpr || this.options.dataAccessors.getters.display,\r\n            operation = getOperationBySearchMode(this.options.searchMode),\r\n            criteria = this._createCriteria(selector, filterValue, operation);\r\n        dataStructure = dataStructure || this._initialDataStructure;\r\n        return query(dataStructure).filter(criteria).toArray()\r\n    },\r\n    search: function(searchValue) {\r\n        var that = this,\r\n            matches = this._filterDataStructure(searchValue),\r\n            dataConverter = this.options.dataConverter;\r\n\r\n        function lookForParents(matches, index) {\r\n            var length = matches.length;\r\n            while (index < length) {\r\n                var node = matches[index];\r\n                if (node.internalFields.parentKey === that.options.rootValue) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                var parent = dataConverter.getParentNode(node);\r\n                if (!parent) {\r\n                    errors.log(\"W1007\", node.internalFields.parentKey, node.internalFields.key);\r\n                    index++;\r\n                    continue\r\n                }\r\n                if (!parent.internalFields.expanded) {\r\n                    that._setFieldState(parent, EXPANDED, true)\r\n                }\r\n                if (inArray(parent, matches) > -1) {\r\n                    index++;\r\n                    continue\r\n                }\r\n                matches.splice(index, 0, parent);\r\n                lookForParents(matches, index)\r\n            }\r\n        }\r\n        lookForParents(matches, 0);\r\n        if (this.options.sort) {\r\n            matches = storeHelper.queryByOptions(query(matches), {\r\n                sort: this.options.sort\r\n            }).toArray()\r\n        }\r\n        dataConverter._indexByKey = {};\r\n        each(matches, function(index, node) {\r\n            node.internalFields.childrenKeys = [];\r\n            dataConverter._indexByKey[node.internalFields.key] = index\r\n        });\r\n        dataConverter._dataStructure = matches;\r\n        dataConverter.setChildrenKeys();\r\n        return dataConverter._dataStructure\r\n    }\r\n});\r\nmodule.exports = DataAdapter;\r\n"]},"metadata":{},"sourceType":"script"}