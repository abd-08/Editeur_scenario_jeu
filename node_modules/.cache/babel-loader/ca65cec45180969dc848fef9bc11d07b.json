{"ast":null,"code":"/**\r\n * DevExtreme (ui/tree_view/ui.tree_view.search.js)\r\n * Version: 18.2.8\r\n * Build date: Tue Apr 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar _component_registrator = require(\"../../core/component_registrator\");\n\nvar _component_registrator2 = _interopRequireDefault(_component_registrator);\n\nvar _ui = require(\"../widget/ui.search_box_mixin\");\n\nvar _ui2 = _interopRequireDefault(_ui);\n\nvar _extend = require(\"../../core/utils/extend\");\n\nvar _uiTree_view = require(\"./ui.tree_view.base\");\n\nvar _uiTree_view2 = _interopRequireDefault(_uiTree_view);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nvar NODE_CONTAINER_CLASS = \"dx-treeview-node-container\";\n\nvar TreeViewSearch = _uiTree_view2.default.inherit(_ui2.default).inherit({\n  _addWidgetPrefix: function _addWidgetPrefix(className) {\n    return \"dx-treeview-\" + className;\n  },\n  _optionChanged: function _optionChanged(args) {\n    switch (args.name) {\n      case \"searchValue\":\n        if (this._showCheckboxes() && this._isRecursiveSelection()) {\n          this._removeSelection();\n        }\n\n        this._initDataAdapter();\n\n        this._updateSearch();\n\n        this._repaintContainer();\n\n        break;\n\n      case \"searchExpr\":\n        this._initDataAdapter();\n\n        this.repaint();\n        break;\n\n      case \"searchMode\":\n        this.option(\"expandNodesRecursive\") ? this._updateDataAdapter() : this._initDataAdapter();\n        this.repaint();\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  _updateDataAdapter: function _updateDataAdapter() {\n    this._setOptionSilent(\"expandNodesRecursive\", false);\n\n    this._initDataAdapter();\n\n    this._setOptionSilent(\"expandNodesRecursive\", true);\n  },\n  _getDataAdapterOptions: function _getDataAdapterOptions() {\n    return (0, _extend.extend)(this.callBase(), {\n      searchValue: this.option(\"searchValue\"),\n      searchMode: this.option(\"searchMode\") || \"contains\",\n      searchExpr: this.option(\"searchExpr\")\n    });\n  },\n  _updateSearch: function _updateSearch() {\n    if (this._searchEditor) {\n      var editorOptions = this._getSearchEditorOptions();\n\n      this._searchEditor.option(editorOptions);\n    }\n  },\n  _repaintContainer: function _repaintContainer() {\n    var $container = this.$element().find(\".\" + NODE_CONTAINER_CLASS).first();\n\n    if ($container.length) {\n      $container.empty();\n\n      var rootNodes = this._dataAdapter.getRootNodes();\n\n      this._renderEmptyMessage(rootNodes);\n\n      this._renderItems($container, rootNodes);\n\n      this._fireContentReadyAction();\n    }\n  },\n  _focusTarget: function _focusTarget() {\n    if (this.option(\"searchEnabled\")) {\n      return this._scrollableContainer.$element();\n    }\n\n    return this.callBase();\n  },\n  _addWidgetClass: function _addWidgetClass() {\n    this.$element().addClass(this._widgetClass());\n  },\n  _clean: function _clean() {\n    this.callBase();\n\n    this._removeSearchBox();\n  }\n});\n\n(0, _component_registrator2.default)(\"dxTreeView\", TreeViewSearch);\nmodule.exports = TreeViewSearch;","map":null,"metadata":{},"sourceType":"script"}