{"ast":null,"code":"/*!\n * devextreme-react\n * Version: 18.2.8\n * Build date: Tue Apr 23 2019\n *\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\n *\n * This software may be modified and distributed under the terms\n * of the MIT license. See the LICENSE file in the root of the project for details.\n *\n * https://github.com/DevExpress/devextreme-react\n */\n\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) {\n      if (b.hasOwnProperty(p)) d[p] = b[p];\n    }\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar tree_view_1 = require(\"devextreme/ui/tree_view\");\n\nvar prop_types_1 = require(\"prop-types\");\n\nvar component_1 = require(\"./core/component\");\n\nvar nested_option_1 = require(\"./core/nested-option\");\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._WidgetClass = tree_view_1.default;\n    _this._defaults = {\n      defaultItems: \"items\"\n    };\n    _this._expectedChildren = {\n      item: {\n        optionName: \"items\",\n        isCollectionItem: true\n      },\n      searchEditorOptions: {\n        optionName: \"searchEditorOptions\",\n        isCollectionItem: false\n      }\n    };\n    _this._templateProps = [{\n      tmplOption: \"itemTemplate\",\n      render: \"itemRender\",\n      component: \"itemComponent\",\n      keyFn: \"itemKeyFn\"\n    }];\n    return _this;\n  }\n\n  Object.defineProperty(TreeView.prototype, \"instance\", {\n    get: function get() {\n      return this._instance;\n    },\n    enumerable: true,\n    configurable: true\n  });\n  return TreeView;\n}(component_1.Component);\n\nexports.TreeView = TreeView;\nTreeView.propTypes = {\n  accessKey: prop_types_1.PropTypes.string,\n  activeStateEnabled: prop_types_1.PropTypes.bool,\n  animationEnabled: prop_types_1.PropTypes.bool,\n  createChildren: prop_types_1.PropTypes.func,\n  dataSource: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.array, prop_types_1.PropTypes.object, prop_types_1.PropTypes.string]),\n  dataStructure: prop_types_1.PropTypes.oneOf([\"plain\", \"tree\"]),\n  disabled: prop_types_1.PropTypes.bool,\n  disabledExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  displayExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  elementAttr: prop_types_1.PropTypes.object,\n  expandAllEnabled: prop_types_1.PropTypes.bool,\n  expandedExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  expandEvent: prop_types_1.PropTypes.oneOf([\"dblclick\", \"click\"]),\n  expandNodesRecursive: prop_types_1.PropTypes.bool,\n  focusStateEnabled: prop_types_1.PropTypes.bool,\n  hasItemsExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  height: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.number, prop_types_1.PropTypes.string]),\n  hint: prop_types_1.PropTypes.string,\n  hoverStateEnabled: prop_types_1.PropTypes.bool,\n  itemHoldTimeout: prop_types_1.PropTypes.number,\n  items: prop_types_1.PropTypes.array,\n  itemsExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  keyExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  noDataText: prop_types_1.PropTypes.string,\n  onContentReady: prop_types_1.PropTypes.func,\n  onDisposing: prop_types_1.PropTypes.func,\n  onInitialized: prop_types_1.PropTypes.func,\n  onItemClick: prop_types_1.PropTypes.func,\n  onItemCollapsed: prop_types_1.PropTypes.func,\n  onItemContextMenu: prop_types_1.PropTypes.func,\n  onItemExpanded: prop_types_1.PropTypes.func,\n  onItemHold: prop_types_1.PropTypes.func,\n  onItemRendered: prop_types_1.PropTypes.func,\n  onItemSelectionChanged: prop_types_1.PropTypes.func,\n  onOptionChanged: prop_types_1.PropTypes.func,\n  onSelectAllValueChanged: prop_types_1.PropTypes.func,\n  onSelectionChanged: prop_types_1.PropTypes.func,\n  parentIdExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  rootValue: prop_types_1.PropTypes.object,\n  rtlEnabled: prop_types_1.PropTypes.bool,\n  scrollDirection: prop_types_1.PropTypes.oneOf([\"both\", \"horizontal\", \"vertical\"]),\n  searchEditorOptions: prop_types_1.PropTypes.object,\n  searchEnabled: prop_types_1.PropTypes.bool,\n  searchExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.array, prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  searchMode: prop_types_1.PropTypes.oneOf([\"contains\", \"startswith\", \"equals\"]),\n  searchTimeout: prop_types_1.PropTypes.number,\n  searchValue: prop_types_1.PropTypes.string,\n  selectAllText: prop_types_1.PropTypes.string,\n  selectByClick: prop_types_1.PropTypes.bool,\n  selectedExpr: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.string]),\n  selectionMode: prop_types_1.PropTypes.oneOf([\"multiple\", \"single\"]),\n  selectNodesRecursive: prop_types_1.PropTypes.bool,\n  showCheckBoxesMode: prop_types_1.PropTypes.oneOf([\"none\", \"normal\", \"selectAll\"]),\n  tabIndex: prop_types_1.PropTypes.number,\n  virtualModeEnabled: prop_types_1.PropTypes.bool,\n  visible: prop_types_1.PropTypes.bool,\n  width: prop_types_1.PropTypes.oneOfType([prop_types_1.PropTypes.func, prop_types_1.PropTypes.number, prop_types_1.PropTypes.string])\n}; // tslint:disable:max-classes-per-file\n// owners:\n// TreeView\n\nvar Item =\n/** @class */\nfunction (_super) {\n  __extends(Item, _super);\n\n  function Item() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Item.OptionName = \"items\";\n  Item.IsCollectionItem = true;\n  Item.TemplateProps = [{\n    tmplOption: \"template\",\n    render: \"render\",\n    component: \"component\",\n    keyFn: \"keyFn\"\n  }];\n  return Item;\n}(nested_option_1.default);\n\nexports.Item = Item; // owners:\n// TreeView\n\nvar SearchEditorOptions =\n/** @class */\nfunction (_super) {\n  __extends(SearchEditorOptions, _super);\n\n  function SearchEditorOptions() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SearchEditorOptions.OptionName = \"searchEditorOptions\";\n  SearchEditorOptions.DefaultsProps = {\n    defaultValue: \"value\"\n  };\n  return SearchEditorOptions;\n}(nested_option_1.default);\n\nexports.SearchEditorOptions = SearchEditorOptions;\nexports.default = TreeView;","map":null,"metadata":{},"sourceType":"script"}