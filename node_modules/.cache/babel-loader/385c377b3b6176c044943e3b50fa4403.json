{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdel\\\\PhpstormProjects\\\\update\\\\src\\\\creation\\\\CreateScenario.js\";\nimport React, { Component } from 'react';\nimport { activites, selection } from '../data/data';\nimport { update, onCloseModalScenario } from \"../App\";\nimport TextField from \"@material-ui/core/TextField/index\";\nimport Button from \"@material-ui/core/Button/index\";\nimport { compositions, sousCategorie } from \"../types/TypeComposition\";\nimport { update_navigation } from \"../navigation/Navigation\";\nimport { rechercheNav } from \"../fonctions/helper/NavigationHelper\";\nimport * as Constants from '../configuration_app/Constants';\nimport { getUniqueID } from \"../fonctions/helper/AppHelper\";\nimport { GRAPH_NODES_DEFAULT_COLOR } from \"../configuration_app/Constants\";\n/*permet de créer une tâche*/\n\nclass CreateScenario extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      description: '',\n      nom: ''\n    };\n\n    this.handleChange = id => event => {\n      this.setState({\n        [id]: event.target.value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      let id = getUniqueID();\n      selection.nodes.push({\n        id: id,\n        nom: this.state.nom,\n        color: GRAPH_NODES_DEFAULT_COLOR,\n        postconditions: []\n      }); //on recherche l'élement sélectionné dans nav\n\n      /*let search= rechercheNav(selection.id);\r\n      console.log(search);\r\n      let i = search.i;\r\n      let pere = search.tab;\r\n      pere[i].nodes=selection.nodes;//on met a jour les noeuds\r\n      */\n      ///on va ajouter les noeuds dans sa catégories\n\n      console.log(id);\n      let sous_cat = sousCategorie(selection.type); //le type de noeud qu'on va creer\n\n      switch (selection.type) {\n        case compositions.SCENARIO && compositions.ACTIVITE:\n          // on ajoute scenario ou quete\n          sous_cat.tab.push({\n            id: id,\n            description: this.state.description,\n            nom: this.state.nom,\n            type: sous_cat.type,\n            idPere: selection.id,\n            links: [],\n            nodes: [],\n            postconditions: []\n          });\n          break;\n\n        case compositions.QUETE:\n          //on ajoute une tache\n          sous_cat.tab.push({\n            id: id,\n            description: this.state.description,\n            nom: this.state.nom,\n            type: sous_cat.type,\n            idPere: selection.id,\n            postconditions: []\n          });\n          console.log(selection.nodes);\n          console.log('nom :' + this.state.nom);\n          break;\n\n        default:\n          console.log(selection.type);\n          console.log(\"erreur\");\n          break;\n      }\n\n      update(); //update_navigation();\n\n      onCloseModalScenario();\n      this.setState({\n        id: '',\n        description: '',\n        nom: ''\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-name\",\n      label: \"Titre du sc\\xE9nario\",\n      value: this.state.nom,\n      onChange: this.handleChange('nom'),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    })), React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(TextField, {\n      id: \"standard-name\",\n      label: \"description\",\n      multiline: true,\n      rows: \"4\",\n      value: this.state.description,\n      onChange: this.handleChange('description'),\n      margin: \"normal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    })), React.createElement(Button, {\n      variant: \"outlined\",\n      color: \"primary\",\n      onClick: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, \"Cr\\xE9er\")));\n  }\n\n}\n\nexport default CreateScenario;","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\creation\\CreateScenario.js"],"names":["React","Component","activites","selection","update","onCloseModalScenario","TextField","Button","compositions","sousCategorie","update_navigation","rechercheNav","Constants","getUniqueID","GRAPH_NODES_DEFAULT_COLOR","CreateScenario","state","description","nom","handleChange","id","event","setState","target","value","handleSubmit","e","preventDefault","nodes","push","color","postconditions","console","log","sous_cat","type","SCENARIO","ACTIVITE","tab","idPere","links","QUETE","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport {activites,selection} from '../data/data'\r\nimport {update , onCloseModalScenario} from \"../App\";\r\nimport TextField from \"@material-ui/core/TextField/index\";\r\nimport Button from \"@material-ui/core/Button/index\";\r\nimport {compositions,sousCategorie} from \"../types/TypeComposition\";\r\nimport {update_navigation} from \"../navigation/Navigation\";\r\nimport {rechercheNav} from \"../fonctions/helper/NavigationHelper\";\r\nimport * as Constants from '../configuration_app/Constants'\r\nimport {getUniqueID} from \"../fonctions/helper/AppHelper\";\r\nimport {GRAPH_NODES_DEFAULT_COLOR} from \"../configuration_app/Constants\";\r\n\r\n\r\n/*permet de créer une tâche*/\r\nclass CreateScenario extends Component {\r\n\r\n    /* tâche */\r\n    state = {\r\n        description:'',\r\n        nom:'',\r\n    };\r\n\r\n    handleChange = id => event => {\r\n        this.setState({ [id]: event.target.value });\r\n    };\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        let id = getUniqueID();\r\n\r\n        selection.nodes.push({id:id ,nom:this.state.nom,color:GRAPH_NODES_DEFAULT_COLOR\r\n            ,postconditions: [],});\r\n\r\n        //on recherche l'élement sélectionné dans nav\r\n        /*let search= rechercheNav(selection.id);\r\n        console.log(search);\r\n        let i = search.i;\r\n        let pere = search.tab;\r\n        pere[i].nodes=selection.nodes;//on met a jour les noeuds\r\n*/\r\n\r\n\r\n        ///on va ajouter les noeuds dans sa catégories\r\n\r\n        console.log(id);\r\n        let sous_cat = sousCategorie(selection.type); //le type de noeud qu'on va creer\r\n        switch (selection.type) {\r\n            case compositions.SCENARIO && compositions.ACTIVITE: // on ajoute scenario ou quete\r\n                sous_cat.tab.push(\r\n                    {\r\n                        id: id,\r\n                        description:this.state.description,\r\n                        nom:this.state.nom,\r\n                        type: sous_cat.type,\r\n                        idPere:  selection.id,\r\n                        links:[],\r\n                        nodes:[],\r\n                        postconditions: []\r\n                    });\r\n                    break;\r\n            case compositions.QUETE ://on ajoute une tache\r\n                sous_cat.tab.push(\r\n                    {\r\n                        id: id,\r\n                        description:this.state.description,\r\n                        nom:this.state.nom,\r\n                        type: sous_cat.type,\r\n                        idPere:  selection.id,\r\n                        postconditions: []\r\n                    });\r\n                console.log(selection.nodes);\r\n                console.log('nom :'+this.state.nom);\r\n                break;\r\n            default :\r\n                console.log(selection.type);\r\n                console.log(\"erreur\");\r\n                break;\r\n        }\r\n\r\n        update();\r\n        //update_navigation();\r\n        onCloseModalScenario();\r\n        this.setState({id:'',description:'',nom:''})\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"modal-content\">\r\n                    <form>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            label=\"Titre du scénario\"\r\n                            value={this.state.nom}\r\n                            onChange={this.handleChange('nom')}\r\n                            margin=\"normal\"\r\n                        />\r\n                    </form>\r\n                    <form>\r\n                        <TextField\r\n                            id=\"standard-name\"\r\n                            label=\"description\"\r\n                            multiline\r\n                            rows=\"4\"\r\n                            value={this.state.description}\r\n                            onChange={this.handleChange('description')}\r\n                            margin=\"normal\"\r\n                        />\r\n                    </form>\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={this.handleSubmit}>Créer</Button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CreateScenario;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}