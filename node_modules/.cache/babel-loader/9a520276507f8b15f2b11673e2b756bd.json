{"ast":null,"code":"/**\r\n * DevExtreme (events/pointer/mouse.js)\r\n * Version: 18.2.8\r\n * Build date: Tue Apr 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar extend = require(\"../../core/utils/extend\").extend,\n    BaseStrategy = require(\"./base\"),\n    Observer = require(\"./observer\");\n\nvar eventMap = {\n  dxpointerdown: \"mousedown\",\n  dxpointermove: \"mousemove\",\n  dxpointerup: \"mouseup\",\n  dxpointercancel: \"\",\n  dxpointerover: \"mouseover\",\n  dxpointerout: \"mouseout\",\n  dxpointerenter: \"mouseenter\",\n  dxpointerleave: \"mouseleave\"\n};\n\nvar normalizeMouseEvent = function normalizeMouseEvent(e) {\n  e.pointerId = 1;\n  return {\n    pointers: observer.pointers(),\n    pointerId: 1\n  };\n};\n\nvar observer;\nvar activated = false;\n\nvar activateStrategy = function activateStrategy() {\n  if (activated) {\n    return;\n  }\n\n  observer = new Observer(eventMap, function () {\n    return true;\n  });\n  activated = true;\n};\n\nvar MouseStrategy = BaseStrategy.inherit({\n  ctor: function ctor() {\n    this.callBase.apply(this, arguments);\n    activateStrategy();\n  },\n  _fireEvent: function _fireEvent(args) {\n    return this.callBase(extend(normalizeMouseEvent(args.originalEvent), args));\n  }\n});\nMouseStrategy.map = eventMap;\nMouseStrategy.normalize = normalizeMouseEvent;\nMouseStrategy.activate = activateStrategy;\n\nMouseStrategy.resetObserver = function () {\n  observer.reset();\n};\n\nmodule.exports = MouseStrategy;","map":null,"metadata":{},"sourceType":"script"}