{"ast":null,"code":"/**\r\n * DevExtreme (localization/message.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../core/renderer\"),\n    dependencyInjector = require(\"../core/utils/dependency_injector\"),\n    extend = require(\"../core/utils/extend\").extend,\n    each = require(\"../core/utils/iterator\").each,\n    stringFormat = require(\"../core/utils/string\").format,\n    humanize = require(\"../core/utils/inflector\").humanize,\n    coreLocalization = require(\"./core\");\n\nrequire(\"./core\");\n\nvar PARENT_LOCALE_SEPARATOR = \"-\";\nvar baseDictionary = extend(true, {}, require(\"./default_messages\"));\n\nvar parentLocales = require(\"./cldr-data/parentLocales\");\n\nvar getParentLocale = function (locale) {\n  var parentLocale = parentLocales[locale];\n\n  if (parentLocale) {\n    return \"root\" !== parentLocale && parentLocale;\n  }\n\n  return locale.substr(0, locale.lastIndexOf(PARENT_LOCALE_SEPARATOR));\n};\n\nvar getDataByLocale = function (localeData, locale) {\n  return localeData[locale] || {};\n};\n\nvar getValueByClosestLocale = function (localeData, locale, key) {\n  var isRootLocale,\n      value = getDataByLocale(localeData, locale)[key];\n\n  while (!value && !isRootLocale) {\n    locale = getParentLocale(locale);\n\n    if (locale) {\n      value = getDataByLocale(localeData, locale)[key];\n    } else {\n      isRootLocale = true;\n    }\n  }\n\n  return value;\n};\n\nvar newMessages = {};\nvar messageLocalization = dependencyInjector({\n  _dictionary: baseDictionary,\n  load: function (messages) {\n    extend(true, this._dictionary, messages);\n  },\n  _localizablePrefix: \"@\",\n  setup: function (localizablePrefix) {\n    this._localizablePrefix = localizablePrefix;\n  },\n  localizeString: function (text) {\n    var that = this,\n        regex = new RegExp(\"(^|[^a-zA-Z_0-9\" + that._localizablePrefix + \"-]+)(\" + that._localizablePrefix + \"{1,2})([a-zA-Z_0-9-]+)\", \"g\"),\n        escapeString = that._localizablePrefix + that._localizablePrefix;\n    return text.replace(regex, function (str, prefix, escape, localizationKey) {\n      var result,\n          defaultResult = that._localizablePrefix + localizationKey;\n\n      if (escape !== escapeString) {\n        result = that.format(localizationKey);\n      }\n\n      if (!result) {\n        newMessages[localizationKey] = humanize(localizationKey);\n      }\n\n      return prefix + (result || defaultResult);\n    });\n  },\n  _messageLoaded: function (key, locale) {\n    return void 0 !== getValueByClosestLocale(this._dictionary, locale || coreLocalization.locale(), key);\n  },\n  localizeNode: function (node) {\n    var that = this;\n    $(node).each(function (index, nodeItem) {\n      if (!nodeItem.nodeType) {\n        return;\n      }\n\n      if (3 === nodeItem.nodeType) {\n        nodeItem.nodeValue = that.localizeString(nodeItem.nodeValue);\n      } else {\n        if (!$(nodeItem).is(\"iframe\")) {\n          each(nodeItem.attributes || [], function (index, attr) {\n            if (\"string\" === typeof attr.value) {\n              var localizedValue = that.localizeString(attr.value);\n\n              if (attr.value !== localizedValue) {\n                attr.value = localizedValue;\n              }\n            }\n          });\n          $(nodeItem).contents().each(function (index, node) {\n            that.localizeNode(node);\n          });\n        }\n      }\n    });\n  },\n  getMessagesByLocales: function () {\n    return this._dictionary;\n  },\n  getDictionary: function (onlyNew) {\n    if (onlyNew) {\n      return newMessages;\n    }\n\n    return extend({}, newMessages, this.getMessagesByLocales()[coreLocalization.locale()]);\n  },\n  getFormatter: function (key) {\n    return this._getFormatterBase(key) || this._getFormatterBase(key, \"en\");\n  },\n  _getFormatterBase: function (key, locale) {\n    var message = getValueByClosestLocale(this._dictionary, locale || coreLocalization.locale(), key);\n\n    if (message) {\n      return function () {\n        var args = 1 === arguments.length && Array.isArray(arguments[0]) ? arguments[0].slice(0) : Array.prototype.slice.call(arguments, 0);\n        args.unshift(message);\n        return stringFormat.apply(this, args);\n      };\n    }\n  },\n  format: function (key) {\n    var formatter = this.getFormatter(key);\n    var values = Array.prototype.slice.call(arguments, 1);\n    return formatter && formatter.apply(this, values) || \"\";\n  }\n});\nmodule.exports = messageLocalization;","map":{"version":3,"sources":["C:/Users/abdel/PhpstormProjects/editeur_scenario_jeu/node_modules/devextreme/localization/message.js"],"names":["$","require","dependencyInjector","extend","each","stringFormat","format","humanize","coreLocalization","PARENT_LOCALE_SEPARATOR","baseDictionary","parentLocales","getParentLocale","locale","parentLocale","substr","lastIndexOf","getDataByLocale","localeData","getValueByClosestLocale","key","isRootLocale","value","newMessages","messageLocalization","_dictionary","load","messages","_localizablePrefix","setup","localizablePrefix","localizeString","text","that","regex","RegExp","escapeString","replace","str","prefix","escape","localizationKey","result","defaultResult","_messageLoaded","localizeNode","node","index","nodeItem","nodeType","nodeValue","is","attributes","attr","localizedValue","contents","getMessagesByLocales","getDictionary","onlyNew","getFormatter","_getFormatterBase","message","args","arguments","length","Array","isArray","slice","prototype","call","unshift","apply","formatter","values","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (localization/message.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../core/renderer\"),\r\n    dependencyInjector = require(\"../core/utils/dependency_injector\"),\r\n    extend = require(\"../core/utils/extend\").extend,\r\n    each = require(\"../core/utils/iterator\").each,\r\n    stringFormat = require(\"../core/utils/string\").format,\r\n    humanize = require(\"../core/utils/inflector\").humanize,\r\n    coreLocalization = require(\"./core\");\r\nrequire(\"./core\");\r\nvar PARENT_LOCALE_SEPARATOR = \"-\";\r\nvar baseDictionary = extend(true, {}, require(\"./default_messages\"));\r\nvar parentLocales = require(\"./cldr-data/parentLocales\");\r\nvar getParentLocale = function(locale) {\r\n    var parentLocale = parentLocales[locale];\r\n    if (parentLocale) {\r\n        return \"root\" !== parentLocale && parentLocale\r\n    }\r\n    return locale.substr(0, locale.lastIndexOf(PARENT_LOCALE_SEPARATOR))\r\n};\r\nvar getDataByLocale = function(localeData, locale) {\r\n    return localeData[locale] || {}\r\n};\r\nvar getValueByClosestLocale = function(localeData, locale, key) {\r\n    var isRootLocale, value = getDataByLocale(localeData, locale)[key];\r\n    while (!value && !isRootLocale) {\r\n        locale = getParentLocale(locale);\r\n        if (locale) {\r\n            value = getDataByLocale(localeData, locale)[key]\r\n        } else {\r\n            isRootLocale = true\r\n        }\r\n    }\r\n    return value\r\n};\r\nvar newMessages = {};\r\nvar messageLocalization = dependencyInjector({\r\n    _dictionary: baseDictionary,\r\n    load: function(messages) {\r\n        extend(true, this._dictionary, messages)\r\n    },\r\n    _localizablePrefix: \"@\",\r\n    setup: function(localizablePrefix) {\r\n        this._localizablePrefix = localizablePrefix\r\n    },\r\n    localizeString: function(text) {\r\n        var that = this,\r\n            regex = new RegExp(\"(^|[^a-zA-Z_0-9\" + that._localizablePrefix + \"-]+)(\" + that._localizablePrefix + \"{1,2})([a-zA-Z_0-9-]+)\", \"g\"),\r\n            escapeString = that._localizablePrefix + that._localizablePrefix;\r\n        return text.replace(regex, function(str, prefix, escape, localizationKey) {\r\n            var result, defaultResult = that._localizablePrefix + localizationKey;\r\n            if (escape !== escapeString) {\r\n                result = that.format(localizationKey)\r\n            }\r\n            if (!result) {\r\n                newMessages[localizationKey] = humanize(localizationKey)\r\n            }\r\n            return prefix + (result || defaultResult)\r\n        })\r\n    },\r\n    _messageLoaded: function(key, locale) {\r\n        return void 0 !== getValueByClosestLocale(this._dictionary, locale || coreLocalization.locale(), key)\r\n    },\r\n    localizeNode: function(node) {\r\n        var that = this;\r\n        $(node).each(function(index, nodeItem) {\r\n            if (!nodeItem.nodeType) {\r\n                return\r\n            }\r\n            if (3 === nodeItem.nodeType) {\r\n                nodeItem.nodeValue = that.localizeString(nodeItem.nodeValue)\r\n            } else {\r\n                if (!$(nodeItem).is(\"iframe\")) {\r\n                    each(nodeItem.attributes || [], function(index, attr) {\r\n                        if (\"string\" === typeof attr.value) {\r\n                            var localizedValue = that.localizeString(attr.value);\r\n                            if (attr.value !== localizedValue) {\r\n                                attr.value = localizedValue\r\n                            }\r\n                        }\r\n                    });\r\n                    $(nodeItem).contents().each(function(index, node) {\r\n                        that.localizeNode(node)\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    },\r\n    getMessagesByLocales: function() {\r\n        return this._dictionary\r\n    },\r\n    getDictionary: function(onlyNew) {\r\n        if (onlyNew) {\r\n            return newMessages\r\n        }\r\n        return extend({}, newMessages, this.getMessagesByLocales()[coreLocalization.locale()])\r\n    },\r\n    getFormatter: function(key) {\r\n        return this._getFormatterBase(key) || this._getFormatterBase(key, \"en\")\r\n    },\r\n    _getFormatterBase: function(key, locale) {\r\n        var message = getValueByClosestLocale(this._dictionary, locale || coreLocalization.locale(), key);\r\n        if (message) {\r\n            return function() {\r\n                var args = 1 === arguments.length && Array.isArray(arguments[0]) ? arguments[0].slice(0) : Array.prototype.slice.call(arguments, 0);\r\n                args.unshift(message);\r\n                return stringFormat.apply(this, args)\r\n            }\r\n        }\r\n    },\r\n    format: function(key) {\r\n        var formatter = this.getFormatter(key);\r\n        var values = Array.prototype.slice.call(arguments, 1);\r\n        return formatter && formatter.apply(this, values) || \"\"\r\n    }\r\n});\r\nmodule.exports = messageLocalization;\r\n"]},"metadata":{},"sourceType":"script"}