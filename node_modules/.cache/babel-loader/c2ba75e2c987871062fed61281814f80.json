{"ast":null,"code":"import { activites, scenarios, quetes, taches } from \"../../data/data\";\nimport { accesScenarioIndice, listeScenario } from \"./ScenarioHelper\";\nimport { accesQueteIndice, listeQuete } from \"./QueteHelper\";\nimport { accesTacheIndice } from \"./TacheHelper\";\nimport { accesActiviteIndice } from \"./ActiviteHelper\";\nimport { compositions, type_element } from \"../../types/TypeComposition\";\nexport function mise_a_jour_na() {\n  let activity = [];\n  let scenario = [];\n  let quest = [];\n  let S;\n  let Q = [];\n\n  for (let i = 0; i < activites.length; i++) {\n    // on parcours la liste des activites\n    S = listeScenario(activites[i].id); //on sélectionne les scénario dont le père est A */*\n\n    console.log(s);\n\n    for (let j = 0; j < S.length; j++) {\n      // on parcours les scenarios d'une activite A\n\n      /* Liste des quêtes d'un scénario donné */\n      Q = listeQuete(S[j].id);\n\n      for (let k = 0; k < Q.length; k++) {\n        //on parcours les quêtes du scenario i\n        quest.push({\n          id: Q[k].id,\n          text: Q[k].nom\n        });\n      }\n\n      scenario.push({\n        id: S[j].id,\n        expanded: true,\n        text: S[j].nom,\n        items: quest\n      });\n      quest = [];\n    }\n\n    activity.push({\n      id: activites[i].id,\n      text: activites[i].nom,\n      expanded: true,\n      items: scenario\n    });\n    scenario = [];\n  }\n\n  return activity;\n}\nexport function liste_entite(node) {\n  let noeudFils = node;\n  console.log(node);\n\n  while (noeudFils.type !== compositions.ACTIVITE) {\n    noeudFils = rechercheNav(noeudFils.idPere);\n    console.log(noeudFils.type);\n  }\n\n  return node.listeEntites;\n}\nexport function rechercheNav(id) {\n  let res = type_element(id);\n  let i;\n\n  switch (res) {\n    case compositions.QUETE:\n      i = accesQueteIndice(id);\n      return {\n        tab: quetes,\n        i: i\n      };\n\n    case compositions.TACHE:\n      i = accesTacheIndice(id);\n      return {\n        tab: taches,\n        i: i\n      };\n\n    case compositions.SCENARIO:\n      i = accesScenarioIndice(id);\n      return {\n        tab: scenarios,\n        i: i\n      };\n\n    case compositions.ACTIVITE:\n      i = accesActiviteIndice(id);\n      return {\n        tab: activites,\n        i: i\n      };\n\n    default:\n      return null;\n  }\n}","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\fonctions\\helper\\NavigationHelper.js"],"names":["activites","scenarios","quetes","taches","accesScenarioIndice","listeScenario","accesQueteIndice","listeQuete","accesTacheIndice","accesActiviteIndice","compositions","type_element","mise_a_jour_na","activity","scenario","quest","S","Q","i","length","id","console","log","s","j","k","push","text","nom","expanded","items","liste_entite","node","noeudFils","type","ACTIVITE","rechercheNav","idPere","listeEntites","res","QUETE","tab","TACHE","SCENARIO"],"mappings":"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","sourcesContent":["import {activites, scenarios , quetes , taches} from \"../../data/data\";\r\nimport {accesScenarioIndice, listeScenario} from \"./ScenarioHelper\";\r\nimport {accesQueteIndice, listeQuete} from \"./QueteHelper\";\r\nimport {accesTacheIndice} from \"./TacheHelper\";\r\nimport {accesActiviteIndice} from \"./ActiviteHelper\";\r\nimport {compositions,type_element} from \"../../types/TypeComposition\";\r\n\r\nexport function mise_a_jour_na(){\r\n    let activity=[];\r\n    let scenario =[];\r\n    let quest=[];\r\n    let S;\r\n    let Q=[ ];\r\n\r\n    for (let i=0 ; i<activites.length;i++) {// on parcours la liste des activites\r\n\r\n        S = listeScenario(activites[i].id);//on sélectionne les scénario dont le père est A */*\r\n        console.log(s);\r\n        for (let j = 0; j < S.length; j++) {// on parcours les scenarios d'une activite A\r\n\r\n            /* Liste des quêtes d'un scénario donné */\r\n            Q = listeQuete(S[j].id);\r\n            for (let k = 0; k < Q.length; k++) { //on parcours les quêtes du scenario i\r\n\r\n                quest.push({id: Q[k].id, text: Q[k].nom});\r\n            }\r\n\r\n            scenario.push({id: S[j].id, expanded: true, text: S[j].nom, items: quest});\r\n            quest = [];\r\n        }\r\n\r\n        activity.push({id: activites[i].id, text: activites[i].nom, expanded: true, items: scenario});\r\n        scenario=[];\r\n    }\r\n    return activity;\r\n}\r\n\r\nexport function liste_entite(node){\r\n    let noeudFils = node;\r\n    console.log(node);\r\n    while ( noeudFils.type!==compositions.ACTIVITE){\r\n        noeudFils = rechercheNav(noeudFils.idPere);\r\n        console.log(noeudFils.type);\r\n    }\r\n    return node.listeEntites;\r\n}\r\n\r\n\r\nexport function rechercheNav(id){\r\n    let res = type_element(id);\r\n    let i;\r\n    switch (res) {\r\n        case compositions.QUETE:\r\n            i=accesQueteIndice(id);\r\n            return {tab:quetes,i:i};\r\n\r\n        case compositions.TACHE:\r\n            i=accesTacheIndice(id);\r\n            return {tab:taches,i:i};\r\n\r\n        case compositions.SCENARIO:\r\n            i=accesScenarioIndice(id);\r\n            return {tab:scenarios,i:i};\r\n\r\n        case compositions.ACTIVITE:\r\n            i=accesActiviteIndice(id);\r\n            return {tab:activites,i:i};\r\n\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}