{"ast":null,"code":"/**\r\n * DevExtreme (ui/editor/editor.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar $ = require(\"../../core/renderer\"),\n    dataUtils = require(\"../../core/element_data\"),\n    Callbacks = require(\"../../core/utils/callbacks\"),\n    commonUtils = require(\"../../core/utils/common\"),\n    windowUtils = require(\"../../core/utils/window\"),\n    Guid = require(\"../../core/guid\"),\n    getDefaultAlignment = require(\"../../core/utils/position\").getDefaultAlignment,\n    extend = require(\"../../core/utils/extend\").extend,\n    Widget = require(\"../widget/ui.widget\"),\n    ValidationMixin = require(\"../validation/validation_mixin\"),\n    Overlay = require(\"../overlay\");\n\nvar READONLY_STATE_CLASS = \"dx-state-readonly\",\n    INVALID_CLASS = \"dx-invalid\",\n    INVALID_MESSAGE = \"dx-invalid-message\",\n    INVALID_MESSAGE_CONTENT = \"dx-invalid-message-content\",\n    INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\",\n    INVALID_MESSAGE_ALWAYS = \"dx-invalid-message-always\",\n    VALIDATION_TARGET = \"dx-validation-target\",\n    VALIDATION_MESSAGE_MIN_WIDTH = 100;\nvar Editor = Widget.inherit({\n  ctor: function () {\n    this.showValidationMessageTimeout = null;\n    this.callBase.apply(this, arguments);\n  },\n  _init: function () {\n    this.callBase();\n    this.validationRequest = Callbacks();\n\n    this._initInnerOptionCache(\"validationTooltipOptions\");\n\n    var $element = this.$element();\n\n    if ($element) {\n      dataUtils.data($element[0], VALIDATION_TARGET, this);\n    }\n  },\n  _getDefaultOptions: function () {\n    return extend(this.callBase(), {\n      value: null,\n      name: \"\",\n      onValueChanged: null,\n      readOnly: false,\n      isValid: true,\n      validationError: null,\n      validationMessageMode: \"auto\",\n      validationBoundary: void 0,\n      validationMessageOffset: {\n        h: 0,\n        v: 0\n      },\n      validationTooltipOptions: {}\n    });\n  },\n  _attachKeyboardEvents: function () {\n    if (this.option(\"readOnly\")) {\n      return;\n    }\n\n    this.callBase();\n\n    if (this._keyboardProcessor) {\n      this._attachChildKeyboardEvents();\n    }\n  },\n  _attachChildKeyboardEvents: commonUtils.noop,\n  _setOptionsByReference: function () {\n    this.callBase();\n    extend(this._optionsByReference, {\n      validationError: true\n    });\n  },\n  _createValueChangeAction: function () {\n    this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\n      excludeValidators: [\"disabled\", \"readOnly\"]\n    });\n  },\n  _suppressValueChangeAction: function () {\n    this._valueChangeActionSuppressed = true;\n  },\n  _resumeValueChangeAction: function () {\n    this._valueChangeActionSuppressed = false;\n  },\n  _initMarkup: function () {\n    this._toggleReadOnlyState();\n\n    this._setSubmitElementName(this.option(\"name\"));\n\n    this.callBase();\n\n    this._renderValidationState();\n  },\n  _raiseValueChangeAction: function (value, previousValue) {\n    if (!this._valueChangeAction) {\n      this._createValueChangeAction();\n    }\n\n    this._valueChangeAction(this._valueChangeArgs(value, previousValue));\n  },\n  _valueChangeArgs: function (value, previousValue) {\n    return {\n      value: value,\n      previousValue: previousValue,\n      event: this._valueChangeEventInstance\n    };\n  },\n  _saveValueChangeEvent: function (e) {\n    this._valueChangeEventInstance = e;\n  },\n  _focusInHandler: function (e) {\n    var _this = this;\n\n    var isValidationMessageShownOnFocus = \"auto\" === this.option(\"validationMessageMode\");\n\n    if (this._canValueBeChangedByClick() && isValidationMessageShownOnFocus) {\n      this._$validationMessage && this._$validationMessage.removeClass(INVALID_MESSAGE_AUTO);\n      clearTimeout(this.showValidationMessageTimeout);\n      this.showValidationMessageTimeout = setTimeout(function () {\n        return _this._$validationMessage && _this._$validationMessage.addClass(INVALID_MESSAGE_AUTO);\n      }, 150);\n    }\n\n    return this.callBase(e);\n  },\n  _canValueBeChangedByClick: function () {\n    return false;\n  },\n  _renderValidationState: function () {\n    var isValid = this.option(\"isValid\"),\n        validationError = this.option(\"validationError\"),\n        validationMessageMode = this.option(\"validationMessageMode\"),\n        $element = this.$element();\n    $element.toggleClass(INVALID_CLASS, !isValid);\n    this.setAria(\"invalid\", !isValid || void 0);\n\n    if (!windowUtils.hasWindow()) {\n      return;\n    }\n\n    if (this._$validationMessage) {\n      this._$validationMessage.remove();\n\n      this.setAria(\"describedby\", null);\n      this._$validationMessage = null;\n    }\n\n    if (!isValid && validationError && validationError.message) {\n      this._$validationMessage = $(\"<div>\").addClass(INVALID_MESSAGE).html(validationError.message).appendTo($element);\n\n      var validationTarget = this._getValidationMessageTarget();\n\n      this._validationMessage = this._createComponent(this._$validationMessage, Overlay, extend({\n        integrationOptions: {},\n        templatesRenderAsynchronously: false,\n        target: validationTarget,\n        shading: false,\n        width: \"auto\",\n        height: \"auto\",\n        container: $element,\n        position: this._getValidationMessagePosition(\"below\"),\n        closeOnOutsideClick: false,\n        closeOnTargetScroll: false,\n        animation: null,\n        visible: true,\n        propagateOutsideClick: true,\n        _checkParentVisibility: false\n      }, this._getInnerOptionsCache(\"validationTooltipOptions\")));\n\n      this._$validationMessage.toggleClass(INVALID_MESSAGE_AUTO, \"auto\" === validationMessageMode).toggleClass(INVALID_MESSAGE_ALWAYS, \"always\" === validationMessageMode);\n\n      var messageId = \"dx-\" + new Guid();\n\n      this._validationMessage.$content().addClass(INVALID_MESSAGE_CONTENT).attr(\"id\", messageId);\n\n      this.setAria(\"describedby\", messageId);\n\n      this._setValidationMessageMaxWidth();\n\n      this._bindInnerWidgetOptions(this._validationMessage, \"validationTooltipOptions\");\n    }\n  },\n  _setValidationMessageMaxWidth: function () {\n    if (!this._validationMessage) {\n      return;\n    }\n\n    if (0 === this._getValidationMessageTarget().outerWidth()) {\n      this._validationMessage.option(\"maxWidth\", \"100%\");\n\n      return;\n    }\n\n    var validationMessageMaxWidth = Math.max(VALIDATION_MESSAGE_MIN_WIDTH, this._getValidationMessageTarget().outerWidth());\n\n    this._validationMessage.option(\"maxWidth\", validationMessageMaxWidth);\n  },\n  _getValidationMessageTarget: function () {\n    return this.$element();\n  },\n  _getValidationMessagePosition: function (positionRequest) {\n    var rtlEnabled = this.option(\"rtlEnabled\"),\n        messagePositionSide = getDefaultAlignment(rtlEnabled),\n        messageOriginalOffset = this.option(\"validationMessageOffset\"),\n        messageOffset = {\n      h: messageOriginalOffset.h,\n      v: messageOriginalOffset.v\n    },\n        verticalPositions = \"below\" === positionRequest ? [\" top\", \" bottom\"] : [\" bottom\", \" top\"];\n\n    if (rtlEnabled) {\n      messageOffset.h = -messageOffset.h;\n    }\n\n    if (\"below\" !== positionRequest) {\n      messageOffset.v = -messageOffset.v;\n    }\n\n    return {\n      offset: messageOffset,\n      boundary: this.option(\"validationBoundary\"),\n      my: messagePositionSide + verticalPositions[0],\n      at: messagePositionSide + verticalPositions[1],\n      collision: \"none flip\"\n    };\n  },\n  _toggleReadOnlyState: function () {\n    this.$element().toggleClass(READONLY_STATE_CLASS, !!this.option(\"readOnly\"));\n    this.setAria(\"readonly\", this.option(\"readOnly\") || void 0);\n  },\n  _dispose: function () {\n    var element = this.$element()[0];\n    dataUtils.data(element, VALIDATION_TARGET, null);\n    clearTimeout(this.showValidationMessageTimeout);\n    this.callBase();\n  },\n  _setSubmitElementName: function (name) {\n    var $submitElement = this._getSubmitElement();\n\n    if (!$submitElement) {\n      return;\n    }\n\n    if (name.length > 0) {\n      $submitElement.attr(\"name\", name);\n    } else {\n      $submitElement.removeAttr(\"name\");\n    }\n  },\n  _getSubmitElement: function () {\n    return null;\n  },\n  _getOptionsFromContainer: function (args) {\n    var options = {};\n\n    if (args.name === args.fullName) {\n      options = args.value;\n    } else {\n      var option = args.fullName.split(\".\").pop();\n      options[option] = args.value;\n    }\n\n    return options;\n  },\n  _setValidationTooltipOptions: function (optionName, value) {\n    this._setWidgetOption(\"_validationMessage\", arguments);\n  },\n  _optionChanged: function (args) {\n    switch (args.name) {\n      case \"onValueChanged\":\n        this._createValueChangeAction();\n\n        break;\n\n      case \"isValid\":\n      case \"validationError\":\n      case \"validationBoundary\":\n      case \"validationMessageMode\":\n        this._renderValidationState();\n\n        break;\n\n      case \"validationTooltipOptions\":\n        this._setValidationTooltipOptions(this._getOptionsFromContainer(args));\n\n        this._cacheInnerOptions(\"validationTooltipOptions\", args.value);\n\n        break;\n\n      case \"readOnly\":\n        this._toggleReadOnlyState();\n\n        this._refreshFocusState();\n\n        break;\n\n      case \"value\":\n        if (!this._valueChangeActionSuppressed) {\n          this._raiseValueChangeAction(args.value, args.previousValue);\n\n          this._saveValueChangeEvent(void 0);\n        }\n\n        if (args.value != args.previousValue) {\n          this.validationRequest.fire({\n            value: args.value,\n            editor: this\n          });\n        }\n\n        break;\n\n      case \"width\":\n        this.callBase(args);\n\n        this._setValidationMessageMaxWidth();\n\n        break;\n\n      case \"name\":\n        this._setSubmitElementName(args.value);\n\n        break;\n\n      default:\n        this.callBase(args);\n    }\n  },\n  reset: function () {\n    var defaultOptions = this._getDefaultOptions();\n\n    this.option(\"value\", defaultOptions.value);\n  }\n}).include(ValidationMixin);\nmodule.exports = Editor;","map":{"version":3,"sources":["C:/Users/abdel/PhpstormProjects/editeur_scenario_jeu/node_modules/devextreme/ui/editor/editor.js"],"names":["$","require","dataUtils","Callbacks","commonUtils","windowUtils","Guid","getDefaultAlignment","extend","Widget","ValidationMixin","Overlay","READONLY_STATE_CLASS","INVALID_CLASS","INVALID_MESSAGE","INVALID_MESSAGE_CONTENT","INVALID_MESSAGE_AUTO","INVALID_MESSAGE_ALWAYS","VALIDATION_TARGET","VALIDATION_MESSAGE_MIN_WIDTH","Editor","inherit","ctor","showValidationMessageTimeout","callBase","apply","arguments","_init","validationRequest","_initInnerOptionCache","$element","data","_getDefaultOptions","value","name","onValueChanged","readOnly","isValid","validationError","validationMessageMode","validationBoundary","validationMessageOffset","h","v","validationTooltipOptions","_attachKeyboardEvents","option","_keyboardProcessor","_attachChildKeyboardEvents","noop","_setOptionsByReference","_optionsByReference","_createValueChangeAction","_valueChangeAction","_createActionByOption","excludeValidators","_suppressValueChangeAction","_valueChangeActionSuppressed","_resumeValueChangeAction","_initMarkup","_toggleReadOnlyState","_setSubmitElementName","_renderValidationState","_raiseValueChangeAction","previousValue","_valueChangeArgs","event","_valueChangeEventInstance","_saveValueChangeEvent","e","_focusInHandler","_this","isValidationMessageShownOnFocus","_canValueBeChangedByClick","_$validationMessage","removeClass","clearTimeout","setTimeout","addClass","toggleClass","setAria","hasWindow","remove","message","html","appendTo","validationTarget","_getValidationMessageTarget","_validationMessage","_createComponent","integrationOptions","templatesRenderAsynchronously","target","shading","width","height","container","position","_getValidationMessagePosition","closeOnOutsideClick","closeOnTargetScroll","animation","visible","propagateOutsideClick","_checkParentVisibility","_getInnerOptionsCache","messageId","$content","attr","_setValidationMessageMaxWidth","_bindInnerWidgetOptions","outerWidth","validationMessageMaxWidth","Math","max","positionRequest","rtlEnabled","messagePositionSide","messageOriginalOffset","messageOffset","verticalPositions","offset","boundary","my","at","collision","_dispose","element","$submitElement","_getSubmitElement","length","removeAttr","_getOptionsFromContainer","args","options","fullName","split","pop","_setValidationTooltipOptions","optionName","_setWidgetOption","_optionChanged","_cacheInnerOptions","_refreshFocusState","fire","editor","reset","defaultOptions","include","module","exports"],"mappings":"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","sourcesContent":["/**\r\n * DevExtreme (ui/editor/editor.js)\r\n * Version: 18.2.13\r\n * Build date: Wed May 27 2020\r\n *\r\n * Copyright (c) 2012 - 2020 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\r\n\"use strict\";\r\nvar $ = require(\"../../core/renderer\"),\r\n    dataUtils = require(\"../../core/element_data\"),\r\n    Callbacks = require(\"../../core/utils/callbacks\"),\r\n    commonUtils = require(\"../../core/utils/common\"),\r\n    windowUtils = require(\"../../core/utils/window\"),\r\n    Guid = require(\"../../core/guid\"),\r\n    getDefaultAlignment = require(\"../../core/utils/position\").getDefaultAlignment,\r\n    extend = require(\"../../core/utils/extend\").extend,\r\n    Widget = require(\"../widget/ui.widget\"),\r\n    ValidationMixin = require(\"../validation/validation_mixin\"),\r\n    Overlay = require(\"../overlay\");\r\nvar READONLY_STATE_CLASS = \"dx-state-readonly\",\r\n    INVALID_CLASS = \"dx-invalid\",\r\n    INVALID_MESSAGE = \"dx-invalid-message\",\r\n    INVALID_MESSAGE_CONTENT = \"dx-invalid-message-content\",\r\n    INVALID_MESSAGE_AUTO = \"dx-invalid-message-auto\",\r\n    INVALID_MESSAGE_ALWAYS = \"dx-invalid-message-always\",\r\n    VALIDATION_TARGET = \"dx-validation-target\",\r\n    VALIDATION_MESSAGE_MIN_WIDTH = 100;\r\nvar Editor = Widget.inherit({\r\n    ctor: function() {\r\n        this.showValidationMessageTimeout = null;\r\n        this.callBase.apply(this, arguments)\r\n    },\r\n    _init: function() {\r\n        this.callBase();\r\n        this.validationRequest = Callbacks();\r\n        this._initInnerOptionCache(\"validationTooltipOptions\");\r\n        var $element = this.$element();\r\n        if ($element) {\r\n            dataUtils.data($element[0], VALIDATION_TARGET, this)\r\n        }\r\n    },\r\n    _getDefaultOptions: function() {\r\n        return extend(this.callBase(), {\r\n            value: null,\r\n            name: \"\",\r\n            onValueChanged: null,\r\n            readOnly: false,\r\n            isValid: true,\r\n            validationError: null,\r\n            validationMessageMode: \"auto\",\r\n            validationBoundary: void 0,\r\n            validationMessageOffset: {\r\n                h: 0,\r\n                v: 0\r\n            },\r\n            validationTooltipOptions: {}\r\n        })\r\n    },\r\n    _attachKeyboardEvents: function() {\r\n        if (this.option(\"readOnly\")) {\r\n            return\r\n        }\r\n        this.callBase();\r\n        if (this._keyboardProcessor) {\r\n            this._attachChildKeyboardEvents()\r\n        }\r\n    },\r\n    _attachChildKeyboardEvents: commonUtils.noop,\r\n    _setOptionsByReference: function() {\r\n        this.callBase();\r\n        extend(this._optionsByReference, {\r\n            validationError: true\r\n        })\r\n    },\r\n    _createValueChangeAction: function() {\r\n        this._valueChangeAction = this._createActionByOption(\"onValueChanged\", {\r\n            excludeValidators: [\"disabled\", \"readOnly\"]\r\n        })\r\n    },\r\n    _suppressValueChangeAction: function() {\r\n        this._valueChangeActionSuppressed = true\r\n    },\r\n    _resumeValueChangeAction: function() {\r\n        this._valueChangeActionSuppressed = false\r\n    },\r\n    _initMarkup: function() {\r\n        this._toggleReadOnlyState();\r\n        this._setSubmitElementName(this.option(\"name\"));\r\n        this.callBase();\r\n        this._renderValidationState()\r\n    },\r\n    _raiseValueChangeAction: function(value, previousValue) {\r\n        if (!this._valueChangeAction) {\r\n            this._createValueChangeAction()\r\n        }\r\n        this._valueChangeAction(this._valueChangeArgs(value, previousValue))\r\n    },\r\n    _valueChangeArgs: function(value, previousValue) {\r\n        return {\r\n            value: value,\r\n            previousValue: previousValue,\r\n            event: this._valueChangeEventInstance\r\n        }\r\n    },\r\n    _saveValueChangeEvent: function(e) {\r\n        this._valueChangeEventInstance = e\r\n    },\r\n    _focusInHandler: function(e) {\r\n        var _this = this;\r\n        var isValidationMessageShownOnFocus = \"auto\" === this.option(\"validationMessageMode\");\r\n        if (this._canValueBeChangedByClick() && isValidationMessageShownOnFocus) {\r\n            this._$validationMessage && this._$validationMessage.removeClass(INVALID_MESSAGE_AUTO);\r\n            clearTimeout(this.showValidationMessageTimeout);\r\n            this.showValidationMessageTimeout = setTimeout(function() {\r\n                return _this._$validationMessage && _this._$validationMessage.addClass(INVALID_MESSAGE_AUTO)\r\n            }, 150)\r\n        }\r\n        return this.callBase(e)\r\n    },\r\n    _canValueBeChangedByClick: function() {\r\n        return false\r\n    },\r\n    _renderValidationState: function() {\r\n        var isValid = this.option(\"isValid\"),\r\n            validationError = this.option(\"validationError\"),\r\n            validationMessageMode = this.option(\"validationMessageMode\"),\r\n            $element = this.$element();\r\n        $element.toggleClass(INVALID_CLASS, !isValid);\r\n        this.setAria(\"invalid\", !isValid || void 0);\r\n        if (!windowUtils.hasWindow()) {\r\n            return\r\n        }\r\n        if (this._$validationMessage) {\r\n            this._$validationMessage.remove();\r\n            this.setAria(\"describedby\", null);\r\n            this._$validationMessage = null\r\n        }\r\n        if (!isValid && validationError && validationError.message) {\r\n            this._$validationMessage = $(\"<div>\").addClass(INVALID_MESSAGE).html(validationError.message).appendTo($element);\r\n            var validationTarget = this._getValidationMessageTarget();\r\n            this._validationMessage = this._createComponent(this._$validationMessage, Overlay, extend({\r\n                integrationOptions: {},\r\n                templatesRenderAsynchronously: false,\r\n                target: validationTarget,\r\n                shading: false,\r\n                width: \"auto\",\r\n                height: \"auto\",\r\n                container: $element,\r\n                position: this._getValidationMessagePosition(\"below\"),\r\n                closeOnOutsideClick: false,\r\n                closeOnTargetScroll: false,\r\n                animation: null,\r\n                visible: true,\r\n                propagateOutsideClick: true,\r\n                _checkParentVisibility: false\r\n            }, this._getInnerOptionsCache(\"validationTooltipOptions\")));\r\n            this._$validationMessage.toggleClass(INVALID_MESSAGE_AUTO, \"auto\" === validationMessageMode).toggleClass(INVALID_MESSAGE_ALWAYS, \"always\" === validationMessageMode);\r\n            var messageId = \"dx-\" + new Guid;\r\n            this._validationMessage.$content().addClass(INVALID_MESSAGE_CONTENT).attr(\"id\", messageId);\r\n            this.setAria(\"describedby\", messageId);\r\n            this._setValidationMessageMaxWidth();\r\n            this._bindInnerWidgetOptions(this._validationMessage, \"validationTooltipOptions\")\r\n        }\r\n    },\r\n    _setValidationMessageMaxWidth: function() {\r\n        if (!this._validationMessage) {\r\n            return\r\n        }\r\n        if (0 === this._getValidationMessageTarget().outerWidth()) {\r\n            this._validationMessage.option(\"maxWidth\", \"100%\");\r\n            return\r\n        }\r\n        var validationMessageMaxWidth = Math.max(VALIDATION_MESSAGE_MIN_WIDTH, this._getValidationMessageTarget().outerWidth());\r\n        this._validationMessage.option(\"maxWidth\", validationMessageMaxWidth)\r\n    },\r\n    _getValidationMessageTarget: function() {\r\n        return this.$element()\r\n    },\r\n    _getValidationMessagePosition: function(positionRequest) {\r\n        var rtlEnabled = this.option(\"rtlEnabled\"),\r\n            messagePositionSide = getDefaultAlignment(rtlEnabled),\r\n            messageOriginalOffset = this.option(\"validationMessageOffset\"),\r\n            messageOffset = {\r\n                h: messageOriginalOffset.h,\r\n                v: messageOriginalOffset.v\r\n            },\r\n            verticalPositions = \"below\" === positionRequest ? [\" top\", \" bottom\"] : [\" bottom\", \" top\"];\r\n        if (rtlEnabled) {\r\n            messageOffset.h = -messageOffset.h\r\n        }\r\n        if (\"below\" !== positionRequest) {\r\n            messageOffset.v = -messageOffset.v\r\n        }\r\n        return {\r\n            offset: messageOffset,\r\n            boundary: this.option(\"validationBoundary\"),\r\n            my: messagePositionSide + verticalPositions[0],\r\n            at: messagePositionSide + verticalPositions[1],\r\n            collision: \"none flip\"\r\n        }\r\n    },\r\n    _toggleReadOnlyState: function() {\r\n        this.$element().toggleClass(READONLY_STATE_CLASS, !!this.option(\"readOnly\"));\r\n        this.setAria(\"readonly\", this.option(\"readOnly\") || void 0)\r\n    },\r\n    _dispose: function() {\r\n        var element = this.$element()[0];\r\n        dataUtils.data(element, VALIDATION_TARGET, null);\r\n        clearTimeout(this.showValidationMessageTimeout);\r\n        this.callBase()\r\n    },\r\n    _setSubmitElementName: function(name) {\r\n        var $submitElement = this._getSubmitElement();\r\n        if (!$submitElement) {\r\n            return\r\n        }\r\n        if (name.length > 0) {\r\n            $submitElement.attr(\"name\", name)\r\n        } else {\r\n            $submitElement.removeAttr(\"name\")\r\n        }\r\n    },\r\n    _getSubmitElement: function() {\r\n        return null\r\n    },\r\n    _getOptionsFromContainer: function(args) {\r\n        var options = {};\r\n        if (args.name === args.fullName) {\r\n            options = args.value\r\n        } else {\r\n            var option = args.fullName.split(\".\").pop();\r\n            options[option] = args.value\r\n        }\r\n        return options\r\n    },\r\n    _setValidationTooltipOptions: function(optionName, value) {\r\n        this._setWidgetOption(\"_validationMessage\", arguments)\r\n    },\r\n    _optionChanged: function(args) {\r\n        switch (args.name) {\r\n            case \"onValueChanged\":\r\n                this._createValueChangeAction();\r\n                break;\r\n            case \"isValid\":\r\n            case \"validationError\":\r\n            case \"validationBoundary\":\r\n            case \"validationMessageMode\":\r\n                this._renderValidationState();\r\n                break;\r\n            case \"validationTooltipOptions\":\r\n                this._setValidationTooltipOptions(this._getOptionsFromContainer(args));\r\n                this._cacheInnerOptions(\"validationTooltipOptions\", args.value);\r\n                break;\r\n            case \"readOnly\":\r\n                this._toggleReadOnlyState();\r\n                this._refreshFocusState();\r\n                break;\r\n            case \"value\":\r\n                if (!this._valueChangeActionSuppressed) {\r\n                    this._raiseValueChangeAction(args.value, args.previousValue);\r\n                    this._saveValueChangeEvent(void 0)\r\n                }\r\n                if (args.value != args.previousValue) {\r\n                    this.validationRequest.fire({\r\n                        value: args.value,\r\n                        editor: this\r\n                    })\r\n                }\r\n                break;\r\n            case \"width\":\r\n                this.callBase(args);\r\n                this._setValidationMessageMaxWidth();\r\n                break;\r\n            case \"name\":\r\n                this._setSubmitElementName(args.value);\r\n                break;\r\n            default:\r\n                this.callBase(args)\r\n        }\r\n    },\r\n    reset: function() {\r\n        var defaultOptions = this._getDefaultOptions();\r\n        this.option(\"value\", defaultOptions.value)\r\n    }\r\n}).include(ValidationMixin);\r\nmodule.exports = Editor;\r\n"]},"metadata":{},"sourceType":"script"}