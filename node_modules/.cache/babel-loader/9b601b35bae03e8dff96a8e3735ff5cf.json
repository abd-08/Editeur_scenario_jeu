{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdel\\\\PhpstormProjects\\\\update\\\\src\\\\Upload.js\";\nimport React, { Component } from 'react';\nimport { activites, scenarios, taches, quetes } from \"./data/data\";\nimport { ajouterScenario } from \"./fonctions/helper/ScenarioHelper\";\nimport { ajouterQuete } from \"./fonctions/helper/QueteHelper\";\nimport { ajouterTache } from \"./fonctions/helper/TacheHelper\";\n\nfunction startRead() {\n  // obtain input element through DOM\n  var file = document.getElementById('file').files[0];\n\n  if (file) {\n    getAsText(file);\n  }\n}\n\nfunction getAsText(readFile) {\n  var reader = new FileReader(); // Read file into memory as UTF-16\n\n  reader.readAsText(readFile, \"UTF-16\"); // Handle progress, success, and errors\n\n  reader.onprogress = updateProgress;\n  reader.onload = loaded;\n  reader.onerror = errorHandler;\n}\n\nfunction updateProgress(evt) {\n  if (evt.lengthComputable) {\n    // evt.loaded and evt.total are ProgressEvent properties\n    var loaded = evt.loaded / evt.total;\n\n    if (loaded < 1) {// Increase the prog bar length\n      // style.width = (loaded * 200) + \"px\";\n    }\n  }\n}\n\nfunction loaded(evt) {\n  // Obtain the read file data\n  var fileString = evt.target.result; // Handle UTF-16 file dump\n\n  if (utils.regexp.isChinese(fileString)) {//Chinese Characters + Name validation\n  } else {} // run other charset test\n    // xhr.send(fileString)\n\n}\n\nfunction errorHandler(evt) {\n  if (evt.target.error.name == \"NotReadableError\") {// The file could not be read\n  }\n}\n\nclass Upload extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      nom: 'test',\n      value: \"contains\",\n      p: []\n    };\n  }\n\n  query(e) {\n    //var vFile = document.getElementById(\"myfile\").files[0];\n    let vFile = e.target.files[0];\n    let vReader = new FileReader();\n    vReader.readAsText(vFile); //vReader.onload = this.lire(pEvent);\n\n    vReader.onload = function (pEvent) {\n      let vContent = pEvent.target.result;\n      console.log(vContent);\n      let vJson = JSON.parse(vContent);\n      activites.push(vJson.activite);\n      ajouterScenario(vJson.scenarios[0]);\n      ajouterQuete(vJson.quetes[0]);\n      ajouterTache(vJson.taches[0]);\n      console.log(vJson);\n      console.log(vJson.scenarios);\n      console.log(\"chargement terminer\");\n    };\n\n    console.log('upload -------------');\n    console.log(vReader);\n    console.log('upload -------------');\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"file\",\n      name: \"file\",\n      accept: \".json\",\n      onChange: e => this.query(e),\n      multiple: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Upload;","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\Upload.js"],"names":["React","Component","activites","scenarios","taches","quetes","ajouterScenario","ajouterQuete","ajouterTache","startRead","file","document","getElementById","files","getAsText","readFile","reader","FileReader","readAsText","onprogress","updateProgress","onload","loaded","onerror","errorHandler","evt","lengthComputable","total","fileString","target","result","utils","regexp","isChinese","error","name","Upload","constructor","props","state","nom","value","p","query","e","vFile","vReader","pEvent","vContent","console","log","vJson","JSON","parse","push","activite","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport {activites,scenarios,taches,quetes} from \"./data/data\";\r\nimport {ajouterScenario} from \"./fonctions/helper/ScenarioHelper\";\r\nimport {ajouterQuete} from \"./fonctions/helper/QueteHelper\";\r\nimport {ajouterTache} from \"./fonctions/helper/TacheHelper\";\r\n\r\n\r\nfunction startRead() {\r\n    // obtain input element through DOM\r\n\r\n    var file = document.getElementById('file').files[0];\r\n    if(file){\r\n        getAsText(file);\r\n    }\r\n}\r\n\r\nfunction getAsText(readFile) {\r\n\r\n    var reader = new FileReader();\r\n\r\n    // Read file into memory as UTF-16\r\n    reader.readAsText(readFile, \"UTF-16\");\r\n\r\n    // Handle progress, success, and errors\r\n    reader.onprogress = updateProgress;\r\n    reader.onload = loaded;\r\n    reader.onerror = errorHandler;\r\n}\r\n\r\nfunction updateProgress(evt) {\r\n    if (evt.lengthComputable) {\r\n        // evt.loaded and evt.total are ProgressEvent properties\r\n        var loaded = (evt.loaded / evt.total);\r\n        if (loaded < 1) {\r\n            // Increase the prog bar length\r\n            // style.width = (loaded * 200) + \"px\";\r\n        }\r\n    }\r\n}\r\n\r\nfunction loaded(evt) {\r\n    // Obtain the read file data\r\n    var fileString = evt.target.result;\r\n    // Handle UTF-16 file dump\r\n    if(utils.regexp.isChinese(fileString)) {\r\n        //Chinese Characters + Name validation\r\n    }\r\n    else {\r\n        // run other charset test\r\n    }\r\n    // xhr.send(fileString)\r\n}\r\n\r\nfunction errorHandler(evt) {\r\n    if(evt.target.error.name == \"NotReadableError\") {\r\n        // The file could not be read\r\n    }\r\n}\r\n\r\nclass Upload extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            nom:'test',\r\n            value: \"contains\",\r\n            p:[],\r\n        };\r\n    }\r\n\r\n\r\n    query(e) {\r\n        //var vFile = document.getElementById(\"myfile\").files[0];\r\n        let vFile = e.target.files[0];\r\n        let vReader = new FileReader();\r\n        vReader.readAsText(vFile);\r\n        //vReader.onload = this.lire(pEvent);\r\n\r\n\r\n        vReader.onload = function (pEvent) {\r\n            let vContent = pEvent.target.result;\r\n            console.log(vContent);\r\n            let vJson = JSON.parse(vContent);\r\n            activites.push(vJson.activite);\r\n            ajouterScenario(vJson.scenarios[0]);\r\n            ajouterQuete(vJson.quetes[0]);\r\n            ajouterTache(vJson.taches[0]);\r\n            console.log(vJson);\r\n            console.log(vJson.scenarios);\r\n            console.log(\"chargement terminer\");\r\n        };\r\n\r\n        console.log('upload -------------')\r\n        console.log(vReader);\r\n        console.log('upload -------------')\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <input type='file' name='file' accept={\".json\"} onChange={(e)=>this.query(e)} multiple/>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Upload;\r\n"]},"metadata":{},"sourceType":"module"}