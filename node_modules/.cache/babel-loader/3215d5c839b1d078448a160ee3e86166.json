{"ast":null,"code":"/**\r\n * DevExtreme (core/utils/support.js)\r\n * Version: 18.2.8\r\n * Build date: Tue Apr 23 2019\r\n *\r\n * Copyright (c) 2012 - 2019 Developer Express Inc. ALL RIGHTS RESERVED\r\n * Read about DevExtreme licensing here: https://js.devexpress.com/Licensing/\r\n */\n\"use strict\";\n\nvar inArray = require(\"./array\").inArray,\n    domAdapter = require(\"../dom_adapter\"),\n    callOnce = require(\"./call_once\"),\n    windowUtils = require(\"./window\"),\n    navigator = windowUtils.getNavigator(),\n    devices = require(\"../devices\"),\n    styleUtils = require(\"./style\");\n\nvar transitionEndEventNames = {\n  webkitTransition: \"webkitTransitionEnd\",\n  MozTransition: \"transitionend\",\n  OTransition: \"oTransitionEnd\",\n  msTransition: \"MsTransitionEnd\",\n  transition: \"transitionend\"\n};\n\nvar supportProp = function supportProp(prop) {\n  return !!styleUtils.styleProp(prop);\n};\n\nvar isNativeScrollingSupported = function isNativeScrollingSupported() {\n  var realDevice = devices.real(),\n      realPlatform = realDevice.platform,\n      realVersion = realDevice.version,\n      isObsoleteAndroid = realVersion && realVersion[0] < 4 && \"android\" === realPlatform,\n      isNativeScrollDevice = !isObsoleteAndroid && inArray(realPlatform, [\"ios\", \"android\", \"win\"]) > -1 || realDevice.mac;\n  return isNativeScrollDevice;\n};\n\nvar inputType = function inputType(type) {\n  if (\"text\" === type) {\n    return true;\n  }\n\n  var input = domAdapter.createElement(\"input\");\n\n  try {\n    input.setAttribute(\"type\", type);\n    input.value = \"wrongValue\";\n    return !input.value;\n  } catch (e) {\n    return false;\n  }\n};\n\nvar detectTouchEvents = function detectTouchEvents(window, maxTouchPoints) {\n  return (window.hasProperty(\"ontouchstart\") || !!maxTouchPoints) && !window.hasProperty(\"callPhantom\");\n};\n\nvar detectPointerEvent = function detectPointerEvent(window, navigator) {\n  return window.hasProperty(\"PointerEvent\") || !!navigator.pointerEnabled;\n};\n\nvar touchEvents = detectTouchEvents(windowUtils, navigator.maxTouchPoints);\nvar pointerEvents = detectPointerEvent(windowUtils, navigator);\nvar touchPointersPresent = !!navigator.maxTouchPoints || !!navigator.msMaxTouchPoints;\nexports.touchEvents = touchEvents;\nexports.pointerEvents = pointerEvents;\nexports.touch = touchEvents || pointerEvents && touchPointersPresent;\nexports.transition = callOnce(function () {\n  return supportProp(\"transition\");\n});\nexports.transitionEndEventName = callOnce(function () {\n  return transitionEndEventNames[styleUtils.styleProp(\"transition\")];\n});\nexports.animation = callOnce(function () {\n  return supportProp(\"animation\");\n});\nexports.nativeScrolling = isNativeScrollingSupported();\nexports.styleProp = styleUtils.styleProp;\nexports.stylePropPrefix = styleUtils.stylePropPrefix;\nexports.supportProp = supportProp;\nexports.inputType = inputType;","map":null,"metadata":{},"sourceType":"script"}