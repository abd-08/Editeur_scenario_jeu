{"ast":null,"code":"import { activites } from \"../../data/data\";\nimport { compositions } from \"../../types/TypeComposition\";\nimport * as Constantes from \"../../configuration_app/Constants\";\nimport { entites } from \"../../types/TypeEntite\";\nimport { getUniqueID } from \"./AppHelper\";\n/*\r\n    Prend l'id de l'activité en paramètre.\r\n    Retourne son indice dans la liste des activités.\r\n */\n\nexport function accesActiviteIndice(id) {\n  return activites.findIndex(v => v.id === id);\n}\n/*\r\n    Remplace l'activité par une autre\r\n */\n\nexport function modificationActivite(activite, id) {\n  let i = accesActiviteIndice(id);\n  activites[i] = activite;\n}\n/*\r\nexport function supprimerActivite(id){\r\n    activites = activites.filter(a=>a.id!==id);\r\n\r\n    let scenes = scenarios.filter(s=>s.idPere===id);\r\n\r\n    let quest = [];\r\n    for (let i=0;i<scenes.length;i++){\r\n        quest = quetes.filter(q=>q.idPere===scenes[i].id);\r\n        for (let j=0;j<quest.length;j++){\r\n            taches=taches.filter(t=>t.idPere!==quest[j].id);\r\n        }\r\n        quetes=quetes.filter(q=>q.idPere!==scenes[i].id)\r\n    }\r\n    scenarios=scenarios.filter(s=>s.idPere!==id);\r\n    return null;\r\n}\r\n*/\n\nexport function ajouterActivite(nom, descr) {\n  let id = getUniqueID();\n  let activite = {\n    id: id,\n    nom: nom,\n    type: compositions.ACTIVITE,\n    description: descr,\n    nodes: [],\n    links: [],\n    listeEntites: []\n  };\n  activites.push(activite);\n  return null;\n}","map":{"version":3,"sources":["C:\\Users\\abdel\\PhpstormProjects\\update\\src\\fonctions\\helper\\ActiviteHelper.js"],"names":["activites","compositions","Constantes","entites","getUniqueID","accesActiviteIndice","id","findIndex","v","modificationActivite","activite","i","ajouterActivite","nom","descr","type","ACTIVITE","description","nodes","links","listeEntites","push"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,iBAAxB;AACA,SAAQC,YAAR,QAA2B,6BAA3B;AACA,OAAO,KAAKC,UAAZ,MAA4B,mCAA5B;AACA,SAAQC,OAAR,QAAsB,wBAAtB;AACA,SAAQC,WAAR,QAA0B,aAA1B;AAEA;;;;;AAIA,OAAO,SAASC,mBAAT,CAA6BC,EAA7B,EAAgC;AACnC,SAAON,SAAS,CAACO,SAAV,CAAoBC,CAAC,IAAIA,CAAC,CAACF,EAAF,KAASA,EAAlC,CAAP;AACH;AAED;;;;AAGA,OAAO,SAASG,oBAAT,CAA8BC,QAA9B,EAAuCJ,EAAvC,EAA0C;AAC7C,MAAIK,CAAC,GAAGN,mBAAmB,CAACC,EAAD,CAA3B;AACAN,EAAAA,SAAS,CAACW,CAAD,CAAT,GAAaD,QAAb;AACH;AAGD;;;;;;;;;;;;;;;;;;;AAkBA,OAAO,SAASE,eAAT,CAAyBC,GAAzB,EAA6BC,KAA7B,EAAoC;AACvC,MAAIR,EAAE,GAAGF,WAAW,EAApB;AACA,MAAIM,QAAQ,GAAG;AACXJ,IAAAA,EAAE,EAACA,EADQ;AAEXO,IAAAA,GAAG,EAACA,GAFO;AAGXE,IAAAA,IAAI,EAACd,YAAY,CAACe,QAHP;AAIXC,IAAAA,WAAW,EAAEH,KAJF;AAKXI,IAAAA,KAAK,EAAE,EALI;AAMXC,IAAAA,KAAK,EAAE,EANI;AAOXC,IAAAA,YAAY,EAAE;AAPH,GAAf;AASApB,EAAAA,SAAS,CAACqB,IAAV,CAAeX,QAAf;AAEA,SAAO,IAAP;AACH","sourcesContent":["import {activites} from \"../../data/data\";\r\nimport {compositions} from \"../../types/TypeComposition\";\r\nimport * as Constantes from \"../../configuration_app/Constants\";\r\nimport {entites} from \"../../types/TypeEntite\";\r\nimport {getUniqueID} from \"./AppHelper\";\r\n\r\n/*\r\n    Prend l'id de l'activité en paramètre.\r\n    Retourne son indice dans la liste des activités.\r\n */\r\nexport function accesActiviteIndice(id){\r\n    return activites.findIndex(v => v.id === id);\r\n}\r\n\r\n/*\r\n    Remplace l'activité par une autre\r\n */\r\nexport function modificationActivite(activite,id){\r\n    let i = accesActiviteIndice(id);\r\n    activites[i]=activite;\r\n}\r\n\r\n\r\n/*\r\nexport function supprimerActivite(id){\r\n    activites = activites.filter(a=>a.id!==id);\r\n\r\n    let scenes = scenarios.filter(s=>s.idPere===id);\r\n\r\n    let quest = [];\r\n    for (let i=0;i<scenes.length;i++){\r\n        quest = quetes.filter(q=>q.idPere===scenes[i].id);\r\n        for (let j=0;j<quest.length;j++){\r\n            taches=taches.filter(t=>t.idPere!==quest[j].id);\r\n        }\r\n        quetes=quetes.filter(q=>q.idPere!==scenes[i].id)\r\n    }\r\n    scenarios=scenarios.filter(s=>s.idPere!==id);\r\n    return null;\r\n}\r\n*/\r\nexport function ajouterActivite(nom,descr) {\r\n    let id = getUniqueID();\r\n    let activite = {\r\n        id:id,\r\n        nom:nom,\r\n        type:compositions.ACTIVITE,\r\n        description: descr,\r\n        nodes: [],\r\n        links: [],\r\n        listeEntites: [],\r\n    }\r\n    activites.push(activite);\r\n\r\n    return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}